<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="360" failures="20" errors="0" time="14.105827127">
    <testsuite name="src/main.test.tsx" timestamp="2025-04-07T14:48:14.556Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/pages/Dashboard.test.tsx" timestamp="2025-04-07T14:48:14.557Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/App.test.tsx" timestamp="2025-04-07T14:48:14.557Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="2" time="0">
        <testcase classname="src/presentation/App.test.tsx" name="index &gt; renders with neural precision" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/presentation/App.test.tsx" name="index &gt; responds to user interaction with quantum precision" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="src/test/absolute-minimal.spec.tsx" timestamp="2025-04-07T14:48:14.557Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/test/minimal-brain-container.spec.tsx" timestamp="2025-04-07T14:48:14.557Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/test/minimal-brain-test.spec.ts" timestamp="2025-04-07T14:48:14.557Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/test/minimal-ts.test.ts" timestamp="2025-04-07T14:48:14.558Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/test/minimal.test.ts" timestamp="2025-04-07T14:48:14.558Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/test/neural-standalone.spec.tsx" timestamp="2025-04-07T14:48:14.558Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/test/sanity.test.ts" timestamp="2025-04-07T14:48:14.558Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/test/standalone-brain-test.spec.tsx" timestamp="2025-04-07T14:48:14.558Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.025235916">
        <testcase classname="src/test/standalone-brain-test.spec.tsx" name="Standalone Brain Container Test &gt; renders the standalone container with quantum precision" time="0.022949084">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:03.167Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/test/tailwind-example.unified.test.tsx" timestamp="2025-04-07T14:48:14.558Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/test/tailwind-testing-example.test.tsx" timestamp="2025-04-07T14:48:14.558Z" hostname="MacBookPro" tests="4" failures="0" errors="0" skipped="0" time="0.03652">
        <testcase classname="src/test/tailwind-testing-example.test.tsx" name="Tailwind CSS Testing with Unified Setup &gt; renders component with correct light mode classes" time="0.004103417">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:12.037Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/test/tailwind-testing-example.test.tsx" name="Tailwind CSS Testing with Unified Setup &gt; renders component with correct dark mode classes when dark mode is enabled" time="0.004214833">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:12.033Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/test/tailwind-testing-example.test.tsx" name="Tailwind CSS Testing with Unified Setup &gt; can toggle dark mode during test execution" time="0.023190584">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:12.019Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/test/tailwind-testing-example.test.tsx" name="Tailwind CSS Testing with Unified Setup &gt; simulates clicking a button with tailwind classes" time="0.00276625">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:12.040Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/test/vite-env.d.test.ts" timestamp="2025-04-07T14:48:14.559Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.001848209">
        <testcase classname="src/test/vite-env.d.test.ts" name="Vite Environment Types &gt; verifies Vite types with clinical precision" time="0.000828417">
        </testcase>
        <testcase classname="src/test/vite-env.d.test.ts" name="Vite Environment Types &gt; maintains neural precision with custom environment variables" time="0.000230125">
        </testcase>
    </testsuite>
    <testsuite name="src/application/contexts/ThemeContext.test.tsx" timestamp="2025-04-07T14:48:14.560Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/application/contexts/ThemeProviderComponent.test.tsx" timestamp="2025-04-07T14:48:14.560Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/application/controllers/ClinicalPredictionController.runtime.test.ts" timestamp="2025-04-07T14:48:14.560Z" hostname="MacBookPro" tests="12" failures="0" errors="0" skipped="0" time="0.004915792">
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateSymptomPredictionParams &gt; should return Ok for valid SymptomPredictionParams" time="0.00007375">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateSymptomPredictionParams &gt; should return Err for non-object input" time="0.000123917">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateSymptomPredictionParams &gt; should return Err for params missing required fields (patientId)" time="0.000248916">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateSymptomPredictionParams &gt; should return Err for params with incorrect field types (symptomIds)" time="0.0002355">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateConfigurePredictionParams &gt; should return Ok for valid ConfigurePredictionParams" time="0.000092542">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateConfigurePredictionParams &gt; should return Ok for empty config object" time="0.000413334">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateConfigurePredictionParams &gt; should return Err for invalid field value (predictionHorizon)" time="0.00025625">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validatePredictionResultData &gt; should return Ok for valid PredictionResultData (basic object check)" time="0.000656458">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validatePredictionResultData &gt; should return Err for non-object input" time="0.001009792">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateRiskAssessmentData &gt; should return Ok for valid RiskAssessmentData" time="0.000062833">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateRiskAssessmentData &gt; should return Err for non-object input" time="0.000185584">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateRiskAssessmentData &gt; should return Err for data missing required fields (overallRisk)" time="0.000203375">
        </testcase>
    </testsuite>
    <testsuite name="src/application/providers/ThemeProvider.enhanced.test.tsx" timestamp="2025-04-07T14:48:14.561Z" hostname="MacBookPro" tests="6" failures="0" errors="0" skipped="2" time="0.094634959">
        <testcase classname="src/application/providers/ThemeProvider.enhanced.test.tsx" name="ThemeProvider (Enhanced Tests with renderWithProviders) &gt; initializes with default theme (clinical/light)" time="0.002126458">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:10.439Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/application/providers/ThemeProvider.enhanced.test.tsx" name="ThemeProvider (Enhanced Tests with renderWithProviders) &gt; toggles to dark mode via setTheme" time="0.073510083">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:10.359Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:10.415Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to dark&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/application/providers/ThemeProvider.enhanced.test.tsx" name="ThemeProvider (Enhanced Tests with renderWithProviders) &gt; toggles back to light mode via setTheme" time="0.012300041">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:10.427Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to dark&apos;[39m
}
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:10.437Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to light&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/application/providers/ThemeProvider.enhanced.test.tsx" name="ThemeProvider (Enhanced Tests with renderWithProviders) &gt; respects localStorage preference on initial render" time="0.004569333">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:10.422Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to dark&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/application/providers/ThemeProvider.enhanced.test.tsx" name="ThemeProvider (Enhanced Tests with renderWithProviders) &gt; uses system preference when theme is set to system" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/application/providers/ThemeProvider.enhanced.test.tsx" name="ThemeProvider (Enhanced Tests with renderWithProviders) &gt; updates theme when system preference changes while set to system" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="src/application/providers/ThemeProvider.test.tsx" timestamp="2025-04-07T14:48:14.562Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/application/hooks/useBlockingTransition.test.ts" timestamp="2025-04-07T14:48:14.562Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/application/hooks/useBrainModel.runtime.test.ts" timestamp="2025-04-07T14:48:14.562Z" hostname="MacBookPro" tests="8" failures="0" errors="0" skipped="0" time="0.004257459">
        <testcase classname="src/application/hooks/useBrainModel.runtime.test.ts" name="useBrainModel Runtime Validation &gt; validateBrainModelData &gt; should return Ok for a valid BrainModel object" time="0.000348959">
        </testcase>
        <testcase classname="src/application/hooks/useBrainModel.runtime.test.ts" name="useBrainModel Runtime Validation &gt; validateBrainModelData &gt; should return Err for non-object input" time="0.000237875">
        </testcase>
        <testcase classname="src/application/hooks/useBrainModel.runtime.test.ts" name="useBrainModel Runtime Validation &gt; validateBrainModelData &gt; should return Err for null input" time="0.000218458">
        </testcase>
        <testcase classname="src/application/hooks/useBrainModel.runtime.test.ts" name="useBrainModel Runtime Validation &gt; validateBrainModelData &gt; should return Err for an empty object" time="0.000156959">
        </testcase>
        <testcase classname="src/application/hooks/useBrainModel.runtime.test.ts" name="useBrainModel Runtime Validation &gt; validateBrainModelData &gt; should return Err for data missing required fields (e.g., id)" time="0.00020875">
        </testcase>
        <testcase classname="src/application/hooks/useBrainModel.runtime.test.ts" name="useBrainModel Runtime Validation &gt; validateBrainModelData &gt; should return Err for data missing required fields (e.g., regions)" time="0.000269209">
        </testcase>
        <testcase classname="src/application/hooks/useBrainModel.runtime.test.ts" name="useBrainModel Runtime Validation &gt; validateBrainModelData &gt; should return Err for data with incorrect field types (e.g., regions is not an array)" time="0.000164667">
        </testcase>
        <testcase classname="src/application/hooks/useBrainModel.runtime.test.ts" name="useBrainModel Runtime Validation &gt; validateBrainModelData &gt; should return Err for data with invalid nested BrainRegion structure" time="0.001700125">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useBrainModel.test.tsx" timestamp="2025-04-07T14:48:14.563Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/application/hooks/useBrainVisualization.runtime.test.ts" timestamp="2025-04-07T14:48:14.563Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/application/hooks/useBrainVisualization.test.ts" timestamp="2025-04-07T14:48:14.563Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/application/hooks/useBrainVisualization.test.tsx" timestamp="2025-04-07T14:48:14.563Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/application/hooks/useClinicalContext.runtime.test.ts" timestamp="2025-04-07T14:48:14.563Z" hostname="MacBookPro" tests="19" failures="0" errors="0" skipped="0" time="0.005323292">
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateRiskAssessment &gt; should return Ok for valid RiskAssessment" time="0.000065417">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateRiskAssessment &gt; should return Err for invalid RiskAssessment (missing fields)" time="0.000142">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateRiskAssessment &gt; should return Err for non-object input" time="0.000093625">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateTreatmentResponsePredictionArray &gt; should return Ok for a valid array of TreatmentResponsePrediction" time="0.000114708">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateTreatmentResponsePredictionArray &gt; should return Ok for an empty array" time="0.000305583">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateTreatmentResponsePredictionArray &gt; should return Err for non-array input" time="0.000344833">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateTreatmentResponsePredictionArray &gt; should return Err for an array containing invalid items" time="0.000118625">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateSymptomMappingArray &gt; should return Ok for a valid array of SymptomNeuralMapping" time="0.000076833">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateSymptomMappingArray &gt; should return Ok for an empty array" time="0.000065125">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateSymptomMappingArray &gt; should return Err for non-array input" time="0.000148792">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateSymptomMappingArray &gt; should return Err for an array containing invalid items" time="0.000105292">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateDiagnosisMappingArray &gt; should return Ok for a valid array of DiagnosisNeuralMapping" time="0.000059542">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateDiagnosisMappingArray &gt; should return Ok for an empty array" time="0.000034291">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateDiagnosisMappingArray &gt; should return Err for non-array input" time="0.000107958">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateDiagnosisMappingArray &gt; should return Err for an array containing invalid items" time="0.000093958">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateTreatmentMappingArray &gt; should return Ok for a valid array of TreatmentNeuralMapping" time="0.000152958">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateTreatmentMappingArray &gt; should return Ok for an empty array" time="0.000117">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateTreatmentMappingArray &gt; should return Err for non-array input" time="0.001539417">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateTreatmentMappingArray &gt; should return Err for an array containing invalid items" time="0.000342084">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useClinicalContext.test.ts" timestamp="2025-04-07T14:48:14.564Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/application/hooks/usePatientData.runtime.test.ts" timestamp="2025-04-07T14:48:14.565Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/application/hooks/usePatientData.test.ts" timestamp="2025-04-07T14:48:14.565Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.003122667">
        <testcase classname="src/application/hooks/usePatientData.test.ts" name="usePatientData &gt; processes data with mathematical precision" time="0.001520208">
        </testcase>
        <testcase classname="src/application/hooks/usePatientData.test.ts" name="usePatientData &gt; handles edge cases with clinical precision" time="0.000839167">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useSearchParams.runtime.test.ts" timestamp="2025-04-07T14:48:14.565Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/application/hooks/useSearchParams.test.tsx" timestamp="2025-04-07T14:48:14.565Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.012498917">
        <testcase classname="src/application/hooks/useSearchParams.test.tsx" name="useSearchParams &gt; processes data with mathematical precision" time="0.008498541">
        </testcase>
        <testcase classname="src/application/hooks/useSearchParams.test.tsx" name="useSearchParams &gt; handles edge cases with clinical precision" time="0.003178666">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useTheme.runtime.test.ts" timestamp="2025-04-07T14:48:14.565Z" hostname="MacBookPro" tests="13" failures="0" errors="0" skipped="0" time="0.005561834">
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Ok for a valid ThemeSettings object" time="0.000176583">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Ok for another valid ThemeSettings object (dark)" time="0.000956625">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Err for non-object input" time="0.000285917">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Err for null input" time="0.000165375">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Err for an empty object (missing required fields)" time="0.000123542">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Err for data missing a required field (e.g., name)" time="0.000246334">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Err for data with invalid theme name" time="0.0001355">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Err for data with incorrect field type (e.g., glowIntensity)" time="0.000173958">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Err for data with incorrect field type (e.g., useBloom)" time="0.000945292">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Err for data missing a required color field (e.g., primaryColor)" time="0.000399958">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeOption &gt; should return Ok for valid ThemeOption values" time="0.000098">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeOption &gt; should return Err for invalid ThemeOption values" time="0.000581125">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeOption &gt; should return specific error message for invalid option" time="0.000108792">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useTheme.test.tsx" timestamp="2025-04-07T14:48:14.566Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="1" time="0.008767416">
        <testcase classname="src/application/hooks/useTheme.test.tsx" name="useTheme &gt; returns the theme context value when used within a provider" time="0.007896084">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.test.tsx" name="useTheme &gt; throws an error when used outside a provider" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useTreatmentPrediction.runtime.test.ts" timestamp="2025-04-07T14:48:14.566Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/application/hooks/useTreatmentPrediction.test.ts" timestamp="2025-04-07T14:48:14.566Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/application/hooks/useVisualSettings.runtime.test.ts" timestamp="2025-04-07T14:48:14.566Z" hostname="MacBookPro" tests="13" failures="0" errors="0" skipped="0" time="0.005237417">
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validatePartialVisualizationSettings &gt; should return Ok for a valid Partial&lt;VisualizationSettings&gt; object" time="0.000090709">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validatePartialVisualizationSettings &gt; should return Ok for an empty object (all fields optional)" time="0.000387291">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validatePartialVisualizationSettings &gt; should return Err for non-object input" time="0.000231416">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validatePartialVisualizationSettings &gt; should return Err for null input" time="0.000196167">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validatePartialVisualizationSettings &gt; should return Err for data with incorrect field type (e.g., showLabels)" time="0.00015975">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validatePartialVisualizationSettings &gt; should return Err for data with invalid enum value (e.g., renderMode)" time="0.000247541">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validatePartialVisualizationSettings &gt; should return Err for data with invalid enum value (e.g., levelOfDetail)" time="0.000128167">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validatePartialVisualizationSettings &gt; should return Err for invalid cameraPosition" time="0.001648667">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validateFullThemeSettings &gt; should return Ok for a valid ThemeSettings object" time="0.000081583">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validateFullThemeSettings &gt; should return Err for non-object input" time="0.000195208">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validateFullThemeSettings &gt; should return Err for an empty object (missing required fields)" time="0.000166291">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validateFullThemeSettings &gt; should return Err for data missing a required field (e.g., name)" time="0.000126042">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validateFullThemeSettings &gt; should return Err for data with incorrect field type (e.g., glowIntensity)" time="0.000359375">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useVisualSettings.test.ts" timestamp="2025-04-07T14:48:14.568Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.003043083">
        <testcase classname="src/application/hooks/useVisualSettings.test.ts" name="useVisualSettings &gt; processes data with mathematical precision" time="0.001102">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.test.ts" name="useVisualSettings &gt; handles edge cases with clinical precision" time="0.001179208">
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/BiometricStreamController.test.ts" timestamp="2025-04-07T14:48:14.568Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/application/services/ClinicalPredictionController.test.ts" timestamp="2025-04-07T14:48:14.568Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.009371209">
        <testcase classname="src/application/services/ClinicalPredictionController.test.ts" name="useClinicalPredictionController &gt; processes data with mathematical precision" time="0.00734125">
        </testcase>
        <testcase classname="src/application/services/ClinicalPredictionController.test.ts" name="useClinicalPredictionController &gt; handles edge cases with clinical precision" time="0.001111417">
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/NeuralActivityController.test.ts" timestamp="2025-04-07T14:48:14.568Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.002405625">
        <testcase classname="src/application/services/NeuralActivityController.test.ts" name="NeuralActivityController (Minimal) &gt; exists as a module" time="0.001525917">
            <system-out>
WebGL mocks set up

WebGL mocks cleaned up

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/NeuroSyncOrchestrator.test.ts" timestamp="2025-04-07T14:48:14.568Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/application/services/TemporalDynamicsController.test.ts" timestamp="2025-04-07T14:48:14.568Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.009495292">
        <testcase classname="src/application/services/TemporalDynamicsController.test.ts" name="useTemporalDynamicsController &gt; processes data with mathematical precision" time="0.007458041">
        </testcase>
        <testcase classname="src/application/services/TemporalDynamicsController.test.ts" name="useTemporalDynamicsController &gt; handles edge cases with clinical precision" time="0.001156583">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/models/index.test.ts" timestamp="2025-04-07T14:48:14.569Z" hostname="MacBookPro" tests="4" failures="0" errors="0" skipped="0" time="0.002069792">
        <testcase classname="src/domain/models/index.test.ts" name="Domain models index exports &gt; exports brain model functions" time="0.000200417">
        </testcase>
        <testcase classname="src/domain/models/index.test.ts" name="Domain models index exports &gt; exports brain mapping functions" time="0.000370167">
        </testcase>
        <testcase classname="src/domain/models/index.test.ts" name="Domain models index exports &gt; exports patient model functions" time="0.000628125">
        </testcase>
        <testcase classname="src/domain/models/index.test.ts" name="Domain models index exports &gt; does not export legacy model implementations" time="0.00007925">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/utils/brainDataTransformer.runtime.test.ts" timestamp="2025-04-07T14:48:14.569Z" hostname="MacBookPro" tests="17" failures="0" errors="0" skipped="0" time="0.005874958">
        <testcase classname="src/domain/utils/brainDataTransformer.runtime.test.ts" name="brainDataTransformer Runtime Validation &gt; validateBrainModelData &gt; should return Ok for valid BrainModel data" time="0.000070083">
        </testcase>
        <testcase classname="src/domain/utils/brainDataTransformer.runtime.test.ts" name="brainDataTransformer Runtime Validation &gt; validateBrainModelData &gt; should return Err for data missing regions" time="0.000107417">
        </testcase>
        <testcase classname="src/domain/utils/brainDataTransformer.runtime.test.ts" name="brainDataTransformer Runtime Validation &gt; validateBrainModelData &gt; should return Err for data with invalid connections array" time="0.00018">
        </testcase>
        <testcase classname="src/domain/utils/brainDataTransformer.runtime.test.ts" name="brainDataTransformer Runtime Validation &gt; validateBrainModelData &gt; should return Err for non-object input" time="0.000212417">
        </testcase>
        <testcase classname="src/domain/utils/brainDataTransformer.runtime.test.ts" name="brainDataTransformer Runtime Validation &gt; validateBrainRegionArray &gt; should return Ok for valid BrainRegion array" time="0.000189">
        </testcase>
        <testcase classname="src/domain/utils/brainDataTransformer.runtime.test.ts" name="brainDataTransformer Runtime Validation &gt; validateBrainRegionArray &gt; should return Ok for empty array" time="0.000139625">
        </testcase>
        <testcase classname="src/domain/utils/brainDataTransformer.runtime.test.ts" name="brainDataTransformer Runtime Validation &gt; validateBrainRegionArray &gt; should return Err for array with invalid BrainRegion objects" time="0.000324916">
        </testcase>
        <testcase classname="src/domain/utils/brainDataTransformer.runtime.test.ts" name="brainDataTransformer Runtime Validation &gt; validateBrainRegionArray &gt; should return Err for non-array input" time="0.0001435">
        </testcase>
        <testcase classname="src/domain/utils/brainDataTransformer.runtime.test.ts" name="brainDataTransformer Runtime Validation &gt; validateRenderMode &gt; should return Ok for valid RenderMode values" time="0.000630125">
        </testcase>
        <testcase classname="src/domain/utils/brainDataTransformer.runtime.test.ts" name="brainDataTransformer Runtime Validation &gt; validateRenderMode &gt; should return Err for invalid string values" time="0.001042459">
        </testcase>
        <testcase classname="src/domain/utils/brainDataTransformer.runtime.test.ts" name="brainDataTransformer Runtime Validation &gt; validateRenderMode &gt; should return Err for non-string input" time="0.000226583">
        </testcase>
        <testcase classname="src/domain/utils/brainDataTransformer.runtime.test.ts" name="brainDataTransformer Runtime Validation &gt; validateThemeSettings &gt; should return Ok for valid ThemeSettings object" time="0.000072541">
        </testcase>
        <testcase classname="src/domain/utils/brainDataTransformer.runtime.test.ts" name="brainDataTransformer Runtime Validation &gt; validateThemeSettings &gt; should return Err for invalid ThemeSettings object (wrong type)" time="0.000197541">
        </testcase>
        <testcase classname="src/domain/utils/brainDataTransformer.runtime.test.ts" name="brainDataTransformer Runtime Validation &gt; validateThemeSettings &gt; should return Err for non-object input" time="0.000112083">
        </testcase>
        <testcase classname="src/domain/utils/brainDataTransformer.runtime.test.ts" name="brainDataTransformer Runtime Validation &gt; isThemeSettings &gt; should return true for valid theme settings" time="0.000090709">
        </testcase>
        <testcase classname="src/domain/utils/brainDataTransformer.runtime.test.ts" name="brainDataTransformer Runtime Validation &gt; isThemeSettings &gt; should return false for object missing properties" time="0.000625292">
        </testcase>
        <testcase classname="src/domain/utils/brainDataTransformer.runtime.test.ts" name="brainDataTransformer Runtime Validation &gt; isThemeSettings &gt; should return false for object with wrong property type" time="0.000121917">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/utils/brainDataTransformer.test.ts" timestamp="2025-04-07T14:48:14.570Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.003251625">
        <testcase classname="src/domain/utils/brainDataTransformer.test.ts" name="transformBrainData &gt; processes data with mathematical precision" time="0.002048667">
            <system-err>
Invalid data passed to transformBrainData: Invalid BrainModel data structure.

            </system-err>
        </testcase>
        <testcase classname="src/domain/utils/brainDataTransformer.test.ts" name="transformBrainData &gt; handles edge cases with clinical precision" time="0.000403833">
            <system-err>
Invalid data passed to transformBrainData: Invalid BrainModel data structure.

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="src/domain/utils/index.test.ts" timestamp="2025-04-07T14:48:14.570Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/domain/utils/progressiveLoader.runtime.test.ts" timestamp="2025-04-07T14:48:14.570Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/domain/utils/progressiveLoader.test.ts" timestamp="2025-04-07T14:48:14.570Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.002673375">
        <testcase classname="src/domain/utils/progressiveLoader.test.ts" name="loadRegionsProgressively &gt; processes data with mathematical precision" time="0.001544625">
        </testcase>
        <testcase classname="src/domain/utils/progressiveLoader.test.ts" name="loadRegionsProgressively &gt; handles edge cases with clinical precision" time="0.00028825">
        </testcase>
    </testsuite>
    <testsuite name="src/infrastructure/api/ApiClient.runtime.test.ts" timestamp="2025-04-07T14:48:14.571Z" hostname="MacBookPro" tests="18" failures="0" errors="0" skipped="0" time="0.005184041">
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; validateApiResponse &gt; should return Ok for valid data matching the guard" time="0.000176875">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; validateApiResponse &gt; should return Ok for valid array data matching the array guard" time="0.000332916">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; validateApiResponse &gt; should return Err for data not matching the guard (missing field)" time="0.000187709">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; validateApiResponse &gt; should return Err for data not matching the guard (wrong type)" time="0.000123833">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; validateApiResponse &gt; should return Err for array data not matching the array guard" time="0.000323875">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; validateApiResponse &gt; should return Err for non-object input when expecting object" time="0.000183917">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; validateApiResponse &gt; should return Err for non-array input when expecting array" time="0.000266708">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; validateApiResponse &gt; should include context in the error message" time="0.000949667">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; validateApiResponse &gt; should handle unserializable data in error message" time="0.000217541">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; isApiPatient &gt; should return true for valid patient object" time="0.000116125">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; isApiPatient &gt; should return false for invalid patient object (missing name)" time="0.000134041">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; isApiPatient &gt; should return false for invalid patient object (wrong id type)" time="0.000095291">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; isApiPatient &gt; should return false for null" time="0.000064167">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; isApiPatient &gt; should return false for non-object" time="0.000651416">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; isApiPatientArray &gt; should return true for valid patient array" time="0.000040792">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; isApiPatientArray &gt; should return false for invalid patient array" time="0.000045375">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; isApiPatientArray &gt; should return false for non-array" time="0.000082625">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; isApiPatientArray &gt; should return true for empty array" time="0.000038125">
        </testcase>
    </testsuite>
    <testsuite name="src/infrastructure/api/ApiClient.test.ts" timestamp="2025-04-07T14:48:14.572Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/infrastructure/api/ApiGateway.test.ts" timestamp="2025-04-07T14:48:14.572Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/infrastructure/api/EnhancedMockApiClient.test.ts" timestamp="2025-04-07T14:48:14.572Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/infrastructure/api/IApiClient.test.ts" timestamp="2025-04-07T14:48:14.572Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.007895416">
        <testcase classname="src/infrastructure/api/IApiClient.test.ts" name="IApiClient &gt; processes data with mathematical precision" time="0.005728292">
            <system-err>
Promise returned by `expect(actual).resolves.toEqual(expected)` was not awaited. Vitest currently auto-awaits hanging assertions at the end of the test, but this will cause the test to fail in Vitest 3. Please remember to await the assertion.
    at /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/infrastructure/api/IApiClient.test.ts:32:18

            </system-err>
        </testcase>
        <testcase classname="src/infrastructure/api/IApiClient.test.ts" name="IApiClient &gt; handles edge cases with clinical precision" time="0.001364375">
            <system-err>
Promise returned by `expect(actual).rejects.toThrow(expected)` was not awaited. Vitest currently auto-awaits hanging assertions at the end of the test, but this will cause the test to fail in Vitest 3. Please remember to await the assertion.
    at /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/infrastructure/api/IApiClient.test.ts:56:63

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="src/infrastructure/api/MockApiClient.test.ts" timestamp="2025-04-07T14:48:14.572Z" hostname="MacBookPro" tests="3" failures="1" errors="0" skipped="0" time="0.005137458">
        <testcase classname="src/infrastructure/api/MockApiClient.test.ts" name="mockApiClient &gt; generates brain models with mathematical precision" time="0.0003095">
        </testcase>
        <testcase classname="src/infrastructure/api/MockApiClient.test.ts" name="mockApiClient &gt; handles default patient ID with clinical precision" time="0.001062584">
        </testcase>
        <testcase classname="src/infrastructure/api/MockApiClient.test.ts" name="mockApiClient &gt; returns consistent model structure with quantum-level type safety" time="0.002901958">
            <failure message="expected { …(9) } to have property &quot;pathways&quot;" type="AssertionError">
AssertionError: expected { …(9) } to have property &quot;pathways&quot;
 ❯ src/infrastructure/api/MockApiClient.test.ts:50:20
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/infrastructure/api/XGBoostService.runtime.test.ts" timestamp="2025-04-07T14:48:14.573Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/infrastructure/api/XGBoostService.test.ts" timestamp="2025-04-07T14:48:14.573Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.001498791">
        <testcase classname="src/infrastructure/api/XGBoostService.test.ts" name="XGBoostService &gt; processes data with mathematical precision" time="0.00058925">
        </testcase>
        <testcase classname="src/infrastructure/api/XGBoostService.test.ts" name="XGBoostService &gt; handles edge cases with clinical precision" time="0.000140459">
        </testcase>
    </testsuite>
    <testsuite name="src/infrastructure/api/mockApi.test.ts" timestamp="2025-04-07T14:48:14.574Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/infrastructure/config/initializeApp.test.ts" timestamp="2025-04-07T14:48:14.574Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/common/AdaptiveLOD.test.tsx" timestamp="2025-04-07T14:48:14.574Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.002057667">
        <testcase classname="src/presentation/common/AdaptiveLOD.test.tsx" name="AdaptiveLOD (Minimal) &gt; exists as a module" time="0.000574583">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/common/LoadingFallback.test.tsx" timestamp="2025-04-07T14:48:14.574Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/common/LoadingFallback.test.tsx" name="src/presentation/common/LoadingFallback.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot read properties of undefined (reading &apos;S&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;S&apos;)
 ❯ Function.process.env.NODE_ENV.module.exports [as default] node_modules/react-reconciler/cjs/react-reconciler.development.js:15915:58
 ❯ createReconciler node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:1263:52
 ❯ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:1564:35
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/common/PerformanceMonitor.test.tsx" timestamp="2025-04-07T14:48:14.574Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.001388083">
        <testcase classname="src/presentation/common/PerformanceMonitor.test.tsx" name="PerformanceMonitor (Minimal) &gt; exists as a module" time="0.000525125">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/common/VisualizationErrorBoundary.test.tsx" timestamp="2025-04-07T14:48:14.574Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.010348959">
        <testcase classname="src/presentation/common/VisualizationErrorBoundary.test.tsx" name="VisualizationErrorBoundary &gt; renders with neural precision" time="0.008145">
        </testcase>
        <testcase classname="src/presentation/common/VisualizationErrorBoundary.test.tsx" name="VisualizationErrorBoundary &gt; responds to user interaction with quantum precision" time="0.00133275">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/atoms/ActivityIndicator.test.tsx" timestamp="2025-04-07T14:48:14.575Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/atoms/Button.test.tsx" timestamp="2025-04-07T14:48:14.575Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/atoms/Card.test.tsx" timestamp="2025-04-07T14:48:14.575Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/atoms/ConnectionLine.test.tsx" timestamp="2025-04-07T14:48:14.575Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/atoms/ConnectionLine.test.tsx" name="src/presentation/atoms/ConnectionLine.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/presentation/atoms/ConnectionLine.tsx:7:1
 ❯ src/presentation/atoms/ConnectionLine.test.tsx:8:1

Caused by: Caused by: TypeError: Cannot read properties of undefined (reading &apos;S&apos;)
 ❯ Function.process.env.NODE_ENV.module.exports [as default] node_modules/react-reconciler/cjs/react-reconciler.development.js:15915:58
 ❯ createReconciler node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:1263:52
 ❯ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:1564:35
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/atoms/DocumentTitle.test.tsx" timestamp="2025-04-07T14:48:14.575Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/atoms/NeuralCorrelationBadge.test.tsx" timestamp="2025-04-07T14:48:14.575Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/atoms/RegionMesh.test.tsx" timestamp="2025-04-07T14:48:14.575Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/atoms/RegionSelectionIndicator.test.tsx" timestamp="2025-04-07T14:48:14.575Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.033921083">
        <testcase classname="src/presentation/atoms/RegionSelectionIndicator.test.tsx" name="RegionSelectionIndicator &gt; renders the mock mesh when selected" time="0.027495708">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:08.770Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
            <system-err>
Warning: &lt;sphereGeometry /&gt; is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.
    at sphereGeometry
    at div
    at /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/RegionSelectionIndicator.test.tsx:79:14
    at RegionSelectionIndicator (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/RegionSelectionIndicator.tsx:58:3)
    at ThemeProvider (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/application/providers/ThemeProvider.tsx:19:3)
    at QueryClientProvider (file:///Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js:20:3)
    at Router (file:///Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-router/dist/development/chunk-KNED5TY2.mjs:5513:13)
    at BrowserRouter (file:///Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-router/dist/development/chunk-KNED5TY2.mjs:7797:3)
    at AllProviders (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/test/test-utils.unified.tsx:60:3)
    at Wrapper (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/test/test-utils.unified.tsx:98:22)
Warning: The tag &lt;sphereGeometry&gt; is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.
    at sphereGeometry
    at div
    at /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/RegionSelectionIndicator.test.tsx:79:14
    at RegionSelectionIndicator (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/RegionSelectionIndicator.tsx:58:3)
    at ThemeProvider (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/application/providers/ThemeProvider.tsx:19:3)
    at QueryClientProvider (file:///Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js:20:3)
    at Router (file:///Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-router/dist/development/chunk-KNED5TY2.mjs:5513:13)
    at BrowserRouter (file:///Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-router/dist/development/chunk-KNED5TY2.mjs:7797:3)
    at AllProviders (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/test/test-utils.unified.tsx:60:3)
    at Wrapper (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/test/test-utils.unified.tsx:98:22)
Warning: &lt;shaderMaterial /&gt; is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.
    at shaderMaterial
    at div
    at /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/RegionSelectionIndicator.test.tsx:79:14
    at RegionSelectionIndicator (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/RegionSelectionIndicator.tsx:58:3)
    at ThemeProvider (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/application/providers/ThemeProvider.tsx:19:3)
    at QueryClientProvider (file:///Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js:20:3)
    at Router (file:///Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-router/dist/development/chunk-KNED5TY2.mjs:5513:13)
    at BrowserRouter (file:///Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-router/dist/development/chunk-KNED5TY2.mjs:7797:3)
    at AllProviders (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/test/test-utils.unified.tsx:60:3)
    at Wrapper (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/test/test-utils.unified.tsx:98:22)
Warning: The tag &lt;shaderMaterial&gt; is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.
    at shaderMaterial
    at div
    at /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/RegionSelectionIndicator.test.tsx:79:14
    at RegionSelectionIndicator (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/RegionSelectionIndicator.tsx:58:3)
    at ThemeProvider (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/application/providers/ThemeProvider.tsx:19:3)
    at QueryClientProvider (file:///Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js:20:3)
    at Router (file:///Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-router/dist/development/chunk-KNED5TY2.mjs:5513:13)
    at BrowserRouter (file:///Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-router/dist/development/chunk-KNED5TY2.mjs:7797:3)
    at AllProviders (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/test/test-utils.unified.tsx:60:3)
    at Wrapper (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/test/test-utils.unified.tsx:98:22)

            </system-err>
        </testcase>
        <testcase classname="src/presentation/atoms/RegionSelectionIndicator.test.tsx" name="RegionSelectionIndicator &gt; renders the mock mesh when not selected" time="0.003691958">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:08.780Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
            <system-err>
Warning: &lt;sphereGeometry /&gt; is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.
    at sphereGeometry
    at div
    at /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/RegionSelectionIndicator.test.tsx:79:14
    at RegionSelectionIndicator (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/RegionSelectionIndicator.tsx:58:3)
    at ThemeProvider (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/application/providers/ThemeProvider.tsx:19:3)
    at QueryClientProvider (file:///Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js:20:3)
    at Router (file:///Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-router/dist/development/chunk-KNED5TY2.mjs:5513:13)
    at BrowserRouter (file:///Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-router/dist/development/chunk-KNED5TY2.mjs:7797:3)
    at AllProviders (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/test/test-utils.unified.tsx:60:3)
    at Wrapper (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/test/test-utils.unified.tsx:98:22)
Warning: &lt;shaderMaterial /&gt; is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.
    at shaderMaterial
    at div
    at /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/RegionSelectionIndicator.test.tsx:79:14
    at RegionSelectionIndicator (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/RegionSelectionIndicator.tsx:58:3)
    at ThemeProvider (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/application/providers/ThemeProvider.tsx:19:3)
    at QueryClientProvider (file:///Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js:20:3)
    at Router (file:///Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-router/dist/development/chunk-KNED5TY2.mjs:5513:13)
    at BrowserRouter (file:///Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-router/dist/development/chunk-KNED5TY2.mjs:7797:3)
    at AllProviders (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/test/test-utils.unified.tsx:60:3)
    at Wrapper (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/test/test-utils.unified.tsx:98:22)

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/atoms/index.test.ts" timestamp="2025-04-07T14:48:14.576Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.001568584">
        <testcase classname="src/presentation/atoms/index.test.ts" name="index &gt; processes data with mathematical precision" time="0.000623916">
        </testcase>
        <testcase classname="src/presentation/atoms/index.test.ts" name="index &gt; handles edge cases with clinical precision" time="0.000143333">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/containers/minimal.minimal.test.tsx" timestamp="2025-04-07T14:48:14.576Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.014731708">
        <testcase classname="src/presentation/containers/minimal.minimal.test.tsx" name="Basic Test &gt; verifies React rendering works" time="0.013537375">
        </testcase>
        <testcase classname="src/presentation/containers/minimal.minimal.test.tsx" name="Basic Test &gt; verifies TextEncoder works properly" time="0.000379167">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/containers/minimal.test.tsx" timestamp="2025-04-07T14:48:14.577Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/providers/ThemeProvider.test.tsx" timestamp="2025-04-07T14:48:14.577Z" hostname="MacBookPro" tests="5" failures="1" errors="0" skipped="0" time="0.098690125">
        <testcase classname="src/presentation/providers/ThemeProvider.test.tsx" name="ThemeProvider &gt; uses system theme by default" time="0.002041459">
        </testcase>
        <testcase classname="src/presentation/providers/ThemeProvider.test.tsx" name="ThemeProvider &gt; loads saved theme from localStorage" time="0.002563041">
        </testcase>
        <testcase classname="src/presentation/providers/ThemeProvider.test.tsx" name="ThemeProvider &gt; allows changing theme" time="0.0743785">
        </testcase>
        <testcase classname="src/presentation/providers/ThemeProvider.test.tsx" name="ThemeProvider &gt; follows system theme when set to system" time="0.003386375">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/presentation/providers/ThemeProvider.test.tsx:125:66
            </failure>
        </testcase>
        <testcase classname="src/presentation/providers/ThemeProvider.test.tsx" name="ThemeProvider &gt; throws error when useTheme is used outside ThemeProvider" time="0.015531167">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/pages/BrainModelViewer.test.tsx" timestamp="2025-04-07T14:48:14.577Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/pages/BrainVisualizationPage.test.tsx" timestamp="2025-04-07T14:48:14.577Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="3.037742916">
        <testcase classname="src/presentation/pages/BrainVisualizationPage.test.tsx" name="BrainVisualizationPage &gt; renders with neural precision" time="1.526188667">
            <system-out>
[AuditLogClient] BRAIN_MODEL_VIEW: {
  timestamp: [35m2025-04-07T14:48:08.616Z[39m,
  eventType: [32m&apos;BRAIN_MODEL_VIEW&apos;[39m,
  action: [32m&apos;view&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  resourceType: [32m&apos;brainModel&apos;[39m
}
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:08.617Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/pages/BrainVisualizationPage.test.tsx" name="BrainVisualizationPage &gt; responds to user interaction with quantum precision" time="1.509141833">
            <system-out>
[AuditLogClient] BRAIN_MODEL_VIEW: {
  timestamp: [35m2025-04-07T14:48:10.133Z[39m,
  eventType: [32m&apos;BRAIN_MODEL_VIEW&apos;[39m,
  action: [32m&apos;view&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  resourceType: [32m&apos;brainModel&apos;[39m
}
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:10.133Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/pages/Dashboard.test.tsx" timestamp="2025-04-07T14:48:14.578Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.0616835">
        <testcase classname="src/presentation/pages/Dashboard.test.tsx" name="Dashboard &gt; renders with neural precision" time="0.036280083">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:06.204Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/pages/Dashboard.test.tsx" name="Dashboard &gt; responds to user interaction with quantum precision" time="0.017817542">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:06.226Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/pages/DigitalTwinDemo.test.tsx" timestamp="2025-04-07T14:48:14.578Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/pages/DigitalTwinPage.test.tsx" timestamp="2025-04-07T14:48:14.578Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/pages/DigitalTwinPage.test.tsx" name="src/presentation/pages/DigitalTwinPage.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot read properties of undefined (reading &apos;S&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;S&apos;)
 ❯ Function.process.env.NODE_ENV.module.exports [as default] node_modules/react-reconciler/cjs/react-reconciler.development.js:15915:58
 ❯ createReconciler node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:1263:52
 ❯ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:1564:35
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/pages/Login.test.tsx" timestamp="2025-04-07T14:48:14.579Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/pages/NotFound.test.tsx" timestamp="2025-04-07T14:48:14.579Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/pages/PatientProfile.test.tsx" timestamp="2025-04-07T14:48:14.579Z" hostname="MacBookPro" tests="2" failures="2" errors="0" skipped="0" time="10.040842041">
        <testcase classname="src/presentation/pages/PatientProfile.test.tsx" name="PatientProfile &gt; renders with neural precision" time="5.025924125">
            <system-out>
[AuditLogClient] PATIENT_RECORD_VIEW: {
  timestamp: [35m2025-04-07T14:48:04.479Z[39m,
  eventType: [32m&apos;PATIENT_RECORD_VIEW&apos;[39m,
  action: [32m&apos;view&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  resourceType: [32m&apos;patient&apos;[39m,
  resourceId: [32m&apos;test-patient-123&apos;[39m
}
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:04.480Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
            <failure message="Unable to find an element with the text: Patient test. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;container mx-auto p-4&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;overflow-hidden rounded-lg bg-white shadow-md dark:bg-gray-800&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;bg-blue-600 p-6 text-white&quot;[39m
        [36m&gt;[39m
          [36m&lt;h1[39m
            [33mclass[39m=[32m&quot;text-2xl font-bold&quot;[39m
          [36m&gt;[39m
            [0mJane Doe[0m
          [36m&lt;/h1&gt;[39m
          [36m&lt;p[39m
            [33mclass[39m=[32m&quot;text-blue-100&quot;[39m
          [36m&gt;[39m
            [0mPatient ID: [0m
            [0mtest-patient-123[0m
          [36m&lt;/p&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;border-b border-gray-200 dark:border-gray-700&quot;[39m
        [36m&gt;[39m
          [36m&lt;nav[39m
            [33mclass[39m=[32m&quot;-mb-px flex&quot;[39m
          [36m&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;border-b-2 border-blue-500 px-6 py-4 font-medium text-blue-600 dark:text-blue-400&quot;[39m
            [36m&gt;[39m
              [0mOverview[0m
            [36m&lt;/button&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;[39m
            [36m&gt;[39m
              [0mBrain Model[0m
            [36m&lt;/button&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;[39m
            [36m&gt;[39m
              [0mTreatment History[0m
            [36m&lt;/button&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;[39m
            [36m&gt;[39m
              [0mNotes[0m
            [36m&lt;/button&gt;[39m
          [36m&lt;/nav&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;p-6&quot;[39m
        [36m&gt;[39m
          [36m&lt;div[39m
            [33mclass[39m=[32m&quot;grid grid-cols-1 gap-6 md:grid-cols-2&quot;[39m
          [36m&gt;[39m
            [36m&lt;div&gt;[39m
              [36m&lt;h2[39m
                [33mclass[39m=[32m&quot;mb-4 text-lg font-semibold&quot;[39m
              [36m&gt;[39m
                [0mPersonal Information[0m
              [36m&lt;/h2&gt;[39m
              [36m&lt;div[39m
                [33mclass[39m=[32m&quot;space-y-3&quot;[39m
              [36m&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mAge:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;ml-2&quot;[39m
                  [36m&gt;[39m
                    [0m32[0m
                  [36m&lt;/span&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mEmail:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;ml-2&quot;[39m
                  [36m&gt;[39m
                    [0mjane.doe@example.com[0m
                  [36m&lt;/span&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mPhone:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;ml-2&quot;[39m
                  [36m&gt;[39m
                    [0m(555) 123-4567[0m
                  [36m&lt;/span&gt;[39m
                [36m&lt;/div&gt;[39m
              [36m&lt;/div&gt;[39m
            [36m&lt;/div&gt;[39m
            [36m&lt;div&gt;[39m
              [36m&lt;h2[39m
                [33mclass[39m=[32m&quot;mb-4 text-lg font-semibold&quot;[39m
              [36m&gt;[39m
                [0mMedical Information[0m
              [36m&lt;/h2&gt;[39m
              [36m&lt;div[39m
                [33mclass[39m=[32m&quot;space-y-3&quot;[39m
              [36m&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mDiagnosis:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;div[39m
                    [33mclass[39m=[32m&quot;mt-1&quot;[39m
                  [36m&gt;[39m
                    [0mGeneralized Anxiety Disorder, Major Depressive Disorder[0m
                  [36m&lt;/div&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mTreatment Plan:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;div[39m
                    [33mclass[39m=[32m&quot;mt-1&quot;[39m
                  [36m&gt;[39m
                    [0mCBT + SSRI medication[0m
                  [36m&lt;/div&gt;[39m
                [36m&lt;/div&gt;[39m
              [36m&lt;/div&gt;[39m
            [36m&lt;/div&gt;[39m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mclass[39m=[32m&quot;mt-8&quot;[39m
          [36m&gt;[39m
            [36m&lt;h2[39m
              [33mclass[39m=[32m&quot;mb-4 text-lg font-semibold&quot;[39m
            [36m&gt;[39m
              [0mAppointments[0m
            [36m&lt;/h2&gt;[39m
            [36m&lt;div[39m
              [33mclass[39m=[32m&quot;rounded-lg bg-gray-50 p-4 dark:bg-gray-900&quot;[39m
            [36m&gt;[39m
              [36m&lt;div[39m
                [33mclass[39m=[32m&quot;flex items-center justify-between&quot;[39m
              [36m&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;h3[39m
                    [33mclass[39m=[32m&quot;font-medium&quot;[39m
                  [36m&gt;[39m
                    [0mLast Visit[0m
                  [36m&lt;/h3&gt;[39m
                  [36m&lt;p[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0m2025-03-15[0m
                  [36m&lt;/p&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;h3[39m
                    [33mclass[39m=[32m&quot;font-medium&quot;[39m
                  [36m&gt;[39m
                    [0mUpcoming Appointment[0m
                  [36m&lt;/h3&gt;[39m
                  [36m&lt;p[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0m2025-04-05[0m
                  [36m&lt;/p&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;button[39m
                  [33mclass[39m=[32m&quot;rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700&quot;[39m
                [36m&gt;[39m
                  [0mSchedule New[0m
                [36m&lt;/button&gt;[39m
              [36m&lt;/div&gt;[39m
            [36m&lt;/div&gt;[39m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mclass[39m=[32m&quot;mt-8 flex justify-end space-x-4&quot;[39m
          [36m&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;rounded border border-gray-300 px-4 py-2 text-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-700&quot;[39m
            [36m&gt;[39m
              [0mDownload Records[0m
            [36m&lt;/button&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700&quot;[39m
            [36m&gt;[39m
              [0mEdit Patient[0m
            [36m&lt;/button&gt;[39m
          [36m&lt;/div&gt;[39m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;container mx-auto p-4&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;overflow-hidden rounded-lg bg-white shadow-md dark:bg-gray-800&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;bg-blue-600 p-6 text-white&quot;[39m
        [36m&gt;[39m
          [36m&lt;h1[39m
            [33mclass[39m=[32m&quot;text-2xl font-bold&quot;[39m
          [36m&gt;[39m
            [0mJane Doe[0m
          [36m&lt;/h1&gt;[39m
          [36m&lt;p[39m
            [33mclass[39m=[32m&quot;text-blue-100&quot;[39m
          [36m&gt;[39m
            [0mPatient ID: [0m
            [0mtest-patient-123[0m
          [36m&lt;/p&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;border-b border-gray-200 dark:border-gray-700&quot;[39m
        [36m&gt;[39m
          [36m&lt;nav[39m
            [33mclass[39m=[32m&quot;-mb-px flex&quot;[39m
          [36m&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;border-b-2 border-blue-500 px-6 py-4 font-medium text-blue-600 dark:text-blue-400&quot;[39m
            [36m&gt;[39m
              [0mOverview[0m
            [36m&lt;/button&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;[39m
            [36m&gt;[39m
              [0mBrain Model[0m
            [36m&lt;/button&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;[39m
            [36m&gt;[39m
              [0mTreatment History[0m
            [36m&lt;/button&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;[39m
            [36m&gt;[39m
              [0mNotes[0m
            [36m&lt;/button&gt;[39m
          [36m&lt;/nav&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;p-6&quot;[39m
        [36m&gt;[39m
          [36m&lt;div[39m
            [33mclass[39m=[32m&quot;grid grid-cols-1 gap-6 md:grid-cols-2&quot;[39m
          [36m&gt;[39m
            [36m&lt;div&gt;[39m
              [36m&lt;h2[39m
                [33mclass[39m=[32m&quot;mb-4 text-lg font-semibold&quot;[39m
              [36m&gt;[39m
                [0mPersonal Information[0m
              [36m&lt;/h2&gt;[39m
              [36m&lt;div[39m
                [33mclass[39m=[32m&quot;space-y-3&quot;[39m
              [36m&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mAge:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;ml-2&quot;[39m
                  [36m&gt;[39m
                    [0m32[0m
                  [36m&lt;/span&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mEmail:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;ml-2&quot;[39m
                  [36m&gt;[39m
                    [0mjane.doe@example.com[0m
                  [36m&lt;/span&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mPhone:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;ml-2&quot;[39m
                  [36m&gt;[39m
                    [0m(555) 123-4567[0m
                  [36m&lt;/span&gt;[39m
                [36m&lt;/div&gt;[39m
              [36m&lt;/div&gt;[39m
            [36m&lt;/div&gt;[39m
            [36m&lt;div&gt;[39m
              [36m&lt;h2[39m
                [33mclass[39m=[32m&quot;mb-4 text-lg font-semibold&quot;[39m
              [36m&gt;[39m
                [0mMedical Information[0m
              [36m&lt;/h2&gt;[39m
              [36m&lt;div[39m
                [33mclass[39m=[32m&quot;space-y-3&quot;[39m
              [36m&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mDiagnosis:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;div[39m
                    [33mclass[39m=[32m&quot;mt-1&quot;[39m
                  [36m&gt;[39m
                    [0mGeneralized Anxiety Disorder, Major Depressive Disorder[0m
                  [36m&lt;/div&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mTreatment Plan:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;div[39m
                    [33mclass[39m=[32m&quot;mt-1&quot;[39m
                  [36m&gt;[39m
                    [0mCBT + SSRI medication[0m
                  [36m&lt;/div&gt;[39m
                [36m&lt;/div&gt;[39m
              [36m&lt;/div&gt;[39m
            [36m&lt;/div&gt;[39m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mclass[39m=[32m&quot;mt-8&quot;[39m
          [36m&gt;[39m
            [36m&lt;h2[39m
              [33mclass[39m=[32m&quot;mb-4 text-lg font-semibold&quot;[39m
            [36m&gt;[39m
              [0mAppointments[0m
            [36m&lt;/h2&gt;[39m
            [36m&lt;div[39m
              [33mclass[39m=[32m&quot;rounded-lg bg-gray-50 p-4 dark:bg-gray-900&quot;[39m
            [36m&gt;[39m
              [36m&lt;div[39m
                [33mclass[39m=[32m&quot;flex items-center justify-between&quot;[39m
              [36m&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;h3[39m
                    [33mclass[39m=[32m&quot;font-medium&quot;[39m
                  [36m&gt;[39m
                    [0mLast Visit[0m
                  [36m&lt;/h3&gt;[39m
                  [36m&lt;p[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0m2025-03-15[0m
                  [36m&lt;/p&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;h3[39m
                    [33mclass[39m=[32m&quot;font-medium&quot;[39m
                  [36m&gt;[39m
                    [0mUpcoming Appointment[0m
                  [36m&lt;/h3&gt;[39m
                  [36m&lt;p[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0m2025-04-05[0m
                  [36m&lt;/p&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;button[39m
                  [33mclass[39m=[32m&quot;rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700&quot;[39m
                [36m&gt;[39m
                  [0mSchedule New[0m
                [36m&lt;/button&gt;[39m
              [36m&lt;/div&gt;[39m
            [36m&lt;/div&gt;[39m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mclass[39m=[32m&quot;mt-8 flex justify-end space-x-4&quot;[39m
          [36m&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;rounded border border-gray-300 px-4 py-2 text-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-700&quot;[39m
            [36m&gt;[39m
              [0mDownload Records[0m
            [36m&lt;/button&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700&quot;[39m
            [36m&gt;[39m
              [0mEdit Patient[0m
            [36m&lt;/button&gt;[39m
          [36m&lt;/div&gt;[39m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element with the text: Patient test. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;container mx-auto p-4&quot;
    &gt;
      &lt;div
        class=&quot;overflow-hidden rounded-lg bg-white shadow-md dark:bg-gray-800&quot;
      &gt;
        &lt;div
          class=&quot;bg-blue-600 p-6 text-white&quot;
        &gt;
          &lt;h1
            class=&quot;text-2xl font-bold&quot;
          &gt;
            Jane Doe
          &lt;/h1&gt;
          &lt;p
            class=&quot;text-blue-100&quot;
          &gt;
            Patient ID: 
            test-patient-123
          &lt;/p&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;border-b border-gray-200 dark:border-gray-700&quot;
        &gt;
          &lt;nav
            class=&quot;-mb-px flex&quot;
          &gt;
            &lt;button
              class=&quot;border-b-2 border-blue-500 px-6 py-4 font-medium text-blue-600 dark:text-blue-400&quot;
            &gt;
              Overview
            &lt;/button&gt;
            &lt;button
              class=&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;
            &gt;
              Brain Model
            &lt;/button&gt;
            &lt;button
              class=&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;
            &gt;
              Treatment History
            &lt;/button&gt;
            &lt;button
              class=&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;
            &gt;
              Notes
            &lt;/button&gt;
          &lt;/nav&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;p-6&quot;
        &gt;
          &lt;div
            class=&quot;grid grid-cols-1 gap-6 md:grid-cols-2&quot;
          &gt;
            &lt;div&gt;
              &lt;h2
                class=&quot;mb-4 text-lg font-semibold&quot;
              &gt;
                Personal Information
              &lt;/h2&gt;
              &lt;div
                class=&quot;space-y-3&quot;
              &gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Age:
                  &lt;/span&gt;
                  &lt;span
                    class=&quot;ml-2&quot;
                  &gt;
                    32
                  &lt;/span&gt;
                &lt;/div&gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Email:
                  &lt;/span&gt;
                  &lt;span
                    class=&quot;ml-2&quot;
                  &gt;
                    jane.doe@example.com
                  &lt;/span&gt;
                &lt;/div&gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Phone:
                  &lt;/span&gt;
                  &lt;span
                    class=&quot;ml-2&quot;
                  &gt;
                    (555) 123-4567
                  &lt;/span&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div&gt;
              &lt;h2
                class=&quot;mb-4 text-lg font-semibold&quot;
              &gt;
                Medical Information
              &lt;/h2&gt;
              &lt;div
                class=&quot;space-y-3&quot;
              &gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Diagnosis:
                  &lt;/span&gt;
                  &lt;div
                    class=&quot;mt-1&quot;
                  &gt;
                    Generalized Anxiety Disorder, Major Depressive Disorder
                  &lt;/div&gt;
                &lt;/div&gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Treatment Plan:
                  &lt;/span&gt;
                  &lt;div
                    class=&quot;mt-1&quot;
                  &gt;
                    CBT + SSRI medication
                  &lt;/div&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div
            class=&quot;mt-8&quot;
          &gt;
            &lt;h2
              class=&quot;mb-4 text-lg font-semibold&quot;
            &gt;
              Appointments
            &lt;/h2&gt;
            &lt;div
              class=&quot;rounded-lg bg-gray-50 p-4 dark:bg-gray-900&quot;
            &gt;
              &lt;div
                class=&quot;flex items-center justify-between&quot;
              &gt;
                &lt;div&gt;
                  &lt;h3
                    class=&quot;font-medium&quot;
                  &gt;
                    Last Visit
                  &lt;/h3&gt;
                  &lt;p
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    2025-03-15
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;div&gt;
                  &lt;h3
                    class=&quot;font-medium&quot;
                  &gt;
                    Upcoming Appointment
                  &lt;/h3&gt;
                  &lt;p
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    2025-04-05
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;button
                  class=&quot;rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700&quot;
                &gt;
                  Schedule New
                &lt;/button&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div
            class=&quot;mt-8 flex justify-end space-x-4&quot;
          &gt;
            &lt;button
              class=&quot;rounded border border-gray-300 px-4 py-2 text-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-700&quot;
            &gt;
              Download Records
            &lt;/button&gt;
            &lt;button
              class=&quot;rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700&quot;
            &gt;
              Edit Patient
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;container mx-auto p-4&quot;
    &gt;
      &lt;div
        class=&quot;overflow-hidden rounded-lg bg-white shadow-md dark:bg-gray-800&quot;
      &gt;
        &lt;div
          class=&quot;bg-blue-600 p-6 text-white&quot;
        &gt;
          &lt;h1
            class=&quot;text-2xl font-bold&quot;
          &gt;
            Jane Doe
          &lt;/h1&gt;
          &lt;p
            class=&quot;text-blue-100&quot;
          &gt;
            Patient ID: 
            test-patient-123
          &lt;/p&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;border-b border-gray-200 dark:border-gray-700&quot;
        &gt;
          &lt;nav
            class=&quot;-mb-px flex&quot;
          &gt;
            &lt;button
              class=&quot;border-b-2 border-blue-500 px-6 py-4 font-medium text-blue-600 dark:text-blue-400&quot;
            &gt;
              Overview
            &lt;/button&gt;
            &lt;button
              class=&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;
            &gt;
              Brain Model
            &lt;/button&gt;
            &lt;button
              class=&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;
            &gt;
              Treatment History
            &lt;/button&gt;
            &lt;button
              class=&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;
            &gt;
              Notes
            &lt;/button&gt;
          &lt;/nav&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;p-6&quot;
        &gt;
          &lt;div
            class=&quot;grid grid-cols-1 gap-6 md:grid-cols-2&quot;
          &gt;
            &lt;div&gt;
              &lt;h2
                class=&quot;mb-4 text-lg font-semibold&quot;
              &gt;
                Personal Information
              &lt;/h2&gt;
              &lt;div
                class=&quot;space-y-3&quot;
              &gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Age:
                  &lt;/span&gt;
                  &lt;span
                    class=&quot;ml-2&quot;
                  &gt;
                    32
                  &lt;/span&gt;
                &lt;/div&gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Email:
                  &lt;/span&gt;
                  &lt;span
                    class=&quot;ml-2&quot;
                  &gt;
                    jane.doe@example.com
                  &lt;/span&gt;
                &lt;/div&gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Phone:
                  &lt;/span&gt;
                  &lt;span
                    class=&quot;ml-2&quot;
                  &gt;
                    (555) 123-4567
                  &lt;/span&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div&gt;
              &lt;h2
                class=&quot;mb-4 text-lg font-semibold&quot;
              &gt;
                Medical Information
              &lt;/h2&gt;
              &lt;div
                class=&quot;space-y-3&quot;
              &gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Diagnosis:
                  &lt;/span&gt;
                  &lt;div
                    class=&quot;mt-1&quot;
                  &gt;
                    Generalized Anxiety Disorder, Major Depressive Disorder
                  &lt;/div&gt;
                &lt;/div&gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Treatment Plan:
                  &lt;/span&gt;
                  &lt;div
                    class=&quot;mt-1&quot;
                  &gt;
                    CBT + SSRI medication
                  &lt;/div&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div
            class=&quot;mt-8&quot;
          &gt;
            &lt;h2
              class=&quot;mb-4 text-lg font-semibold&quot;
            &gt;
              Appointments
            &lt;/h2&gt;
            &lt;div
              class=&quot;rounded-lg bg-gray-50 p-4 dark:bg-gray-900&quot;
            &gt;
              &lt;div
                class=&quot;flex items-center justify-between&quot;
              &gt;
                &lt;div&gt;
                  &lt;h3
                    class=&quot;font-medium&quot;
                  &gt;
                    Last Visit
                  &lt;/h3&gt;
                  &lt;p
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    2025-03-15
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;div&gt;
                  &lt;h3
                    class=&quot;font-medium&quot;
                  &gt;
                    Upcoming Appointment
                  &lt;/h3&gt;
                  &lt;p
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    2025-04-05
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;button
                  class=&quot;rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700&quot;
                &gt;
                  Schedule New
                &lt;/button&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div
            class=&quot;mt-8 flex justify-end space-x-4&quot;
          &gt;
            &lt;button
              class=&quot;rounded border border-gray-300 px-4 py-2 text-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-700&quot;
            &gt;
              Download Records
            &lt;/button&gt;
            &lt;button
              class=&quot;rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700&quot;
            &gt;
              Edit Patient
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ waitForWrapper node_modules/@testing-library/dom/dist/wait-for.js:163:27
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:86:33
 ❯ src/presentation/pages/PatientProfile.test.tsx:62:20
            </failure>
        </testcase>
        <testcase classname="src/presentation/pages/PatientProfile.test.tsx" name="PatientProfile &gt; responds to user interaction with quantum precision" time="5.012427083">
            <system-out>
[AuditLogClient] PATIENT_RECORD_VIEW: {
  timestamp: [35m2025-04-07T14:48:09.490Z[39m,
  eventType: [32m&apos;PATIENT_RECORD_VIEW&apos;[39m,
  action: [32m&apos;view&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  resourceType: [32m&apos;patient&apos;[39m,
  resourceId: [32m&apos;test-patient-123&apos;[39m
}
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:09.490Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
            <failure message="Unable to find an element with the text: Patient test. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;container mx-auto p-4&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;overflow-hidden rounded-lg bg-white shadow-md dark:bg-gray-800&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;bg-blue-600 p-6 text-white&quot;[39m
        [36m&gt;[39m
          [36m&lt;h1[39m
            [33mclass[39m=[32m&quot;text-2xl font-bold&quot;[39m
          [36m&gt;[39m
            [0mJane Doe[0m
          [36m&lt;/h1&gt;[39m
          [36m&lt;p[39m
            [33mclass[39m=[32m&quot;text-blue-100&quot;[39m
          [36m&gt;[39m
            [0mPatient ID: [0m
            [0mtest-patient-123[0m
          [36m&lt;/p&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;border-b border-gray-200 dark:border-gray-700&quot;[39m
        [36m&gt;[39m
          [36m&lt;nav[39m
            [33mclass[39m=[32m&quot;-mb-px flex&quot;[39m
          [36m&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;border-b-2 border-blue-500 px-6 py-4 font-medium text-blue-600 dark:text-blue-400&quot;[39m
            [36m&gt;[39m
              [0mOverview[0m
            [36m&lt;/button&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;[39m
            [36m&gt;[39m
              [0mBrain Model[0m
            [36m&lt;/button&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;[39m
            [36m&gt;[39m
              [0mTreatment History[0m
            [36m&lt;/button&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;[39m
            [36m&gt;[39m
              [0mNotes[0m
            [36m&lt;/button&gt;[39m
          [36m&lt;/nav&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;p-6&quot;[39m
        [36m&gt;[39m
          [36m&lt;div[39m
            [33mclass[39m=[32m&quot;grid grid-cols-1 gap-6 md:grid-cols-2&quot;[39m
          [36m&gt;[39m
            [36m&lt;div&gt;[39m
              [36m&lt;h2[39m
                [33mclass[39m=[32m&quot;mb-4 text-lg font-semibold&quot;[39m
              [36m&gt;[39m
                [0mPersonal Information[0m
              [36m&lt;/h2&gt;[39m
              [36m&lt;div[39m
                [33mclass[39m=[32m&quot;space-y-3&quot;[39m
              [36m&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mAge:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;ml-2&quot;[39m
                  [36m&gt;[39m
                    [0m32[0m
                  [36m&lt;/span&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mEmail:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;ml-2&quot;[39m
                  [36m&gt;[39m
                    [0mjane.doe@example.com[0m
                  [36m&lt;/span&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mPhone:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;ml-2&quot;[39m
                  [36m&gt;[39m
                    [0m(555) 123-4567[0m
                  [36m&lt;/span&gt;[39m
                [36m&lt;/div&gt;[39m
              [36m&lt;/div&gt;[39m
            [36m&lt;/div&gt;[39m
            [36m&lt;div&gt;[39m
              [36m&lt;h2[39m
                [33mclass[39m=[32m&quot;mb-4 text-lg font-semibold&quot;[39m
              [36m&gt;[39m
                [0mMedical Information[0m
              [36m&lt;/h2&gt;[39m
              [36m&lt;div[39m
                [33mclass[39m=[32m&quot;space-y-3&quot;[39m
              [36m&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mDiagnosis:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;div[39m
                    [33mclass[39m=[32m&quot;mt-1&quot;[39m
                  [36m&gt;[39m
                    [0mGeneralized Anxiety Disorder, Major Depressive Disorder[0m
                  [36m&lt;/div&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mTreatment Plan:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;div[39m
                    [33mclass[39m=[32m&quot;mt-1&quot;[39m
                  [36m&gt;[39m
                    [0mCBT + SSRI medication[0m
                  [36m&lt;/div&gt;[39m
                [36m&lt;/div&gt;[39m
              [36m&lt;/div&gt;[39m
            [36m&lt;/div&gt;[39m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mclass[39m=[32m&quot;mt-8&quot;[39m
          [36m&gt;[39m
            [36m&lt;h2[39m
              [33mclass[39m=[32m&quot;mb-4 text-lg font-semibold&quot;[39m
            [36m&gt;[39m
              [0mAppointments[0m
            [36m&lt;/h2&gt;[39m
            [36m&lt;div[39m
              [33mclass[39m=[32m&quot;rounded-lg bg-gray-50 p-4 dark:bg-gray-900&quot;[39m
            [36m&gt;[39m
              [36m&lt;div[39m
                [33mclass[39m=[32m&quot;flex items-center justify-between&quot;[39m
              [36m&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;h3[39m
                    [33mclass[39m=[32m&quot;font-medium&quot;[39m
                  [36m&gt;[39m
                    [0mLast Visit[0m
                  [36m&lt;/h3&gt;[39m
                  [36m&lt;p[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0m2025-03-15[0m
                  [36m&lt;/p&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;h3[39m
                    [33mclass[39m=[32m&quot;font-medium&quot;[39m
                  [36m&gt;[39m
                    [0mUpcoming Appointment[0m
                  [36m&lt;/h3&gt;[39m
                  [36m&lt;p[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0m2025-04-05[0m
                  [36m&lt;/p&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;button[39m
                  [33mclass[39m=[32m&quot;rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700&quot;[39m
                [36m&gt;[39m
                  [0mSchedule New[0m
                [36m&lt;/button&gt;[39m
              [36m&lt;/div&gt;[39m
            [36m&lt;/div&gt;[39m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mclass[39m=[32m&quot;mt-8 flex justify-end space-x-4&quot;[39m
          [36m&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;rounded border border-gray-300 px-4 py-2 text-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-700&quot;[39m
            [36m&gt;[39m
              [0mDownload Records[0m
            [36m&lt;/button&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700&quot;[39m
            [36m&gt;[39m
              [0mEdit Patient[0m
            [36m&lt;/button&gt;[39m
          [36m&lt;/div&gt;[39m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;container mx-auto p-4&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;overflow-hidden rounded-lg bg-white shadow-md dark:bg-gray-800&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;bg-blue-600 p-6 text-white&quot;[39m
        [36m&gt;[39m
          [36m&lt;h1[39m
            [33mclass[39m=[32m&quot;text-2xl font-bold&quot;[39m
          [36m&gt;[39m
            [0mJane Doe[0m
          [36m&lt;/h1&gt;[39m
          [36m&lt;p[39m
            [33mclass[39m=[32m&quot;text-blue-100&quot;[39m
          [36m&gt;[39m
            [0mPatient ID: [0m
            [0mtest-patient-123[0m
          [36m&lt;/p&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;border-b border-gray-200 dark:border-gray-700&quot;[39m
        [36m&gt;[39m
          [36m&lt;nav[39m
            [33mclass[39m=[32m&quot;-mb-px flex&quot;[39m
          [36m&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;border-b-2 border-blue-500 px-6 py-4 font-medium text-blue-600 dark:text-blue-400&quot;[39m
            [36m&gt;[39m
              [0mOverview[0m
            [36m&lt;/button&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;[39m
            [36m&gt;[39m
              [0mBrain Model[0m
            [36m&lt;/button&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;[39m
            [36m&gt;[39m
              [0mTreatment History[0m
            [36m&lt;/button&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;[39m
            [36m&gt;[39m
              [0mNotes[0m
            [36m&lt;/button&gt;[39m
          [36m&lt;/nav&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;p-6&quot;[39m
        [36m&gt;[39m
          [36m&lt;div[39m
            [33mclass[39m=[32m&quot;grid grid-cols-1 gap-6 md:grid-cols-2&quot;[39m
          [36m&gt;[39m
            [36m&lt;div&gt;[39m
              [36m&lt;h2[39m
                [33mclass[39m=[32m&quot;mb-4 text-lg font-semibold&quot;[39m
              [36m&gt;[39m
                [0mPersonal Information[0m
              [36m&lt;/h2&gt;[39m
              [36m&lt;div[39m
                [33mclass[39m=[32m&quot;space-y-3&quot;[39m
              [36m&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mAge:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;ml-2&quot;[39m
                  [36m&gt;[39m
                    [0m32[0m
                  [36m&lt;/span&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mEmail:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;ml-2&quot;[39m
                  [36m&gt;[39m
                    [0mjane.doe@example.com[0m
                  [36m&lt;/span&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mPhone:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;ml-2&quot;[39m
                  [36m&gt;[39m
                    [0m(555) 123-4567[0m
                  [36m&lt;/span&gt;[39m
                [36m&lt;/div&gt;[39m
              [36m&lt;/div&gt;[39m
            [36m&lt;/div&gt;[39m
            [36m&lt;div&gt;[39m
              [36m&lt;h2[39m
                [33mclass[39m=[32m&quot;mb-4 text-lg font-semibold&quot;[39m
              [36m&gt;[39m
                [0mMedical Information[0m
              [36m&lt;/h2&gt;[39m
              [36m&lt;div[39m
                [33mclass[39m=[32m&quot;space-y-3&quot;[39m
              [36m&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mDiagnosis:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;div[39m
                    [33mclass[39m=[32m&quot;mt-1&quot;[39m
                  [36m&gt;[39m
                    [0mGeneralized Anxiety Disorder, Major Depressive Disorder[0m
                  [36m&lt;/div&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;span[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0mTreatment Plan:[0m
                  [36m&lt;/span&gt;[39m
                  [36m&lt;div[39m
                    [33mclass[39m=[32m&quot;mt-1&quot;[39m
                  [36m&gt;[39m
                    [0mCBT + SSRI medication[0m
                  [36m&lt;/div&gt;[39m
                [36m&lt;/div&gt;[39m
              [36m&lt;/div&gt;[39m
            [36m&lt;/div&gt;[39m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mclass[39m=[32m&quot;mt-8&quot;[39m
          [36m&gt;[39m
            [36m&lt;h2[39m
              [33mclass[39m=[32m&quot;mb-4 text-lg font-semibold&quot;[39m
            [36m&gt;[39m
              [0mAppointments[0m
            [36m&lt;/h2&gt;[39m
            [36m&lt;div[39m
              [33mclass[39m=[32m&quot;rounded-lg bg-gray-50 p-4 dark:bg-gray-900&quot;[39m
            [36m&gt;[39m
              [36m&lt;div[39m
                [33mclass[39m=[32m&quot;flex items-center justify-between&quot;[39m
              [36m&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;h3[39m
                    [33mclass[39m=[32m&quot;font-medium&quot;[39m
                  [36m&gt;[39m
                    [0mLast Visit[0m
                  [36m&lt;/h3&gt;[39m
                  [36m&lt;p[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0m2025-03-15[0m
                  [36m&lt;/p&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;div&gt;[39m
                  [36m&lt;h3[39m
                    [33mclass[39m=[32m&quot;font-medium&quot;[39m
                  [36m&gt;[39m
                    [0mUpcoming Appointment[0m
                  [36m&lt;/h3&gt;[39m
                  [36m&lt;p[39m
                    [33mclass[39m=[32m&quot;text-gray-600 dark:text-gray-400&quot;[39m
                  [36m&gt;[39m
                    [0m2025-04-05[0m
                  [36m&lt;/p&gt;[39m
                [36m&lt;/div&gt;[39m
                [36m&lt;button[39m
                  [33mclass[39m=[32m&quot;rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700&quot;[39m
                [36m&gt;[39m
                  [0mSchedule New[0m
                [36m&lt;/button&gt;[39m
              [36m&lt;/div&gt;[39m
            [36m&lt;/div&gt;[39m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mclass[39m=[32m&quot;mt-8 flex justify-end space-x-4&quot;[39m
          [36m&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;rounded border border-gray-300 px-4 py-2 text-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-700&quot;[39m
            [36m&gt;[39m
              [0mDownload Records[0m
            [36m&lt;/button&gt;[39m
            [36m&lt;button[39m
              [33mclass[39m=[32m&quot;rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700&quot;[39m
            [36m&gt;[39m
              [0mEdit Patient[0m
            [36m&lt;/button&gt;[39m
          [36m&lt;/div&gt;[39m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element with the text: Patient test. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;container mx-auto p-4&quot;
    &gt;
      &lt;div
        class=&quot;overflow-hidden rounded-lg bg-white shadow-md dark:bg-gray-800&quot;
      &gt;
        &lt;div
          class=&quot;bg-blue-600 p-6 text-white&quot;
        &gt;
          &lt;h1
            class=&quot;text-2xl font-bold&quot;
          &gt;
            Jane Doe
          &lt;/h1&gt;
          &lt;p
            class=&quot;text-blue-100&quot;
          &gt;
            Patient ID: 
            test-patient-123
          &lt;/p&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;border-b border-gray-200 dark:border-gray-700&quot;
        &gt;
          &lt;nav
            class=&quot;-mb-px flex&quot;
          &gt;
            &lt;button
              class=&quot;border-b-2 border-blue-500 px-6 py-4 font-medium text-blue-600 dark:text-blue-400&quot;
            &gt;
              Overview
            &lt;/button&gt;
            &lt;button
              class=&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;
            &gt;
              Brain Model
            &lt;/button&gt;
            &lt;button
              class=&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;
            &gt;
              Treatment History
            &lt;/button&gt;
            &lt;button
              class=&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;
            &gt;
              Notes
            &lt;/button&gt;
          &lt;/nav&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;p-6&quot;
        &gt;
          &lt;div
            class=&quot;grid grid-cols-1 gap-6 md:grid-cols-2&quot;
          &gt;
            &lt;div&gt;
              &lt;h2
                class=&quot;mb-4 text-lg font-semibold&quot;
              &gt;
                Personal Information
              &lt;/h2&gt;
              &lt;div
                class=&quot;space-y-3&quot;
              &gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Age:
                  &lt;/span&gt;
                  &lt;span
                    class=&quot;ml-2&quot;
                  &gt;
                    32
                  &lt;/span&gt;
                &lt;/div&gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Email:
                  &lt;/span&gt;
                  &lt;span
                    class=&quot;ml-2&quot;
                  &gt;
                    jane.doe@example.com
                  &lt;/span&gt;
                &lt;/div&gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Phone:
                  &lt;/span&gt;
                  &lt;span
                    class=&quot;ml-2&quot;
                  &gt;
                    (555) 123-4567
                  &lt;/span&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div&gt;
              &lt;h2
                class=&quot;mb-4 text-lg font-semibold&quot;
              &gt;
                Medical Information
              &lt;/h2&gt;
              &lt;div
                class=&quot;space-y-3&quot;
              &gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Diagnosis:
                  &lt;/span&gt;
                  &lt;div
                    class=&quot;mt-1&quot;
                  &gt;
                    Generalized Anxiety Disorder, Major Depressive Disorder
                  &lt;/div&gt;
                &lt;/div&gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Treatment Plan:
                  &lt;/span&gt;
                  &lt;div
                    class=&quot;mt-1&quot;
                  &gt;
                    CBT + SSRI medication
                  &lt;/div&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div
            class=&quot;mt-8&quot;
          &gt;
            &lt;h2
              class=&quot;mb-4 text-lg font-semibold&quot;
            &gt;
              Appointments
            &lt;/h2&gt;
            &lt;div
              class=&quot;rounded-lg bg-gray-50 p-4 dark:bg-gray-900&quot;
            &gt;
              &lt;div
                class=&quot;flex items-center justify-between&quot;
              &gt;
                &lt;div&gt;
                  &lt;h3
                    class=&quot;font-medium&quot;
                  &gt;
                    Last Visit
                  &lt;/h3&gt;
                  &lt;p
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    2025-03-15
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;div&gt;
                  &lt;h3
                    class=&quot;font-medium&quot;
                  &gt;
                    Upcoming Appointment
                  &lt;/h3&gt;
                  &lt;p
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    2025-04-05
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;button
                  class=&quot;rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700&quot;
                &gt;
                  Schedule New
                &lt;/button&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div
            class=&quot;mt-8 flex justify-end space-x-4&quot;
          &gt;
            &lt;button
              class=&quot;rounded border border-gray-300 px-4 py-2 text-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-700&quot;
            &gt;
              Download Records
            &lt;/button&gt;
            &lt;button
              class=&quot;rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700&quot;
            &gt;
              Edit Patient
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;container mx-auto p-4&quot;
    &gt;
      &lt;div
        class=&quot;overflow-hidden rounded-lg bg-white shadow-md dark:bg-gray-800&quot;
      &gt;
        &lt;div
          class=&quot;bg-blue-600 p-6 text-white&quot;
        &gt;
          &lt;h1
            class=&quot;text-2xl font-bold&quot;
          &gt;
            Jane Doe
          &lt;/h1&gt;
          &lt;p
            class=&quot;text-blue-100&quot;
          &gt;
            Patient ID: 
            test-patient-123
          &lt;/p&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;border-b border-gray-200 dark:border-gray-700&quot;
        &gt;
          &lt;nav
            class=&quot;-mb-px flex&quot;
          &gt;
            &lt;button
              class=&quot;border-b-2 border-blue-500 px-6 py-4 font-medium text-blue-600 dark:text-blue-400&quot;
            &gt;
              Overview
            &lt;/button&gt;
            &lt;button
              class=&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;
            &gt;
              Brain Model
            &lt;/button&gt;
            &lt;button
              class=&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;
            &gt;
              Treatment History
            &lt;/button&gt;
            &lt;button
              class=&quot;px-6 py-4 font-medium text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;
            &gt;
              Notes
            &lt;/button&gt;
          &lt;/nav&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;p-6&quot;
        &gt;
          &lt;div
            class=&quot;grid grid-cols-1 gap-6 md:grid-cols-2&quot;
          &gt;
            &lt;div&gt;
              &lt;h2
                class=&quot;mb-4 text-lg font-semibold&quot;
              &gt;
                Personal Information
              &lt;/h2&gt;
              &lt;div
                class=&quot;space-y-3&quot;
              &gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Age:
                  &lt;/span&gt;
                  &lt;span
                    class=&quot;ml-2&quot;
                  &gt;
                    32
                  &lt;/span&gt;
                &lt;/div&gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Email:
                  &lt;/span&gt;
                  &lt;span
                    class=&quot;ml-2&quot;
                  &gt;
                    jane.doe@example.com
                  &lt;/span&gt;
                &lt;/div&gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Phone:
                  &lt;/span&gt;
                  &lt;span
                    class=&quot;ml-2&quot;
                  &gt;
                    (555) 123-4567
                  &lt;/span&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div&gt;
              &lt;h2
                class=&quot;mb-4 text-lg font-semibold&quot;
              &gt;
                Medical Information
              &lt;/h2&gt;
              &lt;div
                class=&quot;space-y-3&quot;
              &gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Diagnosis:
                  &lt;/span&gt;
                  &lt;div
                    class=&quot;mt-1&quot;
                  &gt;
                    Generalized Anxiety Disorder, Major Depressive Disorder
                  &lt;/div&gt;
                &lt;/div&gt;
                &lt;div&gt;
                  &lt;span
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    Treatment Plan:
                  &lt;/span&gt;
                  &lt;div
                    class=&quot;mt-1&quot;
                  &gt;
                    CBT + SSRI medication
                  &lt;/div&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div
            class=&quot;mt-8&quot;
          &gt;
            &lt;h2
              class=&quot;mb-4 text-lg font-semibold&quot;
            &gt;
              Appointments
            &lt;/h2&gt;
            &lt;div
              class=&quot;rounded-lg bg-gray-50 p-4 dark:bg-gray-900&quot;
            &gt;
              &lt;div
                class=&quot;flex items-center justify-between&quot;
              &gt;
                &lt;div&gt;
                  &lt;h3
                    class=&quot;font-medium&quot;
                  &gt;
                    Last Visit
                  &lt;/h3&gt;
                  &lt;p
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    2025-03-15
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;div&gt;
                  &lt;h3
                    class=&quot;font-medium&quot;
                  &gt;
                    Upcoming Appointment
                  &lt;/h3&gt;
                  &lt;p
                    class=&quot;text-gray-600 dark:text-gray-400&quot;
                  &gt;
                    2025-04-05
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;button
                  class=&quot;rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700&quot;
                &gt;
                  Schedule New
                &lt;/button&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div
            class=&quot;mt-8 flex justify-end space-x-4&quot;
          &gt;
            &lt;button
              class=&quot;rounded border border-gray-300 px-4 py-2 text-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-700&quot;
            &gt;
              Download Records
            &lt;/button&gt;
            &lt;button
              class=&quot;rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700&quot;
            &gt;
              Edit Patient
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ waitForWrapper node_modules/@testing-library/dom/dist/wait-for.js:163:27
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:86:33
 ❯ src/presentation/pages/PatientProfile.test.tsx:78:18
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/pages/PatientsList.test.tsx" timestamp="2025-04-07T14:48:14.581Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/pages/PredictionAnalytics.test.tsx" timestamp="2025-04-07T14:48:14.581Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/pages/Settings.test.tsx" timestamp="2025-04-07T14:48:14.582Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.024059583">
        <testcase classname="src/presentation/pages/Settings.test.tsx" name="Settings &gt; renders with neural precision" time="0.020913958">
        </testcase>
        <testcase classname="src/presentation/pages/Settings.test.tsx" name="Settings &gt; responds to user interaction with quantum precision" time="0.002065042">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/BiometricMonitorPanel.test.tsx" timestamp="2025-04-07T14:48:14.582Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/organisms/BrainModelContainer.minimal.spec.tsx" timestamp="2025-04-07T14:48:14.582Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/organisms/BrainModelContainer.minimal.test.tsx" timestamp="2025-04-07T14:48:14.582Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.029774875">
        <testcase classname="src/presentation/organisms/BrainModelContainer.minimal.test.tsx" name="BrainModelContainer &gt; renders with neural precision" time="0.02380425">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:03.291Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/organisms/BrainModelContainer.minimal.test.tsx" name="BrainModelContainer &gt; responds to user interaction with quantum precision" time="0.003774708">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:03.305Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/BrainModelContainer.test.tsx" timestamp="2025-04-07T14:48:14.582Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.026348791">
        <testcase classname="src/presentation/organisms/BrainModelContainer.test.tsx" name="BrainModelContainer &gt; renders the container and mock children without crashing" time="0.020607375">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:02.675Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/BrainModelViewer.test.tsx" timestamp="2025-04-07T14:48:14.583Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/organisms/BrainVisualization.test.tsx" timestamp="2025-04-07T14:48:14.583Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/organisms/BrainVisualization.test.tsx" name="src/presentation/organisms/BrainVisualization.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot read properties of undefined (reading &apos;S&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;S&apos;)
 ❯ Function.process.env.NODE_ENV.module.exports [as default] node_modules/react-reconciler/cjs/react-reconciler.development.js:15915:58
 ❯ createReconciler node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:1263:52
 ❯ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:1564:35
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/BrainVisualizationContainer.test.tsx" timestamp="2025-04-07T14:48:14.583Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/organisms/ClinicalMetricsPanel.test.tsx" timestamp="2025-04-07T14:48:14.583Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.147526834">
        <testcase classname="src/presentation/organisms/ClinicalMetricsPanel.test.tsx" name="ClinicalMetricsPanel &gt; renders metrics tabs and activity content when data is provided" time="0.13564925">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:07.254Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/organisms/ClinicalMetricsPanel.test.tsx" name="ClinicalMetricsPanel &gt; applies custom class name with mathematical precision" time="0.009728292">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:07.338Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/ClinicalTimelinePanel.test.tsx" timestamp="2025-04-07T14:48:14.584Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/organisms/DigitalTwinDashboard.test.tsx" timestamp="2025-04-07T14:48:14.584Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/organisms/NeuralControlPanel.test.tsx" timestamp="2025-04-07T14:48:14.584Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/organisms/RiskAssessmentPanel.test.tsx" timestamp="2025-04-07T14:48:14.584Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.043960542">
        <testcase classname="src/presentation/organisms/RiskAssessmentPanel.test.tsx" name="RiskAssessmentPanel &gt; renders with neural precision" time="0.035766375">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:10.880Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/organisms/RiskAssessmentPanel.test.tsx" name="RiskAssessmentPanel &gt; responds to user interaction with quantum precision" time="0.0060445">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:10.888Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/TreatmentResponsePredictor.test.tsx" timestamp="2025-04-07T14:48:14.584Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.032098208">
        <testcase classname="src/presentation/organisms/TreatmentResponsePredictor.test.tsx" name="TreatmentResponsePredictor &gt; renders with neural precision" time="0.024922">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:08.187Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/organisms/TreatmentResponsePredictor.test.tsx" name="TreatmentResponsePredictor &gt; responds to user interaction with quantum precision" time="0.0051755">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:08.194Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/BiometricAlertVisualizer.test.tsx" timestamp="2025-04-07T14:48:14.584Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/molecules/BrainRegionDetails.test.tsx" timestamp="2025-04-07T14:48:14.585Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/molecules/BrainRegionGroup.test.tsx" timestamp="2025-04-07T14:48:14.585Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/molecules/BrainRegionGroup.test.tsx" name="src/presentation/molecules/BrainRegionGroup.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot read properties of undefined (reading &apos;S&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;S&apos;)
 ❯ Function.process.env.NODE_ENV.module.exports [as default] node_modules/react-reconciler/cjs/react-reconciler.development.js:15915:58
 ❯ createReconciler node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:1263:52
 ❯ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:1564:35
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/BrainRegionLabels.test.tsx" timestamp="2025-04-07T14:48:14.585Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/molecules/BrainRegionSelector.test.tsx" timestamp="2025-04-07T14:48:14.585Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/molecules/BrainVisualizationControls.test.tsx" timestamp="2025-04-07T14:48:14.585Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/molecules/Chart.test.tsx" timestamp="2025-04-07T14:48:14.585Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.052612125">
        <testcase classname="src/presentation/molecules/Chart.test.tsx" name="Chart &gt; renders with neural precision" time="0.027105875">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:12.038Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/molecules/Chart.test.tsx" name="Chart &gt; responds to user interaction with quantum precision" time="0.023201916">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:12.050Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/ClinicalDataOverlay.test.tsx" timestamp="2025-04-07T14:48:14.586Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.020935209">
        <testcase classname="src/presentation/molecules/ClinicalDataOverlay.test.tsx" name="ClinicalDataOverlay &gt; renders with neural precision" time="0.015276792">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:05.589Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/molecules/ClinicalDataOverlay.test.tsx" name="ClinicalDataOverlay &gt; responds to user interaction with quantum precision" time="0.003437542">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:05.594Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/ClinicalMetricsCard.test.tsx" timestamp="2025-04-07T14:48:14.586Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/molecules/DataStreamVisualizer.test.tsx" timestamp="2025-04-07T14:48:14.586Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/molecules/DataStreamVisualizer.test.tsx" name="src/presentation/molecules/DataStreamVisualizer.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot read properties of undefined (reading &apos;S&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;S&apos;)
 ❯ Function.process.env.NODE_ENV.module.exports [as default] node_modules/react-reconciler/cjs/react-reconciler.development.js:15915:58
 ❯ createReconciler node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:1263:52
 ❯ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:1564:35
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/Header.test.tsx" timestamp="2025-04-07T14:48:14.587Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/molecules/NeuralActivityVisualizer.test.tsx" timestamp="2025-04-07T14:48:14.587Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/molecules/NeuralConnections.test.tsx" timestamp="2025-04-07T14:48:14.587Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/molecules/PatientHeader.test.tsx" timestamp="2025-04-07T14:48:14.587Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/molecules/RegionSelectionPanel.test.tsx" timestamp="2025-04-07T14:48:14.587Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.026546584">
        <testcase classname="src/presentation/molecules/RegionSelectionPanel.test.tsx" name="RegionSelectionPanel &gt; renders with neural precision" time="0.020716541">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:05.074Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/molecules/RegionSelectionPanel.test.tsx" name="RegionSelectionPanel &gt; responds to user interaction with quantum precision" time="0.003450792">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:05.080Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/SymptomRegionMappingVisualizer.test.tsx" timestamp="2025-04-07T14:48:14.587Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/molecules/TemporalDynamicsVisualizer.test.tsx" timestamp="2025-04-07T14:48:14.587Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/molecules/TherapeuticTimelineVisualizer.test.tsx" timestamp="2025-04-07T14:48:14.587Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/molecules/TimelineEvent.test.tsx" timestamp="2025-04-07T14:48:14.587Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/molecules/TreatmentResponseVisualizer.test.tsx" timestamp="2025-04-07T14:48:14.587Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/molecules/TreatmentResponseVisualizer.test.tsx" name="src/presentation/molecules/TreatmentResponseVisualizer.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot read properties of undefined (reading &apos;S&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;S&apos;)
 ❯ Function.process.env.NODE_ENV.module.exports [as default] node_modules/react-reconciler/cjs/react-reconciler.development.js:15915:58
 ❯ createReconciler node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:1263:52
 ❯ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:1564:35
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/VisualizationControls.test.tsx" timestamp="2025-04-07T14:48:14.588Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/molecules/index.test.ts" timestamp="2025-04-07T14:48:14.588Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/templates/AuthRoute.test.tsx" timestamp="2025-04-07T14:48:14.588Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.024563709">
        <testcase classname="src/presentation/templates/AuthRoute.test.tsx" name="AuthRoute &gt; renders Outlet when authenticated" time="0.017025666">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:03.228Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/templates/AuthRoute.test.tsx" name="AuthRoute &gt; renders Navigate to /login when not authenticated" time="0.005374292">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:03.238Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/templates/BrainModelContainer.test.tsx" timestamp="2025-04-07T14:48:14.588Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/templates/BrainModelContainer.test.tsx" name="src/presentation/templates/BrainModelContainer.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot read properties of undefined (reading &apos;S&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;S&apos;)
 ❯ Function.process.env.NODE_ENV.module.exports [as default] node_modules/react-reconciler/cjs/react-reconciler.development.js:15915:58
 ❯ createReconciler node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:1263:52
 ❯ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:1564:35
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/templates/ErrorBoundary.test.tsx" timestamp="2025-04-07T14:48:14.588Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/templates/MainLayout.test.tsx" timestamp="2025-04-07T14:48:14.588Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/shared/utils/performanceUtils.test.ts" timestamp="2025-04-07T14:48:14.588Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/test/examples/tailwind-enhanced.test.tsx" timestamp="2025-04-07T14:48:14.588Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/test/webgl/mock-webgl.test.ts" timestamp="2025-04-07T14:48:14.588Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/test/webgl/three-mocks.test.ts" timestamp="2025-04-07T14:48:14.589Z" hostname="MacBookPro" tests="6" failures="0" errors="0" skipped="0" time="0.011035417">
        <testcase classname="src/test/webgl/three-mocks.test.ts" name="Three.js Mocking &gt; should create a basic Three.js scene" time="0.000465625">
        </testcase>
        <testcase classname="src/test/webgl/three-mocks.test.ts" name="Three.js Mocking &gt; should handle cleanup and memory management" time="0.001187958">
        </testcase>
        <testcase classname="src/test/webgl/three-mocks.test.ts" name="Three.js Mocking &gt; should handle parent-child relationships correctly" time="0.002387291">
        </testcase>
        <testcase classname="src/test/webgl/three-mocks.test.ts" name="Three.js Mocking &gt; should support traversal of object hierarchies" time="0.00457325">
        </testcase>
        <testcase classname="src/test/webgl/three-mocks.test.ts" name="Three.js Renderer Mocking &gt; should handle rendering without errors" time="0.001040708">
        </testcase>
        <testcase classname="src/test/webgl/three-mocks.test.ts" name="Three.js Renderer Mocking &gt; should support renderer configuration" time="0.000395125">
        </testcase>
    </testsuite>
    <testsuite name="src/application/controllers/coordinators/NeuralVisualizationCoordinator.test.tsx" timestamp="2025-04-07T14:48:14.589Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/application/services/clinical/clinical.service.minimal.test.ts" timestamp="2025-04-07T14:48:14.589Z" hostname="MacBookPro" tests="4" failures="0" errors="0" skipped="0" time="0.005447">
        <testcase classname="src/application/services/clinical/clinical.service.minimal.test.ts" name="clinicalService &gt; fetchSymptomMappings &gt; fetches neural mappings with psychiatric precision" time="0.000694625">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.minimal.test.ts" name="clinicalService &gt; fetchRiskAssessment &gt; fetches patient risk assessment with HIPAA compliance" time="0.00182275">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.minimal.test.ts" name="clinicalService &gt; updateSymptom &gt; updates symptom with clinical precision" time="0.001140625">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.minimal.test.ts" name="clinicalService &gt; generateTemporalProjections &gt; generates precise temporal projections for treatment response" time="0.0008825">
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/clinical/clinical.service.runtime.test.ts" timestamp="2025-04-07T14:48:14.589Z" hostname="MacBookPro" tests="27" failures="0" errors="0" skipped="0" time="0.006899833">
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isSymptom &gt; returns true for valid Symptom objects" time="0.000043167">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isSymptom &gt; returns false for non-object values" time="0.000078084">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isSymptom &gt; returns false for objects missing required properties" time="0.000052917">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateSymptom &gt; returns success for valid Symptom objects" time="0.000647375">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateSymptom &gt; returns failure for non-object values" time="0.000301959">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateSymptom &gt; returns failure for objects with invalid severity" time="0.000236708">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateSymptom &gt; returns failure for objects with invalid onset date" time="0.000123916">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateSymptom &gt; includes the field path in error messages when provided" time="0.001584">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isDiagnosis &gt; returns true for valid Diagnosis objects" time="0.000048375">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isDiagnosis &gt; returns false for non-object values" time="0.000105458">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isDiagnosis &gt; returns false for objects missing required properties" time="0.000042125">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateDiagnosis &gt; returns success for valid Diagnosis objects" time="0.000063708">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateDiagnosis &gt; returns failure for objects with invalid severity" time="0.000137208">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateDiagnosis &gt; returns failure for objects with invalid status" time="0.000058625">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isTreatment &gt; returns true for valid Treatment objects" time="0.000049375">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isTreatment &gt; returns false for non-object values" time="0.000057">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateTreatment &gt; returns success for valid Treatment objects" time="0.000201334">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateTreatment &gt; returns success for valid Treatment with endDate" time="0.00015425">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateTreatment &gt; returns failure for objects with invalid endDate" time="0.000090084">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isRiskAssessment &gt; returns true for valid RiskAssessment objects" time="0.000087959">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isRiskAssessment &gt; returns false for non-object values" time="0.000060625">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateRiskAssessment &gt; returns success for valid RiskAssessment objects" time="0.000148291">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateRiskAssessment &gt; returns failure for objects with invalid risk level" time="0.000070667">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isTreatmentResponsePrediction &gt; returns true for valid TreatmentResponsePrediction objects" time="0.000189916">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isTreatmentResponsePrediction &gt; returns false for non-object values" time="0.000089125">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateTreatmentResponsePrediction &gt; returns success for valid TreatmentResponsePrediction objects" time="0.000340334">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateTreatmentResponsePrediction &gt; returns failure for objects with invalid timeToEffect" time="0.000244666">
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/clinical/clinical.service.test.ts" timestamp="2025-04-07T14:48:14.591Z" hostname="MacBookPro" tests="11" failures="0" errors="0" skipped="0" time="0.007967375">
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; fetchSymptomMappings &gt; successfully fetches symptom neural mappings" time="0.000585583">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; fetchSymptomMappings &gt; handles API error responses appropriately" time="0.000163958">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; fetchDiagnosisMappings &gt; successfully fetches diagnosis neural mappings" time="0.000334375">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; fetchTreatmentMappings &gt; successfully fetches treatment neural mappings" time="0.000227083">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; fetchRiskAssessment &gt; successfully fetches patient risk assessment" time="0.000333333">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; fetchRiskAssessment &gt; handles patient not found errors" time="0.000442166">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; fetchTreatmentPredictions &gt; successfully fetches treatment response predictions" time="0.000417292">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; fetchPatientSymptoms &gt; successfully fetches patient symptoms" time="0.000171416">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; updateSymptom &gt; successfully updates a patient symptom" time="0.00054275">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; generateAlgorithmExplanation &gt; successfully generates an algorithm explanation" time="0.00226125">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; generateTemporalProjections &gt; successfully generates temporal projections" time="0.001058167">
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/clinical/risk-assessment.service.test.ts" timestamp="2025-04-07T14:48:14.591Z" hostname="MacBookPro" tests="13" failures="4" errors="0" skipped="0" time="0.008692291">
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateDepressionRiskLevel &gt; correctly calculates critical risk level" time="0.00059475">
            <failure message="expected &apos;severe&apos; to be &apos;critical&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;severe&apos; to be &apos;critical&apos; // Object.is equality

Expected: &quot;critical&quot;
Received: &quot;severe&quot;

 ❯ src/application/services/clinical/risk-assessment.service.test.ts:20:32
            </failure>
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateDepressionRiskLevel &gt; correctly calculates high risk level" time="0.000167959">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateDepressionRiskLevel &gt; correctly calculates moderate risk level" time="0.00028625">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateDepressionRiskLevel &gt; correctly calculates low risk level" time="0.000111833">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateDepressionRiskLevel &gt; correctly calculates minimal risk level" time="0.00063575">
            <failure message="expected &apos;none&apos; to be &apos;minimal&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;none&apos; to be &apos;minimal&apos; // Object.is equality

Expected: &quot;minimal&quot;
Received: &quot;none&quot;

 ❯ src/application/services/clinical/risk-assessment.service.test.ts:44:32
            </failure>
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateAnxietyRiskLevel &gt; correctly calculates critical risk level" time="0.003970625">
            <failure message="expected &apos;severe&apos; to be &apos;critical&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;severe&apos; to be &apos;critical&apos; // Object.is equality

Expected: &quot;critical&quot;
Received: &quot;severe&quot;

 ❯ src/application/services/clinical/risk-assessment.service.test.ts:52:32
            </failure>
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateAnxietyRiskLevel &gt; correctly calculates high risk level" time="0.000699958">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateAnxietyRiskLevel &gt; correctly calculates moderate risk level" time="0.000165875">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateOverallRiskLevel &gt; correctly calculates critical overall risk" time="0.000335292">
            <failure message="expected &apos;severe&apos; to be &apos;critical&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;severe&apos; to be &apos;critical&apos; // Object.is equality

Expected: &quot;critical&quot;
Received: &quot;severe&quot;

 ❯ src/application/services/clinical/risk-assessment.service.test.ts:79:32
            </failure>
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateOverallRiskLevel &gt; correctly calculates high overall risk" time="0.000063709">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateOverallRiskLevel &gt; correctly calculates moderate overall risk" time="0.000119625">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateOverallRiskLevel &gt; correctly weighs risk factors" time="0.00006625">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateOverallRiskLevel &gt; correctly accounts for social support as a protective factor" time="0.000245042">
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/brain/brain-model.service.runtime.test.ts" timestamp="2025-04-07T14:48:14.593Z" hostname="MacBookPro" tests="23" failures="4" errors="0" skipped="0" time="0.009629334">
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; isBrainModel &gt; returns true for valid BrainModel objects" time="0.000474208">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/application/services/brain/brain-model.service.runtime.test.ts:71:40
            </failure>
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; isBrainModel &gt; returns false for non-object values" time="0.00008025">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; isBrainModel &gt; returns false for objects missing required properties" time="0.0000845">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateBrainModel &gt; returns success for valid BrainModel objects" time="0.000679125">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/application/services/brain/brain-model.service.runtime.test.ts:182:30
            </failure>
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateBrainModel &gt; returns failure for non-object values" time="0.000171">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateBrainModel &gt; returns failure for objects with invalid regions" time="0.000087666">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateBrainModel &gt; returns failure for objects with invalid connections" time="0.000118791">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateBrainModel &gt; includes the field path in error messages when provided" time="0.000146166">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; isBrainRegion &gt; returns true for valid BrainRegion objects" time="0.000038292">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; isBrainRegion &gt; returns false for non-object values" time="0.000061958">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; isBrainRegion &gt; returns false for objects missing required properties" time="0.000066083">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateBrainRegion &gt; returns success for valid BrainRegion objects" time="0.00009075">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateBrainRegion &gt; returns failure for non-object values" time="0.000129833">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateBrainRegion &gt; returns failure for objects with invalid activityLevel" time="0.000185">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateBrainRegion &gt; includes the field path in error messages when provided" time="0.000050333">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; isNeuralConnection &gt; returns true for valid NeuralConnection objects" time="0.000197">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/application/services/brain/brain-model.service.runtime.test.ts:385:51
            </failure>
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; isNeuralConnection &gt; returns false for non-object values" time="0.000059958">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; isNeuralConnection &gt; returns false for objects missing required properties" time="0.000048167">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateNeuralConnection &gt; returns success for valid NeuralConnection objects" time="0.004298875">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/application/services/brain/brain-model.service.runtime.test.ts:434:30
            </failure>
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateNeuralConnection &gt; returns failure for non-object values" time="0.000148958">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateNeuralConnection &gt; returns failure for objects with invalid strength" time="0.000168083">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateNeuralConnection &gt; returns failure for objects with invalid type" time="0.000279">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateNeuralConnection &gt; includes the field path in error messages when provided" time="0.0007805">
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/brain/brain-model.service.test.ts" timestamp="2025-04-07T14:48:14.594Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/domain/models/clinical/patient-model.runtime.test.ts" timestamp="2025-04-07T14:48:14.595Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/domain/models/brain/brain-model.runtime.test.ts" timestamp="2025-04-07T14:48:14.595Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/domain/models/shared/type-verification.runtime.test.ts" timestamp="2025-04-07T14:48:14.595Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/domain/types/brain/activity.test.ts" timestamp="2025-04-07T14:48:14.595Z" hostname="MacBookPro" tests="7" failures="0" errors="0" skipped="0" time="0.002455209">
        <testcase classname="src/domain/types/brain/activity.test.ts" name="activity type definitions &gt; exports ActivationLevel with correct structure" time="0.000158417">
        </testcase>
        <testcase classname="src/domain/types/brain/activity.test.ts" name="activity type definitions &gt; can use NeuralActivityState type for activity states" time="0.000141125">
        </testcase>
        <testcase classname="src/domain/types/brain/activity.test.ts" name="activity type definitions &gt; can use NeuralActivationPattern type for activation patterns" time="0.000118042">
        </testcase>
        <testcase classname="src/domain/types/brain/activity.test.ts" name="activity type definitions &gt; can use NeuralStateTransition type for neural transitions" time="0.00008125">
        </testcase>
        <testcase classname="src/domain/types/brain/activity.test.ts" name="activity type definitions &gt; can use TemporalActivationSequence type for sequences" time="0.000215">
        </testcase>
        <testcase classname="src/domain/types/brain/activity.test.ts" name="activity type definitions &gt; can use NeuralActivityHeatmap type for spatial activity maps" time="0.000131541">
        </testcase>
        <testcase classname="src/domain/types/brain/activity.test.ts" name="activity type definitions &gt; can use ActivityVisualizationSettings type for visualization" time="0.000604208">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/types/brain/core-models.runtime.test.ts" timestamp="2025-04-07T14:48:14.595Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/domain/types/brain/index.test.ts" timestamp="2025-04-07T14:48:14.595Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/domain/types/brain/models.test.ts" timestamp="2025-04-07T14:48:14.595Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/domain/types/brain/visualization.runtime.test.ts" timestamp="2025-04-07T14:48:14.595Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/domain/types/brain/visualization.test.ts" timestamp="2025-04-07T14:48:14.595Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/domain/types/clinical/patient.runtime.test.ts" timestamp="2025-04-07T14:48:14.595Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/domain/types/clinical/risk-level.runtime.test.ts" timestamp="2025-04-07T14:48:14.596Z" hostname="MacBookPro" tests="3" failures="0" errors="0" skipped="0" time="0.002003291">
        <testcase classname="src/domain/types/clinical/risk-level.runtime.test.ts" name="Risk Level runtime validators &gt; RiskLevelValidator validates correct risk levels" time="0.000416">
        </testcase>
        <testcase classname="src/domain/types/clinical/risk-level.runtime.test.ts" name="Risk Level runtime validators &gt; RiskLevelValidator normalizes risk levels correctly" time="0.000660458">
        </testcase>
        <testcase classname="src/domain/types/clinical/risk-level.runtime.test.ts" name="Risk Level runtime validators &gt; RiskLevelValidator returns correct severity levels" time="0.000220875">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/types/clinical/risk.runtime.test.ts" timestamp="2025-04-07T14:48:14.596Z" hostname="MacBookPro" tests="5" failures="0" errors="0" skipped="0" time="0.002954">
        <testcase classname="src/domain/types/clinical/risk.runtime.test.ts" name="Risk runtime validators &gt; RiskLevelValidator validates correct RiskLevel values" time="0.000246458">
        </testcase>
        <testcase classname="src/domain/types/clinical/risk.runtime.test.ts" name="Risk runtime validators &gt; RiskAssessmentValidator validates correct RiskAssessment objects" time="0.000222583">
        </testcase>
        <testcase classname="src/domain/types/clinical/risk.runtime.test.ts" name="Risk runtime validators &gt; DomainRiskValidator validates correct DomainRisk objects" time="0.000253875">
        </testcase>
        <testcase classname="src/domain/types/clinical/risk.runtime.test.ts" name="Risk runtime validators &gt; ContributingFactorValidator validates correct ContributingFactor objects" time="0.000130833">
        </testcase>
        <testcase classname="src/domain/types/clinical/risk.runtime.test.ts" name="Risk runtime validators &gt; ProtectiveFactorValidator validates correct ProtectiveFactor objects" time="0.000733792">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/types/clinical/treatment.runtime.test.ts" timestamp="2025-04-07T14:48:14.596Z" hostname="MacBookPro" tests="9" failures="0" errors="0" skipped="0" time="0.00310725">
        <testcase classname="src/domain/types/clinical/treatment.runtime.test.ts" name="Treatment runtime validators &gt; TreatmentTypeValidator validates correct treatment types" time="0.000164416">
        </testcase>
        <testcase classname="src/domain/types/clinical/treatment.runtime.test.ts" name="Treatment runtime validators &gt; TreatmentResponseRequestValidator validates correct TreatmentResponseRequest objects" time="0.000248208">
        </testcase>
        <testcase classname="src/domain/types/clinical/treatment.runtime.test.ts" name="Treatment runtime validators &gt; TreatmentDetailsValidator validates correct TreatmentDetails objects" time="0.000132875">
        </testcase>
        <testcase classname="src/domain/types/clinical/treatment.runtime.test.ts" name="Treatment runtime validators &gt; TreatmentDetailsValidator.isValidMedication validates medication details" time="0.000085916">
        </testcase>
        <testcase classname="src/domain/types/clinical/treatment.runtime.test.ts" name="Treatment runtime validators &gt; ClinicalPredictionDataValidator validates correct ClinicalPredictionData objects" time="0.000169375">
        </testcase>
        <testcase classname="src/domain/types/clinical/treatment.runtime.test.ts" name="Treatment runtime validators &gt; GeneticPredictionDataValidator validates correct GeneticPredictionData objects" time="0.000123125">
        </testcase>
        <testcase classname="src/domain/types/clinical/treatment.runtime.test.ts" name="Treatment runtime validators &gt; BiomarkerDataValidator validates correct BiomarkerData objects" time="0.000261667">
        </testcase>
        <testcase classname="src/domain/types/clinical/treatment.runtime.test.ts" name="Treatment runtime validators &gt; TreatmentResponsePredictionValidator validates correct TreatmentResponsePrediction objects" time="0.000731417">
        </testcase>
        <testcase classname="src/domain/types/clinical/treatment.runtime.test.ts" name="Treatment runtime validators &gt; TreatmentComparisonResultValidator validates correct TreatmentComparisonResult objects" time="0.000238958">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/types/neural/transforms.runtime.test.ts" timestamp="2025-04-07T14:48:14.597Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/domain/types/neural/transforms.test.ts" timestamp="2025-04-07T14:48:14.597Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/domain/types/shared/common.runtime.test.ts" timestamp="2025-04-07T14:48:14.597Z" hostname="MacBookPro" tests="22" failures="0" errors="0" skipped="0" time="0">
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; IDValidator &gt; validates valid IDs" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; IDValidator &gt; rejects invalid IDs" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; TimestampedEntityValidator &gt; validates valid TimestampedEntity objects" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; TimestampedEntityValidator &gt; rejects invalid TimestampedEntity objects" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; UserGeneratedContentValidator &gt; validates valid UserGeneratedContent objects" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; UserGeneratedContentValidator &gt; rejects invalid UserGeneratedContent objects" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; AuditableValidator &gt; validates valid Auditable objects" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; AuditableValidator &gt; rejects invalid Auditable objects" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; VersionedEntityValidator &gt; validates valid VersionedEntity objects" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; VersionedEntityValidator &gt; rejects invalid VersionedEntity objects" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; SortOrderValidator &gt; validates valid SortOrder values" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; SortOrderValidator &gt; rejects invalid SortOrder values" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; RangeValidator &gt; validates valid Range objects" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; RangeValidator &gt; rejects invalid Range objects" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; Point2DValidator &gt; validates valid Point2D objects" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; Point2DValidator &gt; rejects invalid Point2D objects" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; ColorRGBValidator &gt; validates valid ColorRGB objects" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; ColorRGBValidator &gt; rejects invalid ColorRGB objects" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; ColorRGBAValidator &gt; validates valid ColorRGBA objects" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; ColorRGBAValidator &gt; rejects invalid ColorRGBA objects" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; DimensionsValidator &gt; validates valid Dimensions objects" time="0">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; DimensionsValidator &gt; rejects invalid Dimensions objects" time="0">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/utils/brain/type-verification.test.ts" timestamp="2025-04-07T14:48:14.598Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/domain/utils/clinical/type-verification.test.ts" timestamp="2025-04-07T14:48:14.598Z" hostname="MacBookPro" tests="29" failures="0" errors="0" skipped="0" time="0.009951375">
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyRiskLevel &gt; verifies valid RiskLevel values" time="0.000157667">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyRiskLevel &gt; fails on invalid RiskLevel values" time="0.000102417">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifySymptom &gt; verifies valid Symptom objects" time="0.000103625">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifySymptom &gt; accepts optional properties" time="0.000307417">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifySymptom &gt; fails when required properties are missing" time="0.000118792">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifySymptom &gt; fails when properties have wrong types" time="0.000050458">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyDiagnosis &gt; verifies valid Diagnosis objects" time="0.000188167">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyDiagnosis &gt; accepts optional properties" time="0.000132417">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyDiagnosis &gt; fails when required properties are missing" time="0.000042667">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyDiagnosis &gt; verifies valid string date for diagnosisDate" time="0.000080583">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyDiagnosis &gt; fails when diagnosisDate is not a string" time="0.000178542">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyTreatment &gt; verifies valid Treatment objects" time="0.00009875">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyTreatment &gt; accepts optional properties" time="0.000385125">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyTreatment &gt; fails when required properties are missing" time="0.000047333">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyTreatmentResponse &gt; verifies valid TreatmentResponse objects" time="0.000248541">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyTreatmentResponse &gt; accepts optional properties" time="0.000584291">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyTreatmentResponse &gt; fails when required properties are missing" time="0.000222292">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyTreatmentResponse &gt; fails when date is not a Date object" time="0.000069459">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyPatient &gt; verifies valid Patient objects" time="0.000540542">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyPatient &gt; accepts optional properties" time="0.000222542">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyPatient &gt; verifies arrays of clinical data" time="0.001968666">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyPatient &gt; fails when required properties are missing" time="0.0000805">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyPatient &gt; fails when arrays contain invalid items" time="0.00011025">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; assertion functions &gt; assertRiskLevel passes for valid RiskLevel" time="0.000097709">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; assertion functions &gt; assertRiskLevel throws for invalid RiskLevel" time="0.00019475">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; assertion functions &gt; assertSymptom passes for valid Symptom" time="0.0001995">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; assertion functions &gt; assertSymptom throws for invalid Symptom" time="0.000314375">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; assertion functions &gt; assertPatient passes for valid Patient" time="0.000341292">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; assertion functions &gt; assertPatient throws for invalid Patient" time="0.001236417">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/utils/shared/type-verification.test.ts" timestamp="2025-04-07T14:48:14.600Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/containers/__tests__/BrainModelContainer.test.tsx" timestamp="2025-04-07T14:48:14.600Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/presentation/organisms/__tests__/BrainVisualizationExample.test.tsx" timestamp="2025-04-07T14:48:14.600Z" hostname="MacBookPro" tests="5" failures="0" errors="0" skipped="0" time="0.035969833">
        <testcase classname="src/presentation/organisms/__tests__/BrainVisualizationExample.test.tsx" name="BrainVisualization Component with WebGL Mocks &gt; renders the brain visualization" time="0.002707041">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:08.046Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/organisms/__tests__/BrainVisualizationExample.test.tsx" name="BrainVisualization Component with WebGL Mocks &gt; allows selecting brain regions" time="0.0046725">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:08.048Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/organisms/__tests__/BrainVisualizationExample.test.tsx" name="BrainVisualization with runTestWithWebGL utility &gt; renders with different detail levels" time="0.004112916">
            <system-out>
WebGL mocks set up
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:08.043Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

WebGL mocks cleaned up

            </system-out>
        </testcase>
        <testcase classname="src/presentation/organisms/__tests__/BrainVisualizationExample.test.tsx" name="BrainVisualization with Neural Controller Mocks &gt; renders with neural activity data" time="0.017863958">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:08.032Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/organisms/__tests__/BrainVisualizationExample.test.tsx" name="BrainVisualization Memory Management &gt; properly disposes resources when unmounted" time="0.002482458">
            <system-out>
WebGL mocks set up
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-07T14:48:08.054Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

WebGL mocks cleaned up

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/shaders/shaders/neuralGlow.test.ts" timestamp="2025-04-07T14:48:14.600Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/test/webgl/examples/BrainRegionVisualizer.test.ts" timestamp="2025-04-07T14:48:14.601Z" hostname="MacBookPro" tests="0" failures="0" errors="0" skipped="0" time="0">
    </testsuite>
    <testsuite name="src/domain/models/brain/mapping/brain-mapping.test.ts" timestamp="2025-04-07T14:48:14.601Z" hostname="MacBookPro" tests="5" failures="0" errors="0" skipped="0" time="0.00248925">
        <testcase classname="src/domain/models/brain/mapping/brain-mapping.test.ts" name="calculateNeuralActivation &gt; should calculate activation based on symptoms only" time="0.000165375">
        </testcase>
        <testcase classname="src/domain/models/brain/mapping/brain-mapping.test.ts" name="calculateNeuralActivation &gt; should calculate activation based on diagnoses only" time="0.000166459">
        </testcase>
        <testcase classname="src/domain/models/brain/mapping/brain-mapping.test.ts" name="calculateNeuralActivation &gt; should combine symptom and diagnosis activations quadratically" time="0.000403667">
        </testcase>
        <testcase classname="src/domain/models/brain/mapping/brain-mapping.test.ts" name="calculateNeuralActivation &gt; should return 0 activation if no mappings match" time="0.000153875">
        </testcase>
        <testcase classname="src/domain/models/brain/mapping/brain-mapping.test.ts" name="calculateNeuralActivation &gt; should cap activation at 1.0" time="0.000702417">
        </testcase>
    </testsuite>
</testsuites>
