<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="738" failures="50" errors="0" time="2.828200047">
    <testsuite name="src/main.test.tsx" timestamp="2025-04-06T16:55:22.633Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.012052958">
        <testcase classname="src/main.test.tsx" name="main &gt; renders with neural precision" time="0.0014355">
        </testcase>
        <testcase classname="src/main.test.tsx" name="main &gt; responds to user interaction with quantum precision" time="0.009668709">
        </testcase>
    </testsuite>
    <testsuite name="src/pages/Dashboard.test.tsx" timestamp="2025-04-06T16:55:22.633Z" hostname="MacBookPro" tests="2" failures="1" errors="0" skipped="0" time="0.175587917">
        <testcase classname="src/pages/Dashboard.test.tsx" name="Dashboard &gt; renders key dashboard elements with neural precision" time="0.024455083">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:25.729Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/pages/Dashboard.test.tsx" name="Dashboard &gt; navigates when &apos;View Brain&apos; is clicked" time="0.149062792">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:25.596Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
            <system-err>
TypeError: Cannot read properties of undefined (reading &apos;log&apos;)
    at [90m/Users/ray/Desktop/GITHUB/Novamind-Frontend/[39msrc/presentation/pages/Dashboard.tsx:73:23
    at onClick [90m(/Users/ray/Desktop/GITHUB/Novamind-Frontend/[39msrc/presentation/pages/Dashboard.tsx:351:38[90m)[39m
    at executeDispatch [90m(/Users/ray/Desktop/GITHUB/Novamind-Frontend/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:16368:9[90m)[39m
    at runWithFiberInDEV [90m(/Users/ray/Desktop/GITHUB/Novamind-Frontend/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at processDispatchQueue [90m(/Users/ray/Desktop/GITHUB/Novamind-Frontend/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:16418:19[90m)[39m
    at [90m/Users/ray/Desktop/GITHUB/Novamind-Frontend/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:17016:9
    at batchedUpdates$1 [90m(/Users/ray/Desktop/GITHUB/Novamind-Frontend/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:3262:40[90m)[39m
    at dispatchEventForPluginEventSystem [90m(/Users/ray/Desktop/GITHUB/Novamind-Frontend/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:16572:7[90m)[39m
    at dispatchEvent [90m(/Users/ray/Desktop/GITHUB/Novamind-Frontend/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:20658:11[90m)[39m
    at dispatchDiscreteEvent [90m(/Users/ray/Desktop/GITHUB/Novamind-Frontend/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:20626:11[90m)[39m {
  stackStr: [32m&quot;TypeError: Cannot read properties of undefined (reading &apos;log&apos;)\n&quot;[39m +
    [32m&apos;    at /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/pages/Dashboard.tsx:73:23\n&apos;[39m +
    [32m&apos;    at onClick (/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/pages/Dashboard.tsx:351:38)\n&apos;[39m +
    [32m&apos;    at executeDispatch (/Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-dom/cjs/react-dom-client.development.js:16368:9)\n&apos;[39m +
    [32m&apos;    at runWithFiberInDEV (/Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n&apos;[39m +
    [32m&apos;    at processDispatchQueue (/Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-dom/cjs/react-dom-client.development.js:16418:19)\n&apos;[39m +
    [32m&apos;    at /Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-dom/cjs/react-dom-client.development.js:17016:9\n&apos;[39m +
    [32m&apos;    at batchedUpdates$1 (/Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-dom/cjs/react-dom-client.development.js:3262:40)\n&apos;[39m +
    [32m&apos;    at dispatchEventForPluginEventSystem (/Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-dom/cjs/react-dom-client.development.js:16572:7)\n&apos;[39m +
    [32m&apos;    at dispatchEvent (/Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-dom/cjs/react-dom-client.development.js:20658:11)\n&apos;[39m +
    [32m&apos;    at dispatchDiscreteEvent (/Users/ray/Desktop/GITHUB/Novamind-Frontend/node_modules/react-dom/cjs/react-dom-client.development.js:20626:11)&apos;[39m,
  nameStr: [32m&apos;TypeError&apos;[39m,
  expected: [32m&apos;undefined&apos;[39m,
  actual: [32m&apos;undefined&apos;[39m
}

            </system-err>
            <failure message="expected &quot;spy&quot; to be called with arguments: [ &apos;/brain-visualization/demo&apos; ][90m

Received: 

[39m[90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ &apos;/brain-visualization/demo&apos; ]

Received: 



Number of calls: 0

 ‚ùØ src/pages/Dashboard.test.tsx:79:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/App.test.tsx" timestamp="2025-04-06T16:55:22.635Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="2" time="0">
        <testcase classname="src/presentation/App.test.tsx" name="index &gt; renders with neural precision" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/presentation/App.test.tsx" name="index &gt; responds to user interaction with quantum precision" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="src/test/absolute-minimal.spec.tsx" timestamp="2025-04-06T16:55:22.635Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.015652292">
        <testcase classname="src/test/absolute-minimal.spec.tsx" name="Absolute Minimal Test &gt; renders a minimal component with quantum precision" time="0.013897042">
        </testcase>
        <testcase classname="src/test/absolute-minimal.spec.tsx" name="Absolute Minimal Test &gt; performs basic assertions with clinical precision" time="0.001025084">
        </testcase>
    </testsuite>
    <testsuite name="src/test/minimal-brain-container.spec.tsx" timestamp="2025-04-06T16:55:22.635Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.023303709">
        <testcase classname="src/test/minimal-brain-container.spec.tsx" name="Minimal Brain Container Test &gt; should render the mocked component with neural precision" time="0.007353125">
            <system-out>
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mdata-testid[39m=[32m&quot;brain-model-container&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mdata-testid[39m=[32m&quot;brain-model&quot;[39m
      [36m&gt;[39m
        [0mNeural Visualization[0m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mdata-testid[39m=[32m&quot;patient-id&quot;[39m
      [36m&gt;[39m
        [0mTEST-PATIENT-001[0m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mdata-testid[39m=[32m&quot;neural-controls&quot;[39m
      [36m&gt;[39m
        [0mNeural Controls[0m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m

            </system-out>
        </testcase>
        <testcase classname="src/test/minimal-brain-container.spec.tsx" name="Minimal Brain Container Test &gt; should have the correct neural structure" time="0.015162">
        </testcase>
    </testsuite>
    <testsuite name="src/test/minimal-brain-test.spec.ts" timestamp="2025-04-06T16:55:22.636Z" hostname="MacBookPro" tests="3" failures="0" errors="0" skipped="0" time="0.001573583">
        <testcase classname="src/test/minimal-brain-test.spec.ts" name="Minimal Brain Test &gt; should pass a simple assertion" time="0.000516833">
        </testcase>
        <testcase classname="src/test/minimal-brain-test.spec.ts" name="Minimal Brain Test &gt; should handle basic math" time="0.000135375">
        </testcase>
        <testcase classname="src/test/minimal-brain-test.spec.ts" name="Minimal Brain Test &gt; should handle basic string operations" time="0.000181417">
        </testcase>
    </testsuite>
    <testsuite name="src/test/minimal-ts.test.ts" timestamp="2025-04-06T16:55:22.637Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.001797334">
        <testcase classname="src/test/minimal-ts.test.ts" name="Basic TypeScript Test &gt; confirms that basic assertions work" time="0.001005167">
        </testcase>
    </testsuite>
    <testsuite name="src/test/minimal.test.ts" timestamp="2025-04-06T16:55:22.637Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.001751125">
        <testcase classname="src/test/minimal.test.ts" name="Minimal TypeScript Test &gt; verifies basic arithmetic calculations" time="0.000234625">
        </testcase>
        <testcase classname="src/test/minimal.test.ts" name="Minimal TypeScript Test &gt; verifies that TextEncoder works correctly" time="0.000727625">
        </testcase>
    </testsuite>
    <testsuite name="src/test/neural-standalone.spec.tsx" timestamp="2025-04-06T16:55:22.637Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.036745042">
        <testcase classname="src/test/neural-standalone.spec.tsx" name="Neural Standalone Test &gt; renders the neural container with quantum precision" time="0.010943291">
        </testcase>
        <testcase classname="src/test/neural-standalone.spec.tsx" name="Neural Standalone Test &gt; handles patient ID with clinical precision" time="0.024704375">
        </testcase>
    </testsuite>
    <testsuite name="src/test/sanity.test.ts" timestamp="2025-04-06T16:55:22.637Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.00149425">
        <testcase classname="src/test/sanity.test.ts" name="Sanity Check &gt; should pass a basic assertion" time="0.000180042">
        </testcase>
        <testcase classname="src/test/sanity.test.ts" name="Sanity Check &gt; should confirm imports work" time="0.00052375">
        </testcase>
    </testsuite>
    <testsuite name="src/test/standalone-brain-test.spec.tsx" timestamp="2025-04-06T16:55:22.637Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.053713917">
        <testcase classname="src/test/standalone-brain-test.spec.tsx" name="Standalone Brain Container Test &gt; renders the standalone container with quantum precision" time="0.05134575">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:25.442Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/test/tailwind-example.unified.test.tsx" timestamp="2025-04-06T16:55:22.638Z" hostname="MacBookPro" tests="3" failures="0" errors="0" skipped="0" time="0.0377575">
        <testcase classname="src/test/tailwind-example.unified.test.tsx" name="Tailwind CSS Testing with Unified Setup &gt; renders correctly in light mode" time="0.0232415">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:20.230Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/test/tailwind-example.unified.test.tsx" name="Tailwind CSS Testing with Unified Setup &gt; components have proper dark mode classes" time="0.004177708">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:20.251Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/test/tailwind-example.unified.test.tsx" name="Tailwind CSS Testing with Unified Setup &gt; can toggle dark mode during test execution" time="0.008259334">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:20.244Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/test/tailwind-testing-example.test.tsx" timestamp="2025-04-06T16:55:22.638Z" hostname="MacBookPro" tests="4" failures="0" errors="0" skipped="0" time="0.038639291">
        <testcase classname="src/test/tailwind-testing-example.test.tsx" name="Tailwind CSS Testing with Unified Setup &gt; renders component with correct light mode classes" time="0.019729417">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:13.746Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/test/tailwind-testing-example.test.tsx" name="Tailwind CSS Testing with Unified Setup &gt; renders component with correct dark mode classes when dark mode is enabled" time="0.004201042">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:13.767Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/test/tailwind-testing-example.test.tsx" name="Tailwind CSS Testing with Unified Setup &gt; can toggle dark mode during test execution" time="0.007136209">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:13.761Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/test/tailwind-testing-example.test.tsx" name="Tailwind CSS Testing with Unified Setup &gt; simulates clicking a button with tailwind classes" time="0.004804875">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:13.757Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/test/vite-env.d.test.ts" timestamp="2025-04-06T16:55:22.639Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.00172725">
        <testcase classname="src/test/vite-env.d.test.ts" name="Vite Environment Types &gt; verifies Vite types with clinical precision" time="0.000222667">
        </testcase>
        <testcase classname="src/test/vite-env.d.test.ts" name="Vite Environment Types &gt; maintains neural precision with custom environment variables" time="0.000696709">
        </testcase>
    </testsuite>
    <testsuite name="src/application/contexts/ThemeContext.test.tsx" timestamp="2025-04-06T16:55:22.639Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.001423292">
        <testcase classname="src/application/contexts/ThemeContext.test.tsx" name="ThemeContext Module (Minimal) &gt; exists as a module" time="0.000504708">
        </testcase>
    </testsuite>
    <testsuite name="src/application/contexts/ThemeProviderComponent.test.tsx" timestamp="2025-04-06T16:55:22.640Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.010723125">
        <testcase classname="src/application/contexts/ThemeProviderComponent.test.tsx" name="useTheme &gt; initializes with correct default state" time="0.0014625">
        </testcase>
        <testcase classname="src/application/contexts/ThemeProviderComponent.test.tsx" name="useTheme &gt; handles state changes with mathematical precision" time="0.008406208">
        </testcase>
    </testsuite>
    <testsuite name="src/application/controllers/ClinicalPredictionController.runtime.test.ts" timestamp="2025-04-06T16:55:22.640Z" hostname="MacBookPro" tests="12" failures="0" errors="0" skipped="0" time="0.004837292">
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateSymptomPredictionParams &gt; should return Ok for valid SymptomPredictionParams" time="0.00093825">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateSymptomPredictionParams &gt; should return Err for non-object input" time="0.000212791">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateSymptomPredictionParams &gt; should return Err for params missing required fields (patientId)" time="0.000218375">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateSymptomPredictionParams &gt; should return Err for params with incorrect field types (symptomIds)" time="0.001080083">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateConfigurePredictionParams &gt; should return Ok for valid ConfigurePredictionParams" time="0.000110458">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateConfigurePredictionParams &gt; should return Ok for empty config object" time="0.000113792">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateConfigurePredictionParams &gt; should return Err for invalid field value (predictionHorizon)" time="0.000181917">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validatePredictionResultData &gt; should return Ok for valid PredictionResultData (basic object check)" time="0.000167334">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validatePredictionResultData &gt; should return Err for non-object input" time="0.000129833">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateRiskAssessmentData &gt; should return Ok for valid RiskAssessmentData" time="0.000183083">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateRiskAssessmentData &gt; should return Err for non-object input" time="0.000129917">
        </testcase>
        <testcase classname="src/application/controllers/ClinicalPredictionController.runtime.test.ts" name="ClinicalPredictionController Runtime Validation &gt; validateRiskAssessmentData &gt; should return Err for data missing required fields (overallRisk)" time="0.000151917">
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/BiometricStreamController.test.ts" timestamp="2025-04-06T16:55:22.641Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="2" time="0">
        <testcase classname="src/application/services/BiometricStreamController.test.ts" name="BiometricStreamController (Rebuilt) &gt; initializes with default state" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/application/services/BiometricStreamController.test.ts" name="BiometricStreamController (Rebuilt) &gt; connects streams and updates state" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/ClinicalPredictionController.test.ts" timestamp="2025-04-06T16:55:22.641Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/application/services/ClinicalPredictionController.test.ts" name="src/application/services/ClinicalPredictionController.test.ts" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@application/controllers/ClinicalPredictionController&quot; from &quot;src/application/services/ClinicalPredictionController.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@application/controllers/ClinicalPredictionController&quot; from &quot;src/application/services/ClinicalPredictionController.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/application/services/ClinicalPredictionController.test.ts:9:48
  1  |  import { describe, it, expect } from &quot;vitest&quot;;
  2  |  import { renderHook } from &quot;@testing-library/react&quot;;
  3  |  import { useClinicalPredictionController } from &quot;@application/controllers/ClinicalPredictionController&quot;;
     |                                                   ^
  4  |  describe(&quot;useClinicalPredictionController&quot;, () =&gt; {
  5  |    it(&quot;processes data with mathematical precision&quot;, () =&gt; {
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/application/services/ClinicalPredictionController.test.ts&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/application/services/ClinicalPredictionController.test.ts&apos;, line: 9, column: 48 }, frame: &apos;1  |  import { describe, it, expect } from &quot;vitest&quot;;\n2  |  import { renderHook } from &quot;@testing-library/react&quot;;\n3  |  import { useClinicalPredictionController } from &quot;@application/controllers/ClinicalPredictionController&quot;;\n   |                                                   ^\n4  |  describe(&quot;useClinicalPredictionController&quot;, () =&gt; {\n5  |    it(&quot;processes data with mathematical precision&quot;, () =&gt; {&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/NeuralActivityController.test.ts" timestamp="2025-04-06T16:55:22.642Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/application/services/NeuralActivityController.test.ts" name="src/application/services/NeuralActivityController.test.ts" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@/application/controllers/NeuralActivityController&quot; from &quot;src/application/services/NeuralActivityController.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@/application/controllers/NeuralActivityController&quot; from &quot;src/application/services/NeuralActivityController.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/application/services/NeuralActivityController.test.ts:10:0
  7  |  }));
  8  |  const __vi_import_0__ = await import(&quot;@test/webgl&quot;);
  9  |  const __vi_import_1__ = await import(&quot;@/application/controllers/NeuralActivityController&quot;);
     |                                       ^
  10 |  import { describe, it, expect, vi, beforeEach, afterEach } from &quot;vitest&quot;;
  11 |  
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/application/services/NeuralActivityController.test.ts&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/application/services/NeuralActivityController.test.ts&apos;, line: 10, column: +0 }, frame: &apos;7  |  }));\n8  |  const __vi_import_0__ = await import(&quot;@test/webgl&quot;);\n9  |  const __vi_import_1__ = await import(&quot;@/application/controllers/NeuralActivityController&quot;);\n   |                                       ^\n10 |  import { describe, it, expect, vi, beforeEach, afterEach } from &quot;vitest&quot;;\n11 |  &apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/NeuroSyncOrchestrator.test.ts" timestamp="2025-04-06T16:55:22.643Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/application/services/NeuroSyncOrchestrator.test.ts" name="src/application/services/NeuroSyncOrchestrator.test.ts" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@application/orchestrators/NeuroSyncOrchestrator&quot; from &quot;src/application/services/NeuroSyncOrchestrator.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@application/orchestrators/NeuroSyncOrchestrator&quot; from &quot;src/application/services/NeuroSyncOrchestrator.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/application/services/NeuroSyncOrchestrator.test.ts:9:0
  46 |  }));
  47 |  const __vi_import_0__ = await import(&quot;@testing-library/react&quot;);
  48 |  const __vi_import_1__ = await import(&quot;@application/orchestrators/NeuroSyncOrchestrator&quot;);
     |                                       ^
  49 |  const __vi_import_2__ = await import(&quot;@application/services/brain/brain-model.service&quot;);
  50 |  const __vi_import_3__ = await import(&quot;@application/services/clinicalService&quot;);
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/application/services/NeuroSyncOrchestrator.test.ts&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/application/services/NeuroSyncOrchestrator.test.ts&apos;, line: 9, column: +0 }, frame: &apos;46 |  }));\n47 |  const __vi_import_0__ = await import(&quot;@testing-library/react&quot;);\n48 |  const __vi_import_1__ = await import(&quot;@application/orchestrators/NeuroSyncOrchestrator&quot;);\n   |                                       ^\n49 |  const __vi_import_2__ = await import(&quot;@application/services/brain/brain-model.service&quot;);\n50 |  const __vi_import_3__ = await import(&quot;@application/services/clinicalService&quot;);&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/TemporalDynamicsController.test.ts" timestamp="2025-04-06T16:55:22.643Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/application/services/TemporalDynamicsController.test.ts" name="src/application/services/TemporalDynamicsController.test.ts" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@application/controllers/TemporalDynamicsController&quot; from &quot;src/application/services/TemporalDynamicsController.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@application/controllers/TemporalDynamicsController&quot; from &quot;src/application/services/TemporalDynamicsController.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/application/services/TemporalDynamicsController.test.ts:9:46
  1  |  import { describe, it, expect } from &quot;vitest&quot;;
  2  |  import { renderHook } from &quot;@testing-library/react&quot;;
  3  |  import { useTemporalDynamicsController } from &quot;@application/controllers/TemporalDynamicsController&quot;;
     |                                                 ^
  4  |  describe(&quot;useTemporalDynamicsController&quot;, () =&gt; {
  5  |    it(&quot;processes data with mathematical precision&quot;, () =&gt; {
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/application/services/TemporalDynamicsController.test.ts&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/application/services/TemporalDynamicsController.test.ts&apos;, line: 9, column: 46 }, frame: &apos;1  |  import { describe, it, expect } from &quot;vitest&quot;;\n2  |  import { renderHook } from &quot;@testing-library/react&quot;;\n3  |  import { useTemporalDynamicsController } from &quot;@application/controllers/TemporalDynamicsController&quot;;\n   |                                                 ^\n4  |  describe(&quot;useTemporalDynamicsController&quot;, () =&gt; {\n5  |    it(&quot;processes data with mathematical precision&quot;, () =&gt; {&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/domain/models/index.test.ts" timestamp="2025-04-06T16:55:22.644Z" hostname="MacBookPro" tests="4" failures="0" errors="0" skipped="0" time="0.00213075">
        <testcase classname="src/domain/models/index.test.ts" name="Domain models index exports &gt; exports brain model functions" time="0.000699709">
        </testcase>
        <testcase classname="src/domain/models/index.test.ts" name="Domain models index exports &gt; exports brain mapping functions" time="0.000222041">
        </testcase>
        <testcase classname="src/domain/models/index.test.ts" name="Domain models index exports &gt; exports patient model functions" time="0.000140792">
        </testcase>
        <testcase classname="src/domain/models/index.test.ts" name="Domain models index exports &gt; does not export legacy model implementations" time="0.00023975">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/utils/brainDataTransformer.runtime.test.ts" timestamp="2025-04-06T16:55:22.644Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/domain/utils/brainDataTransformer.runtime.test.ts" name="src/domain/utils/brainDataTransformer.runtime.test.ts" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@/utils/brainDataTransformer.runtime&quot; from &quot;src/domain/utils/brainDataTransformer.runtime.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@/utils/brainDataTransformer.runtime&quot; from &quot;src/domain/utils/brainDataTransformer.runtime.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/domain/utils/brainDataTransformer.runtime.test.ts:12:7
  6  |    validateThemeSettings,
  7  |    isThemeSettings
  8  |  } from &quot;@/utils/brainDataTransformer.runtime&quot;;
     |          ^
  9  |  import { RenderMode } from &quot;@domain/types/brain&quot;;
  10 |  import { generateMockBrainData } from &quot;@/utils/brainDataTransformer&quot;;
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/domain/utils/brainDataTransformer.runtime.test.ts&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/domain/utils/brainDataTransformer.runtime.test.ts&apos;, line: 12, column: 7 }, frame: &apos;6  |    validateThemeSettings,\n7  |    isThemeSettings\n8  |  } from &quot;@/utils/brainDataTransformer.runtime&quot;;\n   |          ^\n9  |  import { RenderMode } from &quot;@domain/types/brain&quot;;\n10 |  import { generateMockBrainData } from &quot;@/utils/brainDataTransformer&quot;;&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/domain/utils/brainDataTransformer.test.ts" timestamp="2025-04-06T16:55:22.645Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/domain/utils/brainDataTransformer.test.ts" name="src/domain/utils/brainDataTransformer.test.ts" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@/utils/brainDataTransformer&quot; from &quot;src/domain/utils/brainDataTransformer.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@/utils/brainDataTransformer&quot; from &quot;src/domain/utils/brainDataTransformer.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/domain/utils/brainDataTransformer.test.ts:8:35
  1  |  import { describe, it, expect } from &quot;vitest&quot;;
  2  |  import { transformBrainData } from &quot;@/utils/brainDataTransformer&quot;;
     |                                      ^
  3  |  describe(&quot;transformBrainData&quot;, () =&gt; {
  4  |    it(&quot;processes data with mathematical precision&quot;, () =&gt; {
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/domain/utils/brainDataTransformer.test.ts&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/domain/utils/brainDataTransformer.test.ts&apos;, line: 8, column: 35 }, frame: &apos;1  |  import { describe, it, expect } from &quot;vitest&quot;;\n2  |  import { transformBrainData } from &quot;@/utils/brainDataTransformer&quot;;\n   |                                      ^\n3  |  describe(&quot;transformBrainData&quot;, () =&gt; {\n4  |    it(&quot;processes data with mathematical precision&quot;, () =&gt; {&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/domain/utils/index.test.ts" timestamp="2025-04-06T16:55:22.645Z" hostname="MacBookPro" tests="5" failures="0" errors="0" skipped="5" time="0">
        <testcase classname="src/domain/utils/index.test.ts" name="Domain utilities exports &gt; exports shared type verification utilities" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/domain/utils/index.test.ts" name="Domain utilities exports &gt; exports brain-specific type verification utilities" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/domain/utils/index.test.ts" name="Domain utilities exports &gt; exports clinical-specific type verification utilities" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/domain/utils/index.test.ts" name="Domain utilities exports &gt; exports unified verifiers object" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/domain/utils/index.test.ts" name="Domain utilities exports &gt; ensures verifiers have the correct methods" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="src/domain/utils/progressiveLoader.runtime.test.ts" timestamp="2025-04-06T16:55:22.646Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/domain/utils/progressiveLoader.runtime.test.ts" name="src/domain/utils/progressiveLoader.runtime.test.ts" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@/utils/progressiveLoader.runtime&quot; from &quot;src/domain/utils/progressiveLoader.runtime.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@/utils/progressiveLoader.runtime&quot; from &quot;src/domain/utils/progressiveLoader.runtime.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/domain/utils/progressiveLoader.runtime.test.ts:14:7
  5  |    validateNeuralConnectionArray,
  6  |    validateProgressCallback
  7  |  } from &quot;@/utils/progressiveLoader.runtime&quot;;
     |          ^
  8  |  import { generateMockBrainData } from &quot;@/utils/brainDataTransformer&quot;;
  9  |  const mockValidBrainModel = generateMockBrainData();
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/domain/utils/progressiveLoader.runtime.test.ts&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/domain/utils/progressiveLoader.runtime.test.ts&apos;, line: 14, column: 7 }, frame: &apos;5  |    validateNeuralConnectionArray,\n6  |    validateProgressCallback\n7  |  } from &quot;@/utils/progressiveLoader.runtime&quot;;\n   |          ^\n8  |  import { generateMockBrainData } from &quot;@/utils/brainDataTransformer&quot;;\n9  |  const mockValidBrainModel = generateMockBrainData();&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/domain/utils/progressiveLoader.test.ts" timestamp="2025-04-06T16:55:22.646Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/domain/utils/progressiveLoader.test.ts" name="src/domain/utils/progressiveLoader.test.ts" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@/utils/progressiveLoader&quot; from &quot;src/domain/utils/progressiveLoader.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@/utils/progressiveLoader&quot; from &quot;src/domain/utils/progressiveLoader.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/domain/utils/progressiveLoader.test.ts:8:41
  1  |  import { describe, it, expect } from &quot;vitest&quot;;
  2  |  import { loadRegionsProgressively } from &quot;@/utils/progressiveLoader&quot;;
     |                                            ^
  3  |  describe(&quot;loadRegionsProgressively&quot;, () =&gt; {
  4  |    it(&quot;processes data with mathematical precision&quot;, () =&gt; {
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/domain/utils/progressiveLoader.test.ts&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/domain/utils/progressiveLoader.test.ts&apos;, line: 8, column: 41 }, frame: &apos;1  |  import { describe, it, expect } from &quot;vitest&quot;;\n2  |  import { loadRegionsProgressively } from &quot;@/utils/progressiveLoader&quot;;\n   |                                            ^\n3  |  describe(&quot;loadRegionsProgressively&quot;, () =&gt; {\n4  |    it(&quot;processes data with mathematical precision&quot;, () =&gt; {&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/application/providers/ThemeProvider.enhanced.test.tsx" timestamp="2025-04-06T16:55:22.647Z" hostname="MacBookPro" tests="6" failures="0" errors="0" skipped="2" time="0.0944675">
        <testcase classname="src/application/providers/ThemeProvider.enhanced.test.tsx" name="ThemeProvider (Enhanced Tests with renderWithProviders) &gt; initializes with default theme (clinical/light)" time="0.020589875">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:19.497Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/application/providers/ThemeProvider.enhanced.test.tsx" name="ThemeProvider (Enhanced Tests with renderWithProviders) &gt; toggles to dark mode via setTheme" time="0.051100541">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:19.512Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:19.559Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to dark&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/application/providers/ThemeProvider.enhanced.test.tsx" name="ThemeProvider (Enhanced Tests with renderWithProviders) &gt; toggles back to light mode via setTheme" time="0.014916083">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:19.562Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to dark&apos;[39m
}
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:19.575Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to light&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/application/providers/ThemeProvider.enhanced.test.tsx" name="ThemeProvider (Enhanced Tests with renderWithProviders) &gt; respects localStorage preference on initial render" time="0.005836084">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:19.507Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to dark&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/application/providers/ThemeProvider.enhanced.test.tsx" name="ThemeProvider (Enhanced Tests with renderWithProviders) &gt; uses system preference when theme is set to system" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/application/providers/ThemeProvider.enhanced.test.tsx" name="ThemeProvider (Enhanced Tests with renderWithProviders) &gt; updates theme when system preference changes while set to system" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="src/application/providers/ThemeProvider.test.tsx" timestamp="2025-04-06T16:55:22.647Z" hostname="MacBookPro" tests="5" failures="5" errors="0" skipped="0" time="0.026761625">
        <testcase classname="src/application/providers/ThemeProvider.test.tsx" name="ThemeProvider &gt; uses system theme by default" time="0.003964292">
            <failure message="(0 , useTheme) is not a function" type="TypeError">
TypeError: (0 , useTheme) is not a function
 ‚ùØ TestComponent src/application/providers/ThemeProvider.test.tsx:9:31
 ‚ùØ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ‚ùØ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ‚ùØ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ‚ùØ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ‚ùØ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ‚ùØ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ‚ùØ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ‚ùØ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ‚ùØ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/application/providers/ThemeProvider.test.tsx" name="ThemeProvider &gt; loads saved theme from localStorage" time="0.002083458">
            <failure message="(0 , useTheme) is not a function" type="TypeError">
TypeError: (0 , useTheme) is not a function
 ‚ùØ TestComponent src/application/providers/ThemeProvider.test.tsx:9:31
 ‚ùØ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ‚ùØ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ‚ùØ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ‚ùØ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ‚ùØ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ‚ùØ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ‚ùØ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ‚ùØ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ‚ùØ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/application/providers/ThemeProvider.test.tsx" name="ThemeProvider &gt; allows changing theme" time="0.00286325">
            <failure message="(0 , useTheme) is not a function" type="TypeError">
TypeError: (0 , useTheme) is not a function
 ‚ùØ TestComponent src/application/providers/ThemeProvider.test.tsx:9:31
 ‚ùØ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ‚ùØ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ‚ùØ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ‚ùØ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ‚ùØ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ‚ùØ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ‚ùØ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ‚ùØ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ‚ùØ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/application/providers/ThemeProvider.test.tsx" name="ThemeProvider &gt; follows system theme when set to system" time="0.001618458">
            <failure message="(0 , useTheme) is not a function" type="TypeError">
TypeError: (0 , useTheme) is not a function
 ‚ùØ TestComponent src/application/providers/ThemeProvider.test.tsx:9:31
 ‚ùØ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ‚ùØ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ‚ùØ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ‚ùØ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ‚ùØ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ‚ùØ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ‚ùØ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ‚ùØ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ‚ùØ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44
            </failure>
        </testcase>
        <testcase classname="src/application/providers/ThemeProvider.test.tsx" name="ThemeProvider &gt; throws error when useTheme is used outside ThemeProvider" time="0.015330125">
            <failure message="expected [Function] to throw error including &apos;useTheme must be used within a ThemeP‚Ä¶&apos; but got &apos;(0 , useTheme) ‚Ä¶&apos;" type="AssertionError">
AssertionError: expected [Function] to throw error including &apos;useTheme must be used within a ThemeP‚Ä¶&apos; but got &apos;(0 , useTheme) ‚Ä¶&apos;

Expected: &quot;useTheme must be used within a ThemeProvider&quot;
Received: &quot;(0 , __vite_ssr_import_4__.useTheme) is not a function&quot;

 ‚ùØ src/application/providers/ThemeProvider.test.tsx:126:8
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/infrastructure/api/ApiClient.runtime.test.ts" timestamp="2025-04-06T16:55:22.649Z" hostname="MacBookPro" tests="18" failures="0" errors="0" skipped="0" time="0.006388375">
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; validateApiResponse &gt; should return Ok for valid data matching the guard" time="0.000385333">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; validateApiResponse &gt; should return Ok for valid array data matching the array guard" time="0.000143583">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; validateApiResponse &gt; should return Err for data not matching the guard (missing field)" time="0.000210667">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; validateApiResponse &gt; should return Err for data not matching the guard (wrong type)" time="0.000229708">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; validateApiResponse &gt; should return Err for array data not matching the array guard" time="0.000157459">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; validateApiResponse &gt; should return Err for non-object input when expecting object" time="0.003192292">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; validateApiResponse &gt; should return Err for non-array input when expecting array" time="0.000118917">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; validateApiResponse &gt; should include context in the error message" time="0.000255125">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; validateApiResponse &gt; should handle unserializable data in error message" time="0.000128709">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; isApiPatient &gt; should return true for valid patient object" time="0.000034667">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; isApiPatient &gt; should return false for invalid patient object (missing name)" time="0.000034542">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; isApiPatient &gt; should return false for invalid patient object (wrong id type)" time="0.000031916">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; isApiPatient &gt; should return false for null" time="0.000032667">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; isApiPatient &gt; should return false for non-object" time="0.000042958">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; isApiPatientArray &gt; should return true for valid patient array" time="0.000067041">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; isApiPatientArray &gt; should return false for invalid patient array" time="0.000037958">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; isApiPatientArray &gt; should return false for non-array" time="0.000050334">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.runtime.test.ts" name="ApiClient Runtime Validation &gt; isApiPatientArray &gt; should return true for empty array" time="0.0000965">
        </testcase>
    </testsuite>
    <testsuite name="src/infrastructure/api/ApiClient.test.ts" timestamp="2025-04-06T16:55:22.651Z" hostname="MacBookPro" tests="3" failures="0" errors="0" skipped="0" time="0.002271334">
        <testcase classname="src/infrastructure/api/ApiClient.test.ts" name="apiClient &gt; processes GET requests with mathematical precision" time="0.00093075">
            <system-out>
[Mock API] GET /patients
[Mock Test] Handling mock response for: /patients

            </system-out>
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.test.ts" name="apiClient &gt; processes POST requests with clinical precision" time="0.000440167">
            <system-out>
[Mock API] POST /auth/login { username: [32m&apos;neural-scientist&apos;[39m, password: [32m&apos;quantum-safe&apos;[39m }
[Mock Test] Handling mock response for: /auth/login

            </system-out>
        </testcase>
        <testcase classname="src/infrastructure/api/ApiClient.test.ts" name="apiClient &gt; supports neural authorization patterns" time="0.000147583">
        </testcase>
    </testsuite>
    <testsuite name="src/infrastructure/api/ApiGateway.test.ts" timestamp="2025-04-06T16:55:22.651Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.001753667">
        <testcase classname="src/infrastructure/api/ApiGateway.test.ts" name="apiClient &gt; processes data with mathematical precision" time="0.000209125">
        </testcase>
        <testcase classname="src/infrastructure/api/ApiGateway.test.ts" name="apiClient &gt; handles edge cases with clinical precision" time="0.00070475">
        </testcase>
    </testsuite>
    <testsuite name="src/infrastructure/api/EnhancedMockApiClient.test.ts" timestamp="2025-04-06T16:55:22.651Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.001746417">
        <testcase classname="src/infrastructure/api/EnhancedMockApiClient.test.ts" name="enhancedMockApiClient &gt; processes data with mathematical precision" time="0.000169166">
        </testcase>
        <testcase classname="src/infrastructure/api/EnhancedMockApiClient.test.ts" name="enhancedMockApiClient &gt; handles edge cases with clinical precision" time="0.00077025">
        </testcase>
    </testsuite>
    <testsuite name="src/infrastructure/api/IApiClient.test.ts" timestamp="2025-04-06T16:55:22.652Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.007148041">
        <testcase classname="src/infrastructure/api/IApiClient.test.ts" name="IApiClient &gt; processes data with mathematical precision" time="0.001602958">
            <system-err>
Promise returned by `expect(actual).resolves.toEqual(expected)` was not awaited. Vitest currently auto-awaits hanging assertions at the end of the test, but this will cause the test to fail in Vitest 3. Please remember to await the assertion.
    at /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/infrastructure/api/IApiClient.test.ts:32:18

            </system-err>
        </testcase>
        <testcase classname="src/infrastructure/api/IApiClient.test.ts" name="IApiClient &gt; handles edge cases with clinical precision" time="0.004729709">
            <system-err>
Promise returned by `expect(actual).rejects.toThrow(expected)` was not awaited. Vitest currently auto-awaits hanging assertions at the end of the test, but this will cause the test to fail in Vitest 3. Please remember to await the assertion.
    at /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/infrastructure/api/IApiClient.test.ts:56:63

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="src/infrastructure/api/MockApiClient.test.ts" timestamp="2025-04-06T16:55:22.652Z" hostname="MacBookPro" tests="3" failures="0" errors="0" skipped="0" time="0.003394292">
        <testcase classname="src/infrastructure/api/MockApiClient.test.ts" name="mockApiClient &gt; generates brain models with mathematical precision" time="0.001247125">
        </testcase>
        <testcase classname="src/infrastructure/api/MockApiClient.test.ts" name="mockApiClient &gt; handles default patient ID with clinical precision" time="0.000481792">
        </testcase>
        <testcase classname="src/infrastructure/api/MockApiClient.test.ts" name="mockApiClient &gt; returns consistent model structure with quantum-level type safety" time="0.000471708">
        </testcase>
    </testsuite>
    <testsuite name="src/infrastructure/api/XGBoostService.runtime.test.ts" timestamp="2025-04-06T16:55:22.652Z" hostname="MacBookPro" tests="10" failures="0" errors="0" skipped="0" time="0.003752125">
        <testcase classname="src/infrastructure/api/XGBoostService.runtime.test.ts" name="XGBoostService Runtime Validation &gt; isRiskPredictionRequest &gt; should return true for valid RiskPredictionRequest" time="0.00064">
        </testcase>
        <testcase classname="src/infrastructure/api/XGBoostService.runtime.test.ts" name="XGBoostService Runtime Validation &gt; isRiskPredictionRequest &gt; should return false for invalid RiskPredictionRequest (missing field)" time="0.000117084">
        </testcase>
        <testcase classname="src/infrastructure/api/XGBoostService.runtime.test.ts" name="XGBoostService Runtime Validation &gt; isRiskPredictionRequest &gt; should return false for null" time="0.000132583">
        </testcase>
        <testcase classname="src/infrastructure/api/XGBoostService.runtime.test.ts" name="XGBoostService Runtime Validation &gt; isRiskPredictionRequest &gt; should return false for non-object" time="0.000094667">
        </testcase>
        <testcase classname="src/infrastructure/api/XGBoostService.runtime.test.ts" name="XGBoostService Runtime Validation &gt; isRiskPredictionResponse &gt; should return true for valid RiskPredictionResponse" time="0.0000765">
        </testcase>
        <testcase classname="src/infrastructure/api/XGBoostService.runtime.test.ts" name="XGBoostService Runtime Validation &gt; isRiskPredictionResponse &gt; should return false for invalid RiskPredictionResponse (wrong type/enum)" time="0.0000595">
        </testcase>
        <testcase classname="src/infrastructure/api/XGBoostService.runtime.test.ts" name="XGBoostService Runtime Validation &gt; isRiskPredictionResponse &gt; should return false for null" time="0.00016875">
        </testcase>
        <testcase classname="src/infrastructure/api/XGBoostService.runtime.test.ts" name="XGBoostService Runtime Validation &gt; isRiskPredictionResponse &gt; should return false for non-object" time="0.00004825">
        </testcase>
        <testcase classname="src/infrastructure/api/XGBoostService.runtime.test.ts" name="XGBoostService Runtime Validation &gt; validateData &gt; should return Ok when data matches the guard" time="0.000320333">
        </testcase>
        <testcase classname="src/infrastructure/api/XGBoostService.runtime.test.ts" name="XGBoostService Runtime Validation &gt; validateData &gt; should return Err when data does not match the guard" time="0.000987167">
        </testcase>
    </testsuite>
    <testsuite name="src/infrastructure/api/XGBoostService.test.ts" timestamp="2025-04-06T16:55:22.653Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.001459125">
        <testcase classname="src/infrastructure/api/XGBoostService.test.ts" name="XGBoostService &gt; processes data with mathematical precision" time="0.000153083">
        </testcase>
        <testcase classname="src/infrastructure/api/XGBoostService.test.ts" name="XGBoostService &gt; handles edge cases with clinical precision" time="0.000597959">
        </testcase>
    </testsuite>
    <testsuite name="src/infrastructure/api/mockApi.test.ts" timestamp="2025-04-06T16:55:22.654Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.002485917">
        <testcase classname="src/infrastructure/api/mockApi.test.ts" name="mockApi &gt; processes data with mathematical precision" time="0.000493791">
        </testcase>
        <testcase classname="src/infrastructure/api/mockApi.test.ts" name="mockApi &gt; handles edge cases with clinical precision" time="0.001124459">
        </testcase>
    </testsuite>
    <testsuite name="src/infrastructure/config/initializeApp.test.ts" timestamp="2025-04-06T16:55:22.654Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="1" time="0">
        <testcase classname="src/infrastructure/config/initializeApp.test.ts" name="initializeApp &gt; should be tested properly" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/common/AdaptiveLOD.test.tsx" timestamp="2025-04-06T16:55:22.654Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.00152975">
        <testcase classname="src/presentation/common/AdaptiveLOD.test.tsx" name="AdaptiveLOD (Minimal) &gt; exists as a module" time="0.000572333">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/common/LoadingFallback.test.tsx" timestamp="2025-04-06T16:55:22.655Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/common/LoadingFallback.test.tsx" name="src/presentation/common/LoadingFallback.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined." type="TypeError">
TypeError: Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined.
 ‚ùØ Module.&lt;anonymous&gt; node_modules/its-fine/src/index.tsx:84:9
 ‚ùØ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:11:15
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/common/PerformanceMonitor.test.tsx" timestamp="2025-04-06T16:55:22.655Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.001428334">
        <testcase classname="src/presentation/common/PerformanceMonitor.test.tsx" name="PerformanceMonitor (Minimal) &gt; exists as a module" time="0.000609541">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/common/VisualizationErrorBoundary.test.tsx" timestamp="2025-04-06T16:55:22.655Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.056024292">
        <testcase classname="src/presentation/common/VisualizationErrorBoundary.test.tsx" name="VisualizationErrorBoundary &gt; renders with neural precision" time="0.001639583">
        </testcase>
        <testcase classname="src/presentation/common/VisualizationErrorBoundary.test.tsx" name="VisualizationErrorBoundary &gt; responds to user interaction with quantum precision" time="0.053521208">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/containers/minimal.minimal.test.tsx" timestamp="2025-04-06T16:55:22.656Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.015274792">
        <testcase classname="src/presentation/containers/minimal.minimal.test.tsx" name="Basic Test &gt; verifies React rendering works" time="0.013714042">
        </testcase>
        <testcase classname="src/presentation/containers/minimal.minimal.test.tsx" name="Basic Test &gt; verifies TextEncoder works properly" time="0.000757667">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/containers/minimal.test.tsx" timestamp="2025-04-06T16:55:22.656Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.001400792">
        <testcase classname="src/presentation/containers/minimal.test.tsx" name="Basic Test &gt; confirms test infrastructure is working" time="0.000529625">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/atoms/ActivityIndicator.test.tsx" timestamp="2025-04-06T16:55:22.656Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.024299916">
        <testcase classname="src/presentation/atoms/ActivityIndicator.test.tsx" name="ActivityIndicator &gt; renders the mock mesh when activity is low" time="0.011712333">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:18.646Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
            <system-err>
&lt;sphereGeometry /&gt; is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.
The tag &lt;sphereGeometry&gt; is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.
&lt;shaderMaterial /&gt; is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.
The tag &lt;shaderMaterial&gt; is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.

            </system-err>
        </testcase>
        <testcase classname="src/presentation/atoms/ActivityIndicator.test.tsx" name="ActivityIndicator &gt; does not render when activity is NONE" time="0.010572166">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:18.638Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/atoms/Button.test.tsx" timestamp="2025-04-06T16:55:22.656Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.013279416">
        <testcase classname="src/presentation/atoms/Button.test.tsx" name="Button &gt; renders with neural precision" time="0.001609417">
        </testcase>
        <testcase classname="src/presentation/atoms/Button.test.tsx" name="Button &gt; responds to user interaction with quantum precision" time="0.010842583">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/atoms/Card.test.tsx" timestamp="2025-04-06T16:55:22.656Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.012577833">
        <testcase classname="src/presentation/atoms/Card.test.tsx" name="Card &gt; renders with neural precision" time="0.001959875">
        </testcase>
        <testcase classname="src/presentation/atoms/Card.test.tsx" name="Card &gt; responds to user interaction with quantum precision" time="0.00985675">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/atoms/ConnectionLine.test.tsx" timestamp="2025-04-06T16:55:22.657Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/atoms/ConnectionLine.test.tsx" name="src/presentation/atoms/ConnectionLine.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ‚ùØ src/presentation/atoms/ConnectionLine.tsx:7:1
 ‚ùØ src/presentation/atoms/ConnectionLine.test.tsx:8:1

Caused by: Caused by: TypeError: Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined.
 ‚ùØ Module.&lt;anonymous&gt; node_modules/its-fine/src/index.tsx:84:9
 ‚ùØ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:11:15
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/atoms/DocumentTitle.test.tsx" timestamp="2025-04-06T16:55:22.657Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.010760833">
        <testcase classname="src/presentation/atoms/DocumentTitle.test.tsx" name="DocumentTitle &gt; renders with neural precision" time="0.001406166">
        </testcase>
        <testcase classname="src/presentation/atoms/DocumentTitle.test.tsx" name="DocumentTitle &gt; responds to user interaction with quantum precision" time="0.008379333">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/atoms/NeuralCorrelationBadge.test.tsx" timestamp="2025-04-06T16:55:22.657Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/atoms/NeuralCorrelationBadge.test.tsx" name="src/presentation/atoms/NeuralCorrelationBadge.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@/application/utils/cn&quot; from &quot;src/presentation/atoms/Badge.tsx&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@/application/utils/cn&quot; from &quot;src/presentation/atoms/Badge.tsx&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/Badge.tsx:3:19
  1  |  import { jsxDEV } from &quot;react/jsx-dev-runtime&quot;;
  2  |  import { cva } from &quot;class-variance-authority&quot;;
  3  |  import { cn } from &quot;@/application/utils/cn&quot;;
     |                      ^
  4  |  const badgeVariants = cva(
  5  |    &quot;inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2&quot;,
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/Badge.tsx&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/Badge.tsx&apos;, line: 3, column: 19 }, frame: &apos;1  |  import { jsxDEV } from &quot;react/jsx-dev-runtime&quot;;\n2  |  import { cva } from &quot;class-variance-authority&quot;;\n3  |  import { cn } from &quot;@/application/utils/cn&quot;;\n   |                      ^\n4  |  const badgeVariants = cva(\n5  |    &quot;inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2&quot;,&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/atoms/RegionMesh.test.tsx" timestamp="2025-04-06T16:55:22.658Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/atoms/RegionMesh.test.tsx" name="src/presentation/atoms/RegionMesh.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined." type="TypeError">
TypeError: Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined.
 ‚ùØ Module.&lt;anonymous&gt; node_modules/its-fine/src/index.tsx:84:9
 ‚ùØ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:11:15
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/atoms/RegionSelectionIndicator.test.tsx" timestamp="2025-04-06T16:55:22.658Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.02482075">
        <testcase classname="src/presentation/atoms/RegionSelectionIndicator.test.tsx" name="RegionSelectionIndicator &gt; renders the mock mesh when selected" time="0.004047583">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:28.845Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
            <system-err>
&lt;sphereGeometry /&gt; is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.
&lt;shaderMaterial /&gt; is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.

            </system-err>
        </testcase>
        <testcase classname="src/presentation/atoms/RegionSelectionIndicator.test.tsx" name="RegionSelectionIndicator &gt; renders the mock mesh when not selected" time="0.018684917">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:28.836Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
            <system-err>
&lt;sphereGeometry /&gt; is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.
The tag &lt;sphereGeometry&gt; is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.
&lt;shaderMaterial /&gt; is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.
The tag &lt;shaderMaterial&gt; is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/atoms/index.test.ts" timestamp="2025-04-06T16:55:22.659Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/atoms/index.test.ts" name="src/presentation/atoms/index.test.ts" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@/application/utils/cn&quot; from &quot;src/presentation/atoms/Avatar.tsx&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@/application/utils/cn&quot; from &quot;src/presentation/atoms/Avatar.tsx&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/Avatar.tsx:2:19
  1  |  import { jsxDEV } from &quot;react/jsx-dev-runtime&quot;;
  2  |  import React from &quot;react&quot;;
  3  |  import { cn } from &quot;@/application/utils/cn&quot;;
     |                      ^
  4  |  const Avatar = ({
  5  |    src,
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/Avatar.tsx&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/Avatar.tsx&apos;, line: 2, column: 19 }, frame: &apos;1  |  import { jsxDEV } from &quot;react/jsx-dev-runtime&quot;;\n2  |  import React from &quot;react&quot;;\n3  |  import { cn } from &quot;@/application/utils/cn&quot;;\n   |                      ^\n4  |  const Avatar = ({\n5  |    src,&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/pages/BrainModelViewer.test.tsx" timestamp="2025-04-06T16:55:22.659Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.036519291">
        <testcase classname="src/presentation/pages/BrainModelViewer.test.tsx" name="BrainModelViewer &gt; renders with neural precision" time="0.006650709">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:22.401Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/pages/BrainModelViewer.test.tsx" name="BrainModelViewer &gt; responds to user interaction with quantum precision" time="0.027674667">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:22.391Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/pages/BrainVisualizationPage.test.tsx" timestamp="2025-04-06T16:55:22.660Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/pages/BrainVisualizationPage.test.tsx" name="src/presentation/pages/BrainVisualizationPage.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@/pages/BrainVisualizationPage&quot; from &quot;src/presentation/pages/BrainVisualizationPage.test.tsx&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@/pages/BrainVisualizationPage&quot; from &quot;src/presentation/pages/BrainVisualizationPage.test.tsx&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/pages/BrainVisualizationPage.test.tsx:10:0
  10 |  const __vi_import_1__ = await import(&quot;@test/test-utils.unified&quot;);
  11 |  const __vi_import_2__ = await import(&quot;@testing-library/user-event&quot;);
  12 |  const __vi_import_3__ = await import(&quot;@/pages/BrainVisualizationPage&quot;);
     |                                       ^
  13 |  
  14 |  import { describe, it, expect, vi } from &quot;vitest&quot;;
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/pages/BrainVisualizationPage.test.tsx&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/pages/BrainVisualizationPage.test.tsx&apos;, line: 10, column: +0 }, frame: &apos;10 |  const __vi_import_1__ = await import(&quot;@test/test-utils.unified&quot;);\n11 |  const __vi_import_2__ = await import(&quot;@testing-library/user-event&quot;);\n12 |  const __vi_import_3__ = await import(&quot;@/pages/BrainVisualizationPage&quot;);\n   |                                       ^\n13 |  \n14 |  import { describe, it, expect, vi } from &quot;vitest&quot;;&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/pages/Dashboard.test.tsx" timestamp="2025-04-06T16:55:22.660Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.054344917">
        <testcase classname="src/presentation/pages/Dashboard.test.tsx" name="Dashboard &gt; renders with neural precision" time="0.007753084">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:28.445Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/pages/Dashboard.test.tsx" name="Dashboard &gt; responds to user interaction with quantum precision" time="0.044291333">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:28.434Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/pages/DigitalTwinDemo.test.tsx" timestamp="2025-04-06T16:55:22.660Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.030024084">
        <testcase classname="src/presentation/pages/DigitalTwinDemo.test.tsx" name="DigitalTwinDemo &gt; renders the visualization canvas" time="0.008970292">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:11.915Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/pages/DigitalTwinDemo.test.tsx" name="DigitalTwinDemo &gt; responds to user interaction with quantum precision" time="0.019177667">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:11.909Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/pages/DigitalTwinPage.test.tsx" timestamp="2025-04-06T16:55:22.661Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/pages/DigitalTwinPage.test.tsx" name="src/presentation/pages/DigitalTwinPage.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@/components/ui/tabs&quot; from &quot;src/presentation/pages/DigitalTwinPage.tsx&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@/components/ui/tabs&quot; from &quot;src/presentation/pages/DigitalTwinPage.tsx&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/pages/DigitalTwinPage.tsx:22:57
  5  |  import PatientHeader from &quot;@presentation/molecules/PatientHeader&quot;;
  6  |  import ClinicalTimelinePanel from &quot;@presentation/organisms/ClinicalTimelinePanel&quot;;
  7  |  import { Tabs, TabsContent, TabsList, TabsTrigger } from &quot;@/components/ui/tabs&quot;;
     |                                                            ^
  8  |  import { Button } from &quot;@/components/ui/button&quot;;
  9  |  import {
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/pages/DigitalTwinPage.tsx&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/pages/DigitalTwinPage.tsx&apos;, line: 22, column: 57 }, frame: &apos;5  |  import PatientHeader from &quot;@presentation/molecules/PatientHeader&quot;;\n6  |  import ClinicalTimelinePanel from &quot;@presentation/organisms/ClinicalTimelinePanel&quot;;\n7  |  import { Tabs, TabsContent, TabsList, TabsTrigger } from &quot;@/components/ui/tabs&quot;;\n   |                                                            ^\n8  |  import { Button } from &quot;@/components/ui/button&quot;;\n9  |  import {&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/pages/Login.test.tsx" timestamp="2025-04-06T16:55:22.661Z" hostname="MacBookPro" tests="3" failures="0" errors="0" skipped="0" time="0.135503292">
        <testcase classname="src/presentation/pages/Login.test.tsx" name="Login &gt; renders with neural precision" time="0.025966417">
        </testcase>
        <testcase classname="src/presentation/pages/Login.test.tsx" name="Login &gt; responds to user interaction with quantum precision" time="0.008626792">
        </testcase>
        <testcase classname="src/presentation/pages/Login.test.tsx" name="Login &gt; handles form submission" time="0.100115959">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/pages/NotFound.test.tsx" timestamp="2025-04-06T16:55:22.661Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/pages/NotFound.test.tsx" name="src/presentation/pages/NotFound.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@/pages/NotFound&quot; from &quot;src/presentation/pages/NotFound.test.tsx&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@/pages/NotFound&quot; from &quot;src/presentation/pages/NotFound.test.tsx&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/pages/NotFound.test.tsx:10:21
  4  |  import { MemoryRouter } from &quot;react-router-dom&quot;;
  5  |  import userEvent from &quot;@testing-library/user-event&quot;;
  6  |  import NotFound from &quot;@/pages/NotFound&quot;;
     |                        ^
  7  |  const mockProps = {};
  8  |  describe(&quot;NotFound&quot;, () =&gt; {
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/pages/NotFound.test.tsx&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/pages/NotFound.test.tsx&apos;, line: 10, column: 21 }, frame: &apos;4  |  import { MemoryRouter } from &quot;react-router-dom&quot;;\n5  |  import userEvent from &quot;@testing-library/user-event&quot;;\n6  |  import NotFound from &quot;@/pages/NotFound&quot;;\n   |                        ^\n7  |  const mockProps = {};\n8  |  describe(&quot;NotFound&quot;, () =&gt; {&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/pages/PatientProfile.test.tsx" timestamp="2025-04-06T16:55:22.662Z" hostname="MacBookPro" tests="2" failures="2" errors="0" skipped="0" time="0.03716075">
        <testcase classname="src/presentation/pages/PatientProfile.test.tsx" name="PatientProfile &gt; renders with neural precision" time="0.005802">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:26.752Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
            <failure message="Cannot read properties of undefined (reading &apos;log&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;log&apos;)
 ‚ùØ src/presentation/pages/PatientProfile.tsx:18:23
 ‚ùØ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23949:20
 ‚ùØ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ‚ùØ commitHookEffectListMount node_modules/react-dom/cjs/react-dom-client.development.js:11905:29
 ‚ùØ commitHookPassiveMountEffects node_modules/react-dom/cjs/react-dom-client.development.js:12028:11
 ‚ùØ commitPassiveMountOnFiber node_modules/react-dom/cjs/react-dom-client.development.js:13841:13
 ‚ùØ recursivelyTraversePassiveMountEffects node_modules/react-dom/cjs/react-dom-client.development.js:13815:11
 ‚ùØ commitPassiveMountOnFiber node_modules/react-dom/cjs/react-dom-client.development.js:13957:11
 ‚ùØ recursivelyTraversePassiveMountEffects node_modules/react-dom/cjs/react-dom-client.development.js:13815:11
 ‚ùØ commitPassiveMountOnFiber node_modules/react-dom/cjs/react-dom-client.development.js:13834:11
            </failure>
        </testcase>
        <testcase classname="src/presentation/pages/PatientProfile.test.tsx" name="PatientProfile &gt; responds to user interaction with quantum precision" time="0.029249417">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:26.740Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
            <failure message="Cannot read properties of undefined (reading &apos;log&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;log&apos;)
 ‚ùØ src/presentation/pages/PatientProfile.tsx:18:23
 ‚ùØ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23949:20
 ‚ùØ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ‚ùØ commitHookEffectListMount node_modules/react-dom/cjs/react-dom-client.development.js:11905:29
 ‚ùØ commitHookPassiveMountEffects node_modules/react-dom/cjs/react-dom-client.development.js:12028:11
 ‚ùØ commitPassiveMountOnFiber node_modules/react-dom/cjs/react-dom-client.development.js:13841:13
 ‚ùØ recursivelyTraversePassiveMountEffects node_modules/react-dom/cjs/react-dom-client.development.js:13815:11
 ‚ùØ commitPassiveMountOnFiber node_modules/react-dom/cjs/react-dom-client.development.js:13957:11
 ‚ùØ recursivelyTraversePassiveMountEffects node_modules/react-dom/cjs/react-dom-client.development.js:13815:11
 ‚ùØ commitPassiveMountOnFiber node_modules/react-dom/cjs/react-dom-client.development.js:13834:11
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/pages/PatientsList.test.tsx" timestamp="2025-04-06T16:55:22.663Z" hostname="MacBookPro" tests="4" failures="0" errors="0" skipped="0" time="0.192344583">
        <testcase classname="src/presentation/pages/PatientsList.test.tsx" name="PatientsList Page &gt; renders patient list correctly" time="0.146451084">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:10.239Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/pages/PatientsList.test.tsx" name="PatientsList Page &gt; navigates to patient profile on button click" time="0.031756334">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:10.327Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/pages/PatientsList.test.tsx" name="PatientsList Page &gt; displays loading state" time="0.00401225">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:10.320Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/pages/PatientsList.test.tsx" name="PatientsList Page &gt; displays error state" time="0.007732459">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:10.313Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/pages/PredictionAnalytics.test.tsx" timestamp="2025-04-06T16:55:22.663Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/pages/PredictionAnalytics.test.tsx" name="src/presentation/pages/PredictionAnalytics.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@/application/utils/cn&quot; from &quot;src/presentation/atoms/Avatar.tsx&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@/application/utils/cn&quot; from &quot;src/presentation/atoms/Avatar.tsx&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/Avatar.tsx:2:19
  1  |  import { jsxDEV } from &quot;react/jsx-dev-runtime&quot;;
  2  |  import React from &quot;react&quot;;
  3  |  import { cn } from &quot;@/application/utils/cn&quot;;
     |                      ^
  4  |  const Avatar = ({
  5  |    src,
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/Avatar.tsx&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/Avatar.tsx&apos;, line: 2, column: 19 }, frame: &apos;1  |  import { jsxDEV } from &quot;react/jsx-dev-runtime&quot;;\n2  |  import React from &quot;react&quot;;\n3  |  import { cn } from &quot;@/application/utils/cn&quot;;\n   |                      ^\n4  |  const Avatar = ({\n5  |    src,&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/pages/Settings.test.tsx" timestamp="2025-04-06T16:55:22.664Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.026207875">
        <testcase classname="src/presentation/pages/Settings.test.tsx" name="Settings &gt; renders with neural precision" time="0.009690791">
        </testcase>
        <testcase classname="src/presentation/pages/Settings.test.tsx" name="Settings &gt; responds to user interaction with quantum precision" time="0.015730458">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/BiometricMonitorPanel.test.tsx" timestamp="2025-04-06T16:55:22.664Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/organisms/BiometricMonitorPanel.test.tsx" name="src/presentation/organisms/BiometricMonitorPanel.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@/components/ui/tabs&quot; from &quot;src/presentation/organisms/BiometricMonitorPanel.tsx&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@/components/ui/tabs&quot; from &quot;src/presentation/organisms/BiometricMonitorPanel.tsx&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/organisms/BiometricMonitorPanel.tsx:15:57
  2  |  import { useState, useCallback, useMemo } from &quot;react&quot;;
  3  |  import { motion } from &quot;framer-motion&quot;;
  4  |  import { Tabs, TabsContent, TabsList, TabsTrigger } from &quot;@/components/ui/tabs&quot;;
     |                                                            ^
  5  |  import { Button } from &quot;@/components/ui/button&quot;;
  6  |  import {
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/organisms/BiometricMonitorPanel.tsx&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/organisms/BiometricMonitorPanel.tsx&apos;, line: 15, column: 57 }, frame: &apos;2  |  import { useState, useCallback, useMemo } from &quot;react&quot;;\n3  |  import { motion } from &quot;framer-motion&quot;;\n4  |  import { Tabs, TabsContent, TabsList, TabsTrigger } from &quot;@/components/ui/tabs&quot;;\n   |                                                            ^\n5  |  import { Button } from &quot;@/components/ui/button&quot;;\n6  |  import {&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/BrainModelContainer.minimal.spec.tsx" timestamp="2025-04-06T16:55:22.664Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.021717584">
        <testcase classname="src/presentation/organisms/BrainModelContainer.minimal.spec.tsx" name="BrainModelContainer Minimal Test &gt; renders the mocked container with neural precision" time="0.019577708">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:23.208Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
            <system-err>
React does not recognize the `patientId` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `patientid` instead. If you accidentally passed it from a parent component, remove it from the DOM element.

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/BrainModelContainer.minimal.test.tsx" timestamp="2025-04-06T16:55:22.664Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.025029333">
        <testcase classname="src/presentation/organisms/BrainModelContainer.minimal.test.tsx" name="BrainModelContainer &gt; renders with neural precision" time="0.005008041">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:31.764Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/organisms/BrainModelContainer.minimal.test.tsx" name="BrainModelContainer &gt; responds to user interaction with quantum precision" time="0.017724292">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:31.752Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/BrainModelContainer.test.tsx" timestamp="2025-04-06T16:55:22.665Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.02518075">
        <testcase classname="src/presentation/organisms/BrainModelContainer.test.tsx" name="BrainModelContainer &gt; renders the container and mock children without crashing" time="0.022843084">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:17.399Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/BrainModelViewer.test.tsx" timestamp="2025-04-06T16:55:22.665Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/organisms/BrainModelViewer.test.tsx" name="src/presentation/organisms/BrainModelViewer.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined." type="TypeError">
TypeError: Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined.
 ‚ùØ Module.&lt;anonymous&gt; node_modules/its-fine/src/index.tsx:84:9
 ‚ùØ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:11:15
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/BrainVisualization.test.tsx" timestamp="2025-04-06T16:55:22.665Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/organisms/BrainVisualization.test.tsx" name="src/presentation/organisms/BrainVisualization.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined." type="TypeError">
TypeError: Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined.
 ‚ùØ Module.&lt;anonymous&gt; node_modules/its-fine/src/index.tsx:84:9
 ‚ùØ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:11:15
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/BrainVisualizationContainer.test.tsx" timestamp="2025-04-06T16:55:22.666Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/organisms/BrainVisualizationContainer.test.tsx" name="src/presentation/organisms/BrainVisualizationContainer.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined." type="TypeError">
TypeError: Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined.
 ‚ùØ Module.&lt;anonymous&gt; node_modules/its-fine/src/index.tsx:84:9
 ‚ùØ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:11:15
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/ClinicalMetricsPanel.test.tsx" timestamp="2025-04-06T16:55:22.666Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/organisms/ClinicalMetricsPanel.test.tsx" name="src/presentation/organisms/ClinicalMetricsPanel.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@/components/ui/tabs&quot; from &quot;src/presentation/organisms/ClinicalMetricsPanel.tsx&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@/components/ui/tabs&quot; from &quot;src/presentation/organisms/ClinicalMetricsPanel.tsx&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/organisms/ClinicalMetricsPanel.tsx:15:57
  2  |  import { useState, useCallback, useMemo } from &quot;react&quot;;
  3  |  import { motion } from &quot;framer-motion&quot;;
  4  |  import { Tabs, TabsContent, TabsList, TabsTrigger } from &quot;@/components/ui/tabs&quot;;
     |                                                            ^
  5  |  import { Button } from &quot;@/components/ui/button&quot;;
  6  |  import {
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/organisms/ClinicalMetricsPanel.tsx&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/organisms/ClinicalMetricsPanel.tsx&apos;, line: 15, column: 57 }, frame: &apos;2  |  import { useState, useCallback, useMemo } from &quot;react&quot;;\n3  |  import { motion } from &quot;framer-motion&quot;;\n4  |  import { Tabs, TabsContent, TabsList, TabsTrigger } from &quot;@/components/ui/tabs&quot;;\n   |                                                            ^\n5  |  import { Button } from &quot;@/components/ui/button&quot;;\n6  |  import {&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/ClinicalTimelinePanel.test.tsx" timestamp="2025-04-06T16:55:22.666Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/organisms/ClinicalTimelinePanel.test.tsx" name="src/presentation/organisms/ClinicalTimelinePanel.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@/components/ui/button&quot; from &quot;src/presentation/organisms/ClinicalTimelinePanel.tsx&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@/components/ui/button&quot; from &quot;src/presentation/organisms/ClinicalTimelinePanel.tsx&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/organisms/ClinicalTimelinePanel.tsx:14:23
  1  |  import { jsxDEV } from &quot;react/jsx-dev-runtime&quot;;
  2  |  import { useState, useCallback, useMemo } from &quot;react&quot;;
  3  |  import { Button } from &quot;@/components/ui/button&quot;;
     |                          ^
  4  |  import { Badge } from &quot;@presentation/atoms/Badge&quot;;
  5  |  import Card from &quot;@presentation/atoms/Card&quot;;
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/organisms/ClinicalTimelinePanel.tsx&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/organisms/ClinicalTimelinePanel.tsx&apos;, line: 14, column: 23 }, frame: &apos;1  |  import { jsxDEV } from &quot;react/jsx-dev-runtime&quot;;\n2  |  import { useState, useCallback, useMemo } from &quot;react&quot;;\n3  |  import { Button } from &quot;@/components/ui/button&quot;;\n   |                          ^\n4  |  import { Badge } from &quot;@presentation/atoms/Badge&quot;;\n5  |  import Card from &quot;@presentation/atoms/Card&quot;;&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/DigitalTwinDashboard.test.tsx" timestamp="2025-04-06T16:55:22.667Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/organisms/DigitalTwinDashboard.test.tsx" name="src/presentation/organisms/DigitalTwinDashboard.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined." type="TypeError">
TypeError: Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined.
 ‚ùØ Module.&lt;anonymous&gt; node_modules/its-fine/src/index.tsx:84:9
 ‚ùØ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:11:15
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/NeuralControlPanel.test.tsx" timestamp="2025-04-06T16:55:22.667Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/organisms/NeuralControlPanel.test.tsx" name="src/presentation/organisms/NeuralControlPanel.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@/components/ui/tabs&quot; from &quot;src/presentation/organisms/NeuralControlPanel.tsx&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@/components/ui/tabs&quot; from &quot;src/presentation/organisms/NeuralControlPanel.tsx&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/organisms/NeuralControlPanel.tsx:15:57
  2  |  import { useState, useCallback, useMemo } from &quot;react&quot;;
  3  |  import { motion } from &quot;framer-motion&quot;;
  4  |  import { Tabs, TabsContent, TabsList, TabsTrigger } from &quot;@/components/ui/tabs&quot;;
     |                                                            ^
  5  |  import { Button } from &quot;@/components/ui/button&quot;;
  6  |  import {
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/organisms/NeuralControlPanel.tsx&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/organisms/NeuralControlPanel.tsx&apos;, line: 15, column: 57 }, frame: &apos;2  |  import { useState, useCallback, useMemo } from &quot;react&quot;;\n3  |  import { motion } from &quot;framer-motion&quot;;\n4  |  import { Tabs, TabsContent, TabsList, TabsTrigger } from &quot;@/components/ui/tabs&quot;;\n   |                                                            ^\n5  |  import { Button } from &quot;@/components/ui/button&quot;;\n6  |  import {&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/RiskAssessmentPanel.test.tsx" timestamp="2025-04-06T16:55:22.667Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.046147375">
        <testcase classname="src/presentation/organisms/RiskAssessmentPanel.test.tsx" name="RiskAssessmentPanel &gt; renders with neural precision" time="0.006364417">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:14.371Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/organisms/RiskAssessmentPanel.test.tsx" name="RiskAssessmentPanel &gt; responds to user interaction with quantum precision" time="0.037639">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:14.363Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/TreatmentResponsePredictor.test.tsx" timestamp="2025-04-06T16:55:22.668Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.035157584">
        <testcase classname="src/presentation/organisms/TreatmentResponsePredictor.test.tsx" name="TreatmentResponsePredictor &gt; renders with neural precision" time="0.005375041">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:24.059Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/organisms/TreatmentResponsePredictor.test.tsx" name="TreatmentResponsePredictor &gt; responds to user interaction with quantum precision" time="0.0276455">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:24.052Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useBlockingTransition.test.ts" timestamp="2025-04-06T16:55:22.668Z" hostname="MacBookPro" tests="12" failures="0" errors="0" skipped="0" time="0.028489667">
        <testcase classname="src/application/hooks/useBlockingTransition.test.ts" name="useBlockingTransition &gt; should initialize with the provided initial state and isPending as false" time="0.008281042">
        </testcase>
        <testcase classname="src/application/hooks/useBlockingTransition.test.ts" name="useBlockingTransition &gt; should update state correctly using the transition setter" time="0.001629542">
        </testcase>
        <testcase classname="src/application/hooks/useBlockingTransition.test.ts" name="useBlockingTransition &gt; should handle functional updates in the transition setter" time="0.0028835">
        </testcase>
        <testcase classname="src/application/hooks/useBlockingTransition.test.ts" name="useBlockingTransition &gt; should update state immediately using the immediate setter" time="0.002092292">
        </testcase>
        <testcase classname="src/application/hooks/useBlockingTransition.test.ts" name="useFilteredListTransition &gt; should initialize with the provided initial items" time="0.001756875">
        </testcase>
        <testcase classname="src/application/hooks/useBlockingTransition.test.ts" name="useFilteredListTransition &gt; should update all items and filtered items when updateItems is called" time="0.003326625">
        </testcase>
        <testcase classname="src/application/hooks/useBlockingTransition.test.ts" name="useFilteredListTransition &gt; should filter items correctly when filterItems is called" time="0.001069667">
        </testcase>
        <testcase classname="src/application/hooks/useBlockingTransition.test.ts" name="useFilteredListTransition &gt; should reset filters when resetFilters is called" time="0.001011709">
        </testcase>
        <testcase classname="src/application/hooks/useBlockingTransition.test.ts" name="useBatchedUpdates &gt; should initialize with the provided initial state" time="0.001469709">
        </testcase>
        <testcase classname="src/application/hooks/useBlockingTransition.test.ts" name="useBatchedUpdates &gt; should queue updates without modifying state" time="0.000768125">
        </testcase>
        <testcase classname="src/application/hooks/useBlockingTransition.test.ts" name="useBatchedUpdates &gt; should apply all queued updates when applyUpdates is called" time="0.00224175">
        </testcase>
        <testcase classname="src/application/hooks/useBlockingTransition.test.ts" name="useBatchedUpdates &gt; should apply immediate updates bypassing the queue" time="0.000853792">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useBrainModel.runtime.test.ts" timestamp="2025-04-06T16:55:22.669Z" hostname="MacBookPro" tests="8" failures="0" errors="0" skipped="0" time="0.004775375">
        <testcase classname="src/application/hooks/useBrainModel.runtime.test.ts" name="useBrainModel Runtime Validation &gt; validateBrainModelData &gt; should return Ok for a valid BrainModel object" time="0.000460042">
        </testcase>
        <testcase classname="src/application/hooks/useBrainModel.runtime.test.ts" name="useBrainModel Runtime Validation &gt; validateBrainModelData &gt; should return Err for non-object input" time="0.002034583">
        </testcase>
        <testcase classname="src/application/hooks/useBrainModel.runtime.test.ts" name="useBrainModel Runtime Validation &gt; validateBrainModelData &gt; should return Err for null input" time="0.00020675">
        </testcase>
        <testcase classname="src/application/hooks/useBrainModel.runtime.test.ts" name="useBrainModel Runtime Validation &gt; validateBrainModelData &gt; should return Err for an empty object" time="0.000135334">
        </testcase>
        <testcase classname="src/application/hooks/useBrainModel.runtime.test.ts" name="useBrainModel Runtime Validation &gt; validateBrainModelData &gt; should return Err for data missing required fields (e.g., id)" time="0.000306083">
        </testcase>
        <testcase classname="src/application/hooks/useBrainModel.runtime.test.ts" name="useBrainModel Runtime Validation &gt; validateBrainModelData &gt; should return Err for data missing required fields (e.g., regions)" time="0.000132833">
        </testcase>
        <testcase classname="src/application/hooks/useBrainModel.runtime.test.ts" name="useBrainModel Runtime Validation &gt; validateBrainModelData &gt; should return Err for data with incorrect field types (e.g., regions is not an array)" time="0.000242708">
        </testcase>
        <testcase classname="src/application/hooks/useBrainModel.runtime.test.ts" name="useBrainModel Runtime Validation &gt; validateBrainModelData &gt; should return Err for data with invalid nested BrainRegion structure" time="0.000162333">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useBrainModel.test.tsx" timestamp="2025-04-06T16:55:22.669Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.012544375">
        <testcase classname="src/application/hooks/useBrainModel.test.tsx" name="useBrainModel &gt; returns cached brain model data if available" time="0.011616709">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useBrainVisualization.runtime.test.ts" timestamp="2025-04-06T16:55:22.669Z" hostname="MacBookPro" tests="19" failures="0" errors="0" skipped="0" time="0.005881333">
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; validatePartialBrainViewState &gt; should return Ok for a valid partial BrainViewState object" time="0.000080083">
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; validatePartialBrainViewState &gt; should return Ok for an empty object (all fields optional)" time="0.000112">
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; validatePartialBrainViewState &gt; should return Ok for an object with only some valid fields" time="0.000311959">
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; validatePartialBrainViewState &gt; should return Err for non-object input" time="0.000128792">
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; validatePartialBrainViewState &gt; should return Err for null input" time="0.00026425">
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; validatePartialBrainViewState &gt; should return Err for invalid rotationX type" time="0.0001155">
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; validatePartialBrainViewState &gt; should return Err for invalid zoom value (zero)" time="0.001240375">
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; validatePartialBrainViewState &gt; should return Err for invalid highlightedRegions type (not array)" time="0.000109666">
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; validatePartialBrainViewState &gt; should return Err for invalid highlightedRegions type (array of numbers)" time="0.000174542">
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; validatePartialBrainViewState &gt; should return Err for invalid visiblePathways type" time="0.000146667">
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; validatePartialBrainViewState &gt; should return Err for invalid renderMode value" time="0.000142458">
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; validatePartialBrainViewState &gt; should return Err for invalid transparencyLevel (too high)" time="0.000328583">
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; validatePartialBrainViewState &gt; should return Err for invalid focusPoint (not array or null)" time="0.000150709">
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; validatePartialBrainViewState &gt; should return Err for invalid focusPoint (wrong array length)" time="0.000122042">
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; validatePartialBrainViewState &gt; should return Err for invalid focusPoint (wrong array element type)" time="0.000254167">
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; validatePartialBrainViewState &gt; should return Ok for focusPoint being null" time="0.000070917">
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; validatePartialBrainViewState &gt; should return Ok for focusPoint being a valid array" time="0.000079959">
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; isValidRenderMode &gt; should return true for valid RenderMode values" time="0.000131208">
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.runtime.test.ts" name="useBrainVisualization Runtime Validation &gt; isValidRenderMode &gt; should return false for invalid RenderMode values" time="0.000770125">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useBrainVisualization.test.ts" timestamp="2025-04-06T16:55:22.671Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.065271959">
        <testcase classname="src/application/hooks/useBrainVisualization.test.ts" name="useBrainVisualization Hook &gt; renders without crashing" time="0.064092084">
            <system-out>
[TEST] beforeEach - clearing mocks

[TEST] Starting basic render test
[TEST] About to render hook
[DEBUG] useBrainVisualization hook starting with options: {
  patientId: [32m&apos;test-patient&apos;[39m,
  disabled: [33mfalse[39m,
  autoRotate: [33mfalse[39m,
  highlightActiveRegions: [33mfalse[39m
}
[DEBUG] Fetching brain model for: test-patient
[MOCK] Getting brain model for: test-patient
[TEST] Current state: { isLoading: [33mtrue[39m, hasData: [33mfalse[39m, data: [90mundefined[39m }
[DEBUG] Received brain model: {
  id: [32m&apos;test-brain-model&apos;[39m,
  patientId: [32m&apos;test-patient&apos;[39m,
  regions: [
    {
      id: [32m&apos;test-region&apos;[39m,
      name: [32m&apos;Test Region&apos;[39m,
      position: [36m[Object][39m,
      color: [32m&apos;#ff0000&apos;[39m,
      connections: [36m[Array][39m,
      activityLevel: [33m0.5[39m,
      isActive: [33mtrue[39m,
      hemisphereLocation: [32m&apos;left&apos;[39m,
      dataConfidence: [33m0.8[39m,
      volumeMl: [33m100[39m,
      riskFactor: [33m0.2[39m,
      clinicalSignificance: [32m&apos;normal&apos;[39m,
      tissueType: [32m&apos;gray&apos;[39m
    }
  ],
  connections: [
    {
      id: [32m&apos;test-connection&apos;[39m,
      sourceId: [32m&apos;test-region&apos;[39m,
      targetId: [32m&apos;other-region&apos;[39m,
      strength: [33m0.7[39m,
      type: [32m&apos;structural&apos;[39m,
      directionality: [32m&apos;bidirectional&apos;[39m,
      activityLevel: [33m0.6[39m,
      pathwayLength: [33m10[39m,
      dataConfidence: [33m0.8[39m
    }
  ],
  scan: {
    id: [32m&apos;test-scan&apos;[39m,
    patientId: [32m&apos;test-patient&apos;[39m,
    scanDate: [32m&apos;2025-04-06T16:54:10.056Z&apos;[39m,
    scanType: [32m&apos;fMRI&apos;[39m,
    resolution: [32m&apos;2mm&apos;[39m,
    scannerModel: [32m&apos;Test Scanner&apos;[39m,
    contrastAgent: [33mfalse[39m,
    notes: [32m&apos;Test scan&apos;[39m,
    technician: [32m&apos;Test Tech&apos;[39m,
    processingMethod: [32m&apos;standard&apos;[39m,
    dataQualityScore: [33m0.9[39m
  },
  version: [32m&apos;1.0.0&apos;[39m,
  timestamp: [32m&apos;2025-04-06T16:54:10.057Z&apos;[39m,
  processingLevel: [32m&apos;analyzed&apos;[39m,
  lastUpdated: [32m&apos;2025-04-06T16:54:10.057Z&apos;[39m
}

[DEBUG] useBrainVisualization hook starting with options: {
  patientId: [32m&apos;test-patient&apos;[39m,
  disabled: [33mfalse[39m,
  autoRotate: [33mfalse[39m,
  highlightActiveRegions: [33mfalse[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useBrainVisualization.test.tsx" timestamp="2025-04-06T16:55:22.671Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="2" time="0">
        <testcase classname="src/application/hooks/useBrainVisualization.test.tsx" name="useBrainVisualization &gt; processes data with mathematical precision" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/application/hooks/useBrainVisualization.test.tsx" name="useBrainVisualization &gt; handles edge cases with clinical precision" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useClinicalContext.runtime.test.ts" timestamp="2025-04-06T16:55:22.671Z" hostname="MacBookPro" tests="19" failures="0" errors="0" skipped="0" time="0.007317916">
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateRiskAssessment &gt; should return Ok for valid RiskAssessment" time="0.000404875">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateRiskAssessment &gt; should return Err for invalid RiskAssessment (missing fields)" time="0.000195375">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateRiskAssessment &gt; should return Err for non-object input" time="0.000178334">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateTreatmentResponsePredictionArray &gt; should return Ok for a valid array of TreatmentResponsePrediction" time="0.000131208">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateTreatmentResponsePredictionArray &gt; should return Ok for an empty array" time="0.000169042">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateTreatmentResponsePredictionArray &gt; should return Err for non-array input" time="0.000169125">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateTreatmentResponsePredictionArray &gt; should return Err for an array containing invalid items" time="0.000391917">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateSymptomMappingArray &gt; should return Ok for a valid array of SymptomNeuralMapping" time="0.000088458">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateSymptomMappingArray &gt; should return Ok for an empty array" time="0.000040916">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateSymptomMappingArray &gt; should return Err for non-array input" time="0.000164084">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateSymptomMappingArray &gt; should return Err for an array containing invalid items" time="0.000122833">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateDiagnosisMappingArray &gt; should return Ok for a valid array of DiagnosisNeuralMapping" time="0.000471042">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateDiagnosisMappingArray &gt; should return Ok for an empty array" time="0.000040625">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateDiagnosisMappingArray &gt; should return Err for non-array input" time="0.000126375">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateDiagnosisMappingArray &gt; should return Err for an array containing invalid items" time="0.000358041">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateTreatmentMappingArray &gt; should return Ok for a valid array of TreatmentNeuralMapping" time="0.000719042">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateTreatmentMappingArray &gt; should return Ok for an empty array" time="0.000229458">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateTreatmentMappingArray &gt; should return Err for non-array input" time="0.000453667">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.runtime.test.ts" name="useClinicalContext Runtime Validation &gt; validateTreatmentMappingArray &gt; should return Err for an array containing invalid items" time="0.001484708">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useClinicalContext.test.ts" timestamp="2025-04-06T16:55:22.672Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.00352">
        <testcase classname="src/application/hooks/useClinicalContext.test.ts" name="useClinicalContext &gt; processes data with mathematical precision" time="0.000758292">
        </testcase>
        <testcase classname="src/application/hooks/useClinicalContext.test.ts" name="useClinicalContext &gt; handles edge cases with clinical precision" time="0.001905208">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/usePatientData.runtime.test.ts" timestamp="2025-04-06T16:55:22.672Z" hostname="MacBookPro" tests="8" failures="0" errors="0" skipped="0" time="0.004469167">
        <testcase classname="src/application/hooks/usePatientData.runtime.test.ts" name="usePatientData Runtime Validation &gt; validatePatientData &gt; should return Ok for a valid Patient object" time="0.000629792">
        </testcase>
        <testcase classname="src/application/hooks/usePatientData.runtime.test.ts" name="usePatientData Runtime Validation &gt; validatePatientData &gt; should return Err for non-object input" time="0.001692667">
        </testcase>
        <testcase classname="src/application/hooks/usePatientData.runtime.test.ts" name="usePatientData Runtime Validation &gt; validatePatientData &gt; should return Err for null input" time="0.000204333">
        </testcase>
        <testcase classname="src/application/hooks/usePatientData.runtime.test.ts" name="usePatientData Runtime Validation &gt; validatePatientData &gt; should return Err for an empty object" time="0.000120084">
        </testcase>
        <testcase classname="src/application/hooks/usePatientData.runtime.test.ts" name="usePatientData Runtime Validation &gt; validatePatientData &gt; should return Err for data missing required top-level fields (e.g., id)" time="0.000262834">
        </testcase>
        <testcase classname="src/application/hooks/usePatientData.runtime.test.ts" name="usePatientData Runtime Validation &gt; validatePatientData &gt; should return Err for data missing required nested fields (e.g., demographicData.age)" time="0.000127958">
        </testcase>
        <testcase classname="src/application/hooks/usePatientData.runtime.test.ts" name="usePatientData Runtime Validation &gt; validatePatientData &gt; should return Err for data with incorrect field types (e.g., id is number)" time="0.000246">
        </testcase>
        <testcase classname="src/application/hooks/usePatientData.runtime.test.ts" name="usePatientData Runtime Validation &gt; validatePatientData &gt; should return Err for data with incorrect nested field types (e.g., clinicalData.diagnoses is not array)" time="0.000167208">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/usePatientData.test.ts" timestamp="2025-04-06T16:55:22.673Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.003215">
        <testcase classname="src/application/hooks/usePatientData.test.ts" name="usePatientData &gt; processes data with mathematical precision" time="0.000741583">
        </testcase>
        <testcase classname="src/application/hooks/usePatientData.test.ts" name="usePatientData &gt; handles edge cases with clinical precision" time="0.001699">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useSearchParams.runtime.test.ts" timestamp="2025-04-06T16:55:22.673Z" hostname="MacBookPro" tests="9" failures="0" errors="0" skipped="0" time="0.004312583">
        <testcase classname="src/application/hooks/useSearchParams.runtime.test.ts" name="useSearchParams Runtime Validation &gt; validateParamsObject &gt; should return Ok for a valid ParamsObject" time="0.000379">
        </testcase>
        <testcase classname="src/application/hooks/useSearchParams.runtime.test.ts" name="useSearchParams Runtime Validation &gt; validateParamsObject &gt; should return Ok for an empty object" time="0.000133792">
        </testcase>
        <testcase classname="src/application/hooks/useSearchParams.runtime.test.ts" name="useSearchParams Runtime Validation &gt; validateParamsObject &gt; should return Err for non-object input" time="0.000148916">
        </testcase>
        <testcase classname="src/application/hooks/useSearchParams.runtime.test.ts" name="useSearchParams Runtime Validation &gt; validateParamsObject &gt; should return Err for array input" time="0.000320792">
        </testcase>
        <testcase classname="src/application/hooks/useSearchParams.runtime.test.ts" name="useSearchParams Runtime Validation &gt; validateParamsObject &gt; should return Err for null input" time="0.000214042">
        </testcase>
        <testcase classname="src/application/hooks/useSearchParams.runtime.test.ts" name="useSearchParams Runtime Validation &gt; validateParamsObject &gt; should return Err for object with invalid value type (boolean)" time="0.001539625">
        </testcase>
        <testcase classname="src/application/hooks/useSearchParams.runtime.test.ts" name="useSearchParams Runtime Validation &gt; validateParamsObject &gt; should return Err for object with invalid value type (undefined)" time="0.000138917">
        </testcase>
        <testcase classname="src/application/hooks/useSearchParams.runtime.test.ts" name="useSearchParams Runtime Validation &gt; validateParamsObject &gt; should return Err for object with invalid value type (object)" time="0.000252166">
        </testcase>
        <testcase classname="src/application/hooks/useSearchParams.runtime.test.ts" name="useSearchParams Runtime Validation &gt; validateParamsObject &gt; should return Err for object with invalid value type (array)" time="0.000133">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useSearchParams.test.tsx" timestamp="2025-04-06T16:55:22.674Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.016706042">
        <testcase classname="src/application/hooks/useSearchParams.test.tsx" name="useSearchParams &gt; processes data with mathematical precision" time="0.002623834">
        </testcase>
        <testcase classname="src/application/hooks/useSearchParams.test.tsx" name="useSearchParams &gt; handles edge cases with clinical precision" time="0.012800584">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useTheme.runtime.test.ts" timestamp="2025-04-06T16:55:22.674Z" hostname="MacBookPro" tests="13" failures="0" errors="0" skipped="0" time="0.005848292">
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Ok for a valid ThemeSettings object" time="0.000319833">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Ok for another valid ThemeSettings object (dark)" time="0.000077333">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Err for non-object input" time="0.0001555">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Err for null input" time="0.000205167">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Err for an empty object (missing required fields)" time="0.00010875">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Err for data missing a required field (e.g., name)" time="0.0003575">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Err for data with invalid theme name" time="0.000158291">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Err for data with incorrect field type (e.g., glowIntensity)" time="0.000124417">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Err for data with incorrect field type (e.g., useBloom)" time="0.000275791">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeSettings &gt; should return Err for data missing a required color field (e.g., primaryColor)" time="0.000197958">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeOption &gt; should return Ok for valid ThemeOption values" time="0.00076675">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeOption &gt; should return Err for invalid ThemeOption values" time="0.001108459">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.runtime.test.ts" name="useTheme Runtime Validation &gt; validateThemeOption &gt; should return specific error message for invalid option" time="0.000864291">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useTheme.test.tsx" timestamp="2025-04-06T16:55:22.675Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="1" time="0.010696584">
        <testcase classname="src/application/hooks/useTheme.test.tsx" name="useTheme &gt; returns the theme context value when used within a provider" time="0.009384833">
        </testcase>
        <testcase classname="src/application/hooks/useTheme.test.tsx" name="useTheme &gt; throws an error when used outside a provider" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useTreatmentPrediction.runtime.test.ts" timestamp="2025-04-06T16:55:22.675Z" hostname="MacBookPro" tests="15" failures="0" errors="0" skipped="0" time="0.005916791">
        <testcase classname="src/application/hooks/useTreatmentPrediction.runtime.test.ts" name="useTreatmentPrediction Runtime Validation &gt; validateClinicalPredictionData &gt; should return Ok for valid Domain ClinicalPredictionData" time="0.000689208">
        </testcase>
        <testcase classname="src/application/hooks/useTreatmentPrediction.runtime.test.ts" name="useTreatmentPrediction Runtime Validation &gt; validateClinicalPredictionData &gt; should return Err for invalid Domain ClinicalPredictionData" time="0.000928834">
        </testcase>
        <testcase classname="src/application/hooks/useTreatmentPrediction.runtime.test.ts" name="useTreatmentPrediction Runtime Validation &gt; validateClinicalPredictionData &gt; should return Err for non-object input" time="0.001416833">
        </testcase>
        <testcase classname="src/application/hooks/useTreatmentPrediction.runtime.test.ts" name="useTreatmentPrediction Runtime Validation &gt; validateGeneticPredictionData &gt; should return Ok for valid GeneticPredictionData (object)" time="0.000042833">
        </testcase>
        <testcase classname="src/application/hooks/useTreatmentPrediction.runtime.test.ts" name="useTreatmentPrediction Runtime Validation &gt; validateGeneticPredictionData &gt; should return Ok for valid GeneticPredictionData (empty object)" time="0.000034708">
        </testcase>
        <testcase classname="src/application/hooks/useTreatmentPrediction.runtime.test.ts" name="useTreatmentPrediction Runtime Validation &gt; validateGeneticPredictionData &gt; should return Ok for valid GeneticPredictionData (undefined)" time="0.00006875">
        </testcase>
        <testcase classname="src/application/hooks/useTreatmentPrediction.runtime.test.ts" name="useTreatmentPrediction Runtime Validation &gt; validateGeneticPredictionData &gt; should return Err for invalid GeneticPredictionData (null)" time="0.000101833">
        </testcase>
        <testcase classname="src/application/hooks/useTreatmentPrediction.runtime.test.ts" name="useTreatmentPrediction Runtime Validation &gt; validateGeneticPredictionData &gt; should return Err for invalid GeneticPredictionData (string)" time="0.000214875">
        </testcase>
        <testcase classname="src/application/hooks/useTreatmentPrediction.runtime.test.ts" name="useTreatmentPrediction Runtime Validation &gt; validateTreatmentResponseRequest &gt; should return Ok for valid TreatmentResponseRequest DTO" time="0.000113958">
        </testcase>
        <testcase classname="src/application/hooks/useTreatmentPrediction.runtime.test.ts" name="useTreatmentPrediction Runtime Validation &gt; validateTreatmentResponseRequest &gt; should return Err for invalid TreatmentResponseRequest DTO (missing clinical_data)" time="0.000134833">
        </testcase>
        <testcase classname="src/application/hooks/useTreatmentPrediction.runtime.test.ts" name="useTreatmentPrediction Runtime Validation &gt; validateTreatmentResponseRequest &gt; should return Err for invalid TreatmentResponseRequest DTO (invalid clinical_data structure)" time="0.000238">
        </testcase>
        <testcase classname="src/application/hooks/useTreatmentPrediction.runtime.test.ts" name="useTreatmentPrediction Runtime Validation &gt; validateTreatmentResponseRequest &gt; should return Err for non-object input" time="0.000112833">
        </testcase>
        <testcase classname="src/application/hooks/useTreatmentPrediction.runtime.test.ts" name="useTreatmentPrediction Runtime Validation &gt; validateTreatmentResponseResponse &gt; should return Ok for valid TreatmentResponseResponse DTO" time="0.000187542">
        </testcase>
        <testcase classname="src/application/hooks/useTreatmentPrediction.runtime.test.ts" name="useTreatmentPrediction Runtime Validation &gt; validateTreatmentResponseResponse &gt; should return Err for invalid TreatmentResponseResponse DTO (missing field)" time="0.000156042">
        </testcase>
        <testcase classname="src/application/hooks/useTreatmentPrediction.runtime.test.ts" name="useTreatmentPrediction Runtime Validation &gt; validateTreatmentResponseResponse &gt; should return Err for non-object input" time="0.000178792">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useTreatmentPrediction.test.ts" timestamp="2025-04-06T16:55:22.676Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.003319458">
        <testcase classname="src/application/hooks/useTreatmentPrediction.test.ts" name="useTreatmentPrediction &gt; processes data with mathematical precision" time="0.001205125">
        </testcase>
        <testcase classname="src/application/hooks/useTreatmentPrediction.test.ts" name="useTreatmentPrediction &gt; handles edge cases with clinical precision" time="0.001083042">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useVisualSettings.runtime.test.ts" timestamp="2025-04-06T16:55:22.676Z" hostname="MacBookPro" tests="13" failures="0" errors="0" skipped="0" time="0.005805">
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validatePartialVisualizationSettings &gt; should return Ok for a valid Partial&lt;VisualizationSettings&gt; object" time="0.000083042">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validatePartialVisualizationSettings &gt; should return Ok for an empty object (all fields optional)" time="0.000163541">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validatePartialVisualizationSettings &gt; should return Err for non-object input" time="0.000130917">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validatePartialVisualizationSettings &gt; should return Err for null input" time="0.000116875">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validatePartialVisualizationSettings &gt; should return Err for data with incorrect field type (e.g., showLabels)" time="0.000132125">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validatePartialVisualizationSettings &gt; should return Err for data with invalid enum value (e.g., renderMode)" time="0.000121375">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validatePartialVisualizationSettings &gt; should return Err for data with invalid enum value (e.g., levelOfDetail)" time="0.000241833">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validatePartialVisualizationSettings &gt; should return Err for invalid cameraPosition" time="0.000186583">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validateFullThemeSettings &gt; should return Ok for a valid ThemeSettings object" time="0.000402875">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validateFullThemeSettings &gt; should return Err for non-object input" time="0.000312166">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validateFullThemeSettings &gt; should return Err for an empty object (missing required fields)" time="0.00013775">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validateFullThemeSettings &gt; should return Err for data missing a required field (e.g., name)" time="0.000212125">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.runtime.test.ts" name="useVisualSettings Runtime Validation &gt; validateFullThemeSettings &gt; should return Err for data with incorrect field type (e.g., glowIntensity)" time="0.002143791">
        </testcase>
    </testsuite>
    <testsuite name="src/application/hooks/useVisualSettings.test.ts" timestamp="2025-04-06T16:55:22.677Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.002737708">
        <testcase classname="src/application/hooks/useVisualSettings.test.ts" name="useVisualSettings &gt; processes data with mathematical precision" time="0.000549792">
        </testcase>
        <testcase classname="src/application/hooks/useVisualSettings.test.ts" name="useVisualSettings &gt; handles edge cases with clinical precision" time="0.001482916">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/BiometricAlertVisualizer.test.tsx" timestamp="2025-04-06T16:55:22.677Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.070732958">
        <testcase classname="src/presentation/molecules/BiometricAlertVisualizer.test.tsx" name="BiometricAlertVisualizer &gt; renders alerts based on props" time="0.008513917">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:18.690Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/molecules/BiometricAlertVisualizer.test.tsx" name="BiometricAlertVisualizer &gt; renders acknowledged alerts when showAcknowledged is true" time="0.060112375">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:18.674Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
            <system-err>
The tag &lt;group&gt; is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/BrainRegionDetails.test.tsx" timestamp="2025-04-06T16:55:22.677Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.001328666">
        <testcase classname="src/presentation/molecules/BrainRegionDetails.test.tsx" name="BrainRegionDetails (Minimal) &gt; exists as a module" time="0.000492541">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/BrainRegionGroup.test.tsx" timestamp="2025-04-06T16:55:22.677Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/molecules/BrainRegionGroup.test.tsx" name="src/presentation/molecules/BrainRegionGroup.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined." type="TypeError">
TypeError: Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined.
 ‚ùØ Module.&lt;anonymous&gt; node_modules/its-fine/src/index.tsx:84:9
 ‚ùØ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:11:15
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/BrainRegionLabels.test.tsx" timestamp="2025-04-06T16:55:22.678Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/molecules/BrainRegionLabels.test.tsx" name="src/presentation/molecules/BrainRegionLabels.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined." type="TypeError">
TypeError: Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined.
 ‚ùØ Module.&lt;anonymous&gt; node_modules/its-fine/src/index.tsx:84:9
 ‚ùØ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:11:15
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/BrainRegionSelector.test.tsx" timestamp="2025-04-06T16:55:22.678Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.026719583">
        <testcase classname="src/presentation/molecules/BrainRegionSelector.test.tsx" name="BrainRegionSelector &gt; renders with clinical precision" time="0.025093208">
            <system-err>
React does not recognize the `selectedRegionId` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `selectedregionid` instead. If you accidentally passed it from a parent component, remove it from the DOM element.
Unknown event handler property `onSelectRegion`. It will be ignored.

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/BrainVisualizationControls.test.tsx" timestamp="2025-04-06T16:55:22.678Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.141439542">
        <testcase classname="src/presentation/molecules/BrainVisualizationControls.test.tsx" name="BrainVisualizationControls &gt; renders controls correctly" time="0.138821458">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:31.592Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/Chart.test.tsx" timestamp="2025-04-06T16:55:22.678Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.032884042">
        <testcase classname="src/presentation/molecules/Chart.test.tsx" name="Chart &gt; renders with neural precision" time="0.0043935">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:11.526Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/molecules/Chart.test.tsx" name="Chart &gt; responds to user interaction with quantum precision" time="0.026382917">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:11.520Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/ClinicalDataOverlay.test.tsx" timestamp="2025-04-06T16:55:22.679Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.025469917">
        <testcase classname="src/presentation/molecules/ClinicalDataOverlay.test.tsx" name="ClinicalDataOverlay &gt; renders with neural precision" time="0.004708334">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:20.297Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/molecules/ClinicalDataOverlay.test.tsx" name="ClinicalDataOverlay &gt; responds to user interaction with quantum precision" time="0.018532666">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:20.291Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/ClinicalMetricsCard.test.tsx" timestamp="2025-04-06T16:55:22.679Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.065115792">
        <testcase classname="src/presentation/molecules/ClinicalMetricsCard.test.tsx" name="ClinicalMetricCard &gt; renders with neural precision" time="0.003339875">
        </testcase>
        <testcase classname="src/presentation/molecules/ClinicalMetricsCard.test.tsx" name="ClinicalMetricCard &gt; responds to user interaction with quantum precision" time="0.060957209">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/DataStreamVisualizer.test.tsx" timestamp="2025-04-06T16:55:22.679Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/molecules/DataStreamVisualizer.test.tsx" name="src/presentation/molecules/DataStreamVisualizer.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined." type="TypeError">
TypeError: Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined.
 ‚ùØ Module.&lt;anonymous&gt; node_modules/its-fine/src/index.tsx:84:9
 ‚ùØ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:11:15
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/Header.test.tsx" timestamp="2025-04-06T16:55:22.679Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.068454">
        <testcase classname="src/presentation/molecules/Header.test.tsx" name="Header &gt; renders with neural precision" time="0.004309458">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:27.632Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/molecules/Header.test.tsx" name="Header &gt; responds to user interaction with quantum precision" time="0.061955166">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:27.625Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/NeuralActivityVisualizer.test.tsx" timestamp="2025-04-06T16:55:22.680Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/molecules/NeuralActivityVisualizer.test.tsx" name="src/presentation/molecules/NeuralActivityVisualizer.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined." type="TypeError">
TypeError: Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined.
 ‚ùØ Module.&lt;anonymous&gt; node_modules/its-fine/src/index.tsx:84:9
 ‚ùØ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:11:15
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/NeuralConnections.test.tsx" timestamp="2025-04-06T16:55:22.680Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/molecules/NeuralConnections.test.tsx" name="src/presentation/molecules/NeuralConnections.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined." type="TypeError">
TypeError: Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined.
 ‚ùØ Module.&lt;anonymous&gt; node_modules/its-fine/src/index.tsx:84:9
 ‚ùØ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:11:15
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/PatientHeader.test.tsx" timestamp="2025-04-06T16:55:22.680Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/molecules/PatientHeader.test.tsx" name="src/presentation/molecules/PatientHeader.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@/application/utils/cn&quot; from &quot;src/presentation/atoms/Avatar.tsx&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@/application/utils/cn&quot; from &quot;src/presentation/atoms/Avatar.tsx&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/Avatar.tsx:2:19
  1  |  import { jsxDEV } from &quot;react/jsx-dev-runtime&quot;;
  2  |  import React from &quot;react&quot;;
  3  |  import { cn } from &quot;@/application/utils/cn&quot;;
     |                      ^
  4  |  const Avatar = ({
  5  |    src,
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/Avatar.tsx&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/Avatar.tsx&apos;, line: 2, column: 19 }, frame: &apos;1  |  import { jsxDEV } from &quot;react/jsx-dev-runtime&quot;;\n2  |  import React from &quot;react&quot;;\n3  |  import { cn } from &quot;@/application/utils/cn&quot;;\n   |                      ^\n4  |  const Avatar = ({\n5  |    src,&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/RegionSelectionPanel.test.tsx" timestamp="2025-04-06T16:55:22.681Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.032724">
        <testcase classname="src/presentation/molecules/RegionSelectionPanel.test.tsx" name="RegionSelectionPanel &gt; renders with neural precision" time="0.005085417">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:19.674Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/molecules/RegionSelectionPanel.test.tsx" name="RegionSelectionPanel &gt; responds to user interaction with quantum precision" time="0.025460375">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:19.666Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/SymptomRegionMappingVisualizer.test.tsx" timestamp="2025-04-06T16:55:22.681Z" hostname="MacBookPro" tests="3" failures="0" errors="0" skipped="0" time="0.029341">
        <testcase classname="src/presentation/molecules/SymptomRegionMappingVisualizer.test.tsx" name="SymptomRegionMappingVisualizer &gt; renders connections for active symptoms" time="0.013382042">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:14.518Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
            <system-err>
The tag &lt;group&gt; is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.

            </system-err>
        </testcase>
        <testcase classname="src/presentation/molecules/SymptomRegionMappingVisualizer.test.tsx" name="SymptomRegionMappingVisualizer &gt; renders all connections when showAllConnections is true" time="0.003515667">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:14.533Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/molecules/SymptomRegionMappingVisualizer.test.tsx" name="SymptomRegionMappingVisualizer &gt; does not render labels when showSymptomLabels is false" time="0.010120833">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:14.524Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/TemporalDynamicsVisualizer.test.tsx" timestamp="2025-04-06T16:55:22.681Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/molecules/TemporalDynamicsVisualizer.test.tsx" name="src/presentation/molecules/TemporalDynamicsVisualizer.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined." type="TypeError">
TypeError: Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined.
 ‚ùØ Module.&lt;anonymous&gt; node_modules/its-fine/src/index.tsx:84:9
 ‚ùØ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:11:15
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/TherapeuticTimelineVisualizer.test.tsx" timestamp="2025-04-06T16:55:22.682Z" hostname="MacBookPro" tests="1" failures="0" errors="0" skipped="0" time="0.016681375">
        <testcase classname="src/presentation/molecules/TherapeuticTimelineVisualizer.test.tsx" name="TherapeuticTimelineVisualizer &gt; renders with clinical precision" time="0.015845166">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/TimelineEvent.test.tsx" timestamp="2025-04-06T16:55:22.682Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/molecules/TimelineEvent.test.tsx" name="src/presentation/molecules/TimelineEvent.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Failed to resolve import &quot;@/application/utils/cn&quot; from &quot;src/presentation/atoms/Badge.tsx&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@/application/utils/cn&quot; from &quot;src/presentation/atoms/Badge.tsx&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/Badge.tsx:3:19
  1  |  import { jsxDEV } from &quot;react/jsx-dev-runtime&quot;;
  2  |  import { cva } from &quot;class-variance-authority&quot;;
  3  |  import { cn } from &quot;@/application/utils/cn&quot;;
     |                      ^
  4  |  const badgeVariants = cva(
  5  |    &quot;inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2&quot;,
 ‚ùØ TransformPluginContext._formatLog node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47885:41
 ‚ùØ TransformPluginContext.error node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47882:16
 ‚ùØ normalizeUrl node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46015:23
 ‚ùØ node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46134:37
 ‚ùØ TransformPluginContext.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:46061:7
 ‚ùØ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18
 ‚ùØ loadAndTransform node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
Serialized Error: { __vitest_rollup_error__: { plugin: &apos;vite:import-analysis&apos;, id: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/Badge.tsx&apos;, loc: { file: &apos;/Users/ray/Desktop/GITHUB/Novamind-Frontend/src/presentation/atoms/Badge.tsx&apos;, line: 3, column: 19 }, frame: &apos;1  |  import { jsxDEV } from &quot;react/jsx-dev-runtime&quot;;\n2  |  import { cva } from &quot;class-variance-authority&quot;;\n3  |  import { cn } from &quot;@/application/utils/cn&quot;;\n   |                      ^\n4  |  const badgeVariants = cva(\n5  |    &quot;inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2&quot;,&apos; } }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/TreatmentResponseVisualizer.test.tsx" timestamp="2025-04-06T16:55:22.682Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/molecules/TreatmentResponseVisualizer.test.tsx" name="src/presentation/molecules/TreatmentResponseVisualizer.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined." type="TypeError">
TypeError: Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined.
 ‚ùØ Module.&lt;anonymous&gt; node_modules/its-fine/src/index.tsx:84:9
 ‚ùØ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:11:15
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/VisualizationControls.test.tsx" timestamp="2025-04-06T16:55:22.683Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.12822625">
        <testcase classname="src/presentation/molecules/VisualizationControls.test.tsx" name="VisualizationControls &gt; renders with neural precision" time="0.0037335">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:18.247Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/molecules/VisualizationControls.test.tsx" name="VisualizationControls &gt; responds to user interaction with quantum precision" time="0.122316208">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:18.140Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/molecules/index.test.ts" timestamp="2025-04-06T16:55:22.684Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.001431625">
        <testcase classname="src/presentation/molecules/index.test.ts" name="index &gt; processes data with mathematical precision" time="0.000151875">
        </testcase>
        <testcase classname="src/presentation/molecules/index.test.ts" name="index &gt; handles edge cases with clinical precision" time="0.000595708">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/providers/ThemeProvider.test.tsx" timestamp="2025-04-06T16:55:22.684Z" hostname="MacBookPro" tests="5" failures="1" errors="0" skipped="0" time="0.110982625">
        <testcase classname="src/presentation/providers/ThemeProvider.test.tsx" name="ThemeProvider &gt; uses system theme by default" time="0.011738291">
        </testcase>
        <testcase classname="src/presentation/providers/ThemeProvider.test.tsx" name="ThemeProvider &gt; loads saved theme from localStorage" time="0.003364959">
        </testcase>
        <testcase classname="src/presentation/providers/ThemeProvider.test.tsx" name="ThemeProvider &gt; allows changing theme" time="0.075390583">
        </testcase>
        <testcase classname="src/presentation/providers/ThemeProvider.test.tsx" name="ThemeProvider &gt; follows system theme when set to system" time="0.008619916">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ‚ùØ src/presentation/providers/ThemeProvider.test.tsx:124:66
            </failure>
        </testcase>
        <testcase classname="src/presentation/providers/ThemeProvider.test.tsx" name="ThemeProvider &gt; throws error when useTheme is used outside ThemeProvider" time="0.011054917">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/templates/AuthRoute.test.tsx" timestamp="2025-04-06T16:55:22.685Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.025350709">
        <testcase classname="src/presentation/templates/AuthRoute.test.tsx" name="AuthRoute &gt; renders Outlet when authenticated" time="0.003604958">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:19.474Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/templates/AuthRoute.test.tsx" name="AuthRoute &gt; renders Navigate to /login when not authenticated" time="0.019322125">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:19.462Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/templates/BrainModelContainer.test.tsx" timestamp="2025-04-06T16:55:22.685Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/templates/BrainModelContainer.test.tsx" name="src/presentation/templates/BrainModelContainer.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined." type="TypeError">
TypeError: Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined.
 ‚ùØ Module.&lt;anonymous&gt; node_modules/its-fine/src/index.tsx:84:9
 ‚ùØ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:11:15
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/templates/ErrorBoundary.test.tsx" timestamp="2025-04-06T16:55:22.685Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.0191905">
        <testcase classname="src/presentation/templates/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; renders with neural precision" time="0.003196167">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:30.293Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/templates/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; responds to user interaction with quantum precision" time="0.013889209">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:30.288Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/templates/MainLayout.test.tsx" timestamp="2025-04-06T16:55:22.686Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.186163583">
        <testcase classname="src/presentation/templates/MainLayout.test.tsx" name="MainLayout &gt; renders with neural precision" time="0.021456792">
            <system-out>
[TEST] matchMedia called with query: (prefers-color-scheme: dark)
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:30.830Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/templates/MainLayout.test.tsx" name="MainLayout &gt; responds to user interaction with quantum precision" time="0.162696084">
            <system-out>
[TEST] matchMedia called with query: (prefers-color-scheme: dark)
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:30.728Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:30.802Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to dark&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/shared/utils/performanceUtils.test.ts" timestamp="2025-04-06T16:55:22.686Z" hostname="MacBookPro" tests="3" failures="0" errors="0" skipped="0" time="0.006569208">
        <testcase classname="src/shared/utils/performanceUtils.test.ts" name="debounce &gt; should only call the function after the delay" time="0.003206333">
        </testcase>
        <testcase classname="src/shared/utils/performanceUtils.test.ts" name="debounce &gt; should pass arguments to the debounced function" time="0.001848042">
        </testcase>
        <testcase classname="src/shared/utils/performanceUtils.test.ts" name="debounce &gt; should reset the timer if called again within the delay" time="0.000657333">
        </testcase>
    </testsuite>
    <testsuite name="src/test/examples/tailwind-enhanced.test.tsx" timestamp="2025-04-06T16:55:22.686Z" hostname="MacBookPro" tests="5" failures="0" errors="0" skipped="0" time="0.039598083">
        <testcase classname="src/test/examples/tailwind-enhanced.test.tsx" name="Card Component with Tailwind CSS &gt; renders with correct base classes in light mode" time="0.011053791">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:12.232Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/test/examples/tailwind-enhanced.test.tsx" name="Card Component with Tailwind CSS &gt; renders with dark mode classes when dark mode is enabled" time="0.003244333">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:12.242Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/test/examples/tailwind-enhanced.test.tsx" name="Card Component with Tailwind CSS &gt; applies secondary variant classes correctly" time="0.00332375">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:12.247Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/test/examples/tailwind-enhanced.test.tsx" name="Card Component with Tailwind CSS &gt; applies custom className alongside Tailwind classes" time="0.002277583">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:12.244Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/test/examples/tailwind-enhanced.test.tsx" name="Card Component with Tailwind CSS &gt; toggles between light and dark mode" time="0.014442333">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:12.226Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/test/webgl/mock-webgl.test.ts" timestamp="2025-04-06T16:55:22.687Z" hostname="MacBookPro" tests="6" failures="1" errors="0" skipped="5" time="0.006390875">
        <testcase classname="src/test/webgl/mock-webgl.test.ts" name="WebGL Mocking &gt; should mock WebGL context successfully" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/test/webgl/mock-webgl.test.ts" name="WebGL Mocking &gt; should mock WebGL2 context successfully" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/test/webgl/mock-webgl.test.ts" name="WebGL Mocking &gt; should mock animation frame APIs" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/test/webgl/mock-webgl.test.ts" name="WebGL Mocking &gt; should create Three.js mock objects" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/test/webgl/mock-webgl.test.ts" name="WebGL Mocking &gt; should handle matchMedia for responsive testing" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/test/webgl/mock-webgl.test.ts" name="Three.js Component Integration &gt; should handle Three.js component rendering without hanging" time="0.005473666">
            <failure message="gl.getShaderPrecisionFormat is not a function" type="TypeError">
TypeError: gl.getShaderPrecisionFormat is not a function
 ‚ùØ getMaxPrecision node_modules/three/build/three.module.js:2317:12
 ‚ùØ new WebGLCapabilities node_modules/three/build/three.module.js:2344:23
 ‚ùØ initGLContext node_modules/three/build/three.module.js:14991:19
 ‚ùØ new WebGLRenderer node_modules/three/build/three.module.js:15102:3
 ‚ùØ src/test/webgl/mock-webgl.test.ts:161:22
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/test/webgl/three-mocks.test.ts" timestamp="2025-04-06T16:55:22.687Z" hostname="MacBookPro" tests="6" failures="0" errors="0" skipped="0" time="0.00891225">
        <testcase classname="src/test/webgl/three-mocks.test.ts" name="Three.js Mocking &gt; should create a basic Three.js scene" time="0.002212583">
        </testcase>
        <testcase classname="src/test/webgl/three-mocks.test.ts" name="Three.js Mocking &gt; should handle cleanup and memory management" time="0.000525959">
        </testcase>
        <testcase classname="src/test/webgl/three-mocks.test.ts" name="Three.js Mocking &gt; should handle parent-child relationships correctly" time="0.000418292">
        </testcase>
        <testcase classname="src/test/webgl/three-mocks.test.ts" name="Three.js Mocking &gt; should support traversal of object hierarchies" time="0.001700959">
        </testcase>
        <testcase classname="src/test/webgl/three-mocks.test.ts" name="Three.js Renderer Mocking &gt; should handle rendering without errors" time="0.000585">
        </testcase>
        <testcase classname="src/test/webgl/three-mocks.test.ts" name="Three.js Renderer Mocking &gt; should support renderer configuration" time="0.002273292">
        </testcase>
    </testsuite>
    <testsuite name="src/application/controllers/coordinators/NeuralVisualizationCoordinator.test.tsx" timestamp="2025-04-06T16:55:22.688Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0">
        <testcase classname="src/application/controllers/coordinators/NeuralVisualizationCoordinator.test.tsx" name="VisualizationCoordinatorProvider &gt; renders with neural precision" time="0">
        </testcase>
        <testcase classname="src/application/controllers/coordinators/NeuralVisualizationCoordinator.test.tsx" name="VisualizationCoordinatorProvider &gt; responds to user interaction with quantum precision" time="0">
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/brain/brain-model.service.runtime.test.ts" timestamp="2025-04-06T16:55:22.688Z" hostname="MacBookPro" tests="23" failures="4" errors="0" skipped="0" time="0.0103355">
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; isBrainModel &gt; returns true for valid BrainModel objects" time="0.005132791">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ‚ùØ src/application/services/brain/brain-model.service.runtime.test.ts:71:40
            </failure>
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; isBrainModel &gt; returns false for non-object values" time="0.000185375">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; isBrainModel &gt; returns false for objects missing required properties" time="0.000281542">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateBrainModel &gt; returns success for valid BrainModel objects" time="0.000759166">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ‚ùØ src/application/services/brain/brain-model.service.runtime.test.ts:182:30
            </failure>
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateBrainModel &gt; returns failure for non-object values" time="0.000210375">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateBrainModel &gt; returns failure for objects with invalid regions" time="0.000075917">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateBrainModel &gt; returns failure for objects with invalid connections" time="0.000184041">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateBrainModel &gt; includes the field path in error messages when provided" time="0.000116125">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; isBrainRegion &gt; returns true for valid BrainRegion objects" time="0.000047625">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; isBrainRegion &gt; returns false for non-object values" time="0.000060083">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; isBrainRegion &gt; returns false for objects missing required properties" time="0.000072791">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateBrainRegion &gt; returns success for valid BrainRegion objects" time="0.00022725">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateBrainRegion &gt; returns failure for non-object values" time="0.000066791">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateBrainRegion &gt; returns failure for objects with invalid activityLevel" time="0.0001335">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateBrainRegion &gt; includes the field path in error messages when provided" time="0.00026125">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; isNeuralConnection &gt; returns true for valid NeuralConnection objects" time="0.000272875">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ‚ùØ src/application/services/brain/brain-model.service.runtime.test.ts:385:51
            </failure>
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; isNeuralConnection &gt; returns false for non-object values" time="0.000065167">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; isNeuralConnection &gt; returns false for objects missing required properties" time="0.000060209">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateNeuralConnection &gt; returns success for valid NeuralConnection objects" time="0.000542666">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ‚ùØ src/application/services/brain/brain-model.service.runtime.test.ts:434:30
            </failure>
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateNeuralConnection &gt; returns failure for non-object values" time="0.000090083">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateNeuralConnection &gt; returns failure for objects with invalid strength" time="0.000061083">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateNeuralConnection &gt; returns failure for objects with invalid type" time="0.000068042">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.runtime.test.ts" name="BrainModelService Runtime Validation &gt; validateNeuralConnection &gt; includes the field path in error messages when provided" time="0.000105">
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/brain/brain-model.service.test.ts" timestamp="2025-04-06T16:55:22.690Z" hostname="MacBookPro" tests="9" failures="0" errors="0" skipped="0" time="0.007166958">
        <testcase classname="src/application/services/brain/brain-model.service.test.ts" name="Brain Model Service &gt; fetchBrainModel &gt; successfully fetches a brain model by ID" time="0.001684917">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.test.ts" name="Brain Model Service &gt; fetchBrainModel &gt; handles API error responses appropriately" time="0.000142166">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.test.ts" name="Brain Model Service &gt; fetchBrainModel &gt; handles network errors gracefully" time="0.000337417">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.test.ts" name="Brain Model Service &gt; searchBrainModels &gt; performs search with correct parameters" time="0.000807125">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.test.ts" name="Brain Model Service &gt; updateRegion &gt; successfully updates a brain region" time="0.000298666">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.test.ts" name="Brain Model Service &gt; updateConnection &gt; successfully updates a neural connection" time="0.000371333">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.test.ts" name="Brain Model Service &gt; createAnnotation &gt; successfully creates an annotation" time="0.000331708">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.test.ts" name="Brain Model Service &gt; generateModel &gt; successfully initiates model generation" time="0.000770834">
        </testcase>
        <testcase classname="src/application/services/brain/brain-model.service.test.ts" name="Brain Model Service &gt; checkGenerationStatus &gt; retrieves the current generation status" time="0.001099375">
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/clinical/clinical.service.minimal.test.ts" timestamp="2025-04-06T16:55:22.691Z" hostname="MacBookPro" tests="4" failures="0" errors="0" skipped="0" time="0.0049915">
        <testcase classname="src/application/services/clinical/clinical.service.minimal.test.ts" name="clinicalService &gt; fetchSymptomMappings &gt; fetches neural mappings with psychiatric precision" time="0.002384583">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.minimal.test.ts" name="clinicalService &gt; fetchRiskAssessment &gt; fetches patient risk assessment with HIPAA compliance" time="0.000498375">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.minimal.test.ts" name="clinicalService &gt; updateSymptom &gt; updates symptom with clinical precision" time="0.000268917">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.minimal.test.ts" name="clinicalService &gt; generateTemporalProjections &gt; generates precise temporal projections for treatment response" time="0.000970625">
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/clinical/clinical.service.runtime.test.ts" timestamp="2025-04-06T16:55:22.691Z" hostname="MacBookPro" tests="27" failures="0" errors="0" skipped="0" time="0.00563075">
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isSymptom &gt; returns true for valid Symptom objects" time="0.000186791">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isSymptom &gt; returns false for non-object values" time="0.000157333">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isSymptom &gt; returns false for objects missing required properties" time="0.0000825">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateSymptom &gt; returns success for valid Symptom objects" time="0.00006625">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateSymptom &gt; returns failure for non-object values" time="0.000121916">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateSymptom &gt; returns failure for objects with invalid severity" time="0.00005625">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateSymptom &gt; returns failure for objects with invalid onset date" time="0.000062666">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateSymptom &gt; includes the field path in error messages when provided" time="0.000138666">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isDiagnosis &gt; returns true for valid Diagnosis objects" time="0.000055416">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isDiagnosis &gt; returns false for non-object values" time="0.00007075">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isDiagnosis &gt; returns false for objects missing required properties" time="0.00003975">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateDiagnosis &gt; returns success for valid Diagnosis objects" time="0.000189208">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateDiagnosis &gt; returns failure for objects with invalid severity" time="0.000090333">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateDiagnosis &gt; returns failure for objects with invalid status" time="0.00010125">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isTreatment &gt; returns true for valid Treatment objects" time="0.000036084">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isTreatment &gt; returns false for non-object values" time="0.000072959">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateTreatment &gt; returns success for valid Treatment objects" time="0.001152708">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateTreatment &gt; returns success for valid Treatment with endDate" time="0.000156709">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateTreatment &gt; returns failure for objects with invalid endDate" time="0.000225333">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isRiskAssessment &gt; returns true for valid RiskAssessment objects" time="0.000075416">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isRiskAssessment &gt; returns false for non-object values" time="0.000156875">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateRiskAssessment &gt; returns success for valid RiskAssessment objects" time="0.000075709">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateRiskAssessment &gt; returns failure for objects with invalid risk level" time="0.000135083">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isTreatmentResponsePrediction &gt; returns true for valid TreatmentResponsePrediction objects" time="0.000088875">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; isTreatmentResponsePrediction &gt; returns false for non-object values" time="0.000074625">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateTreatmentResponsePrediction &gt; returns success for valid TreatmentResponsePrediction objects" time="0.000085667">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.runtime.test.ts" name="ClinicalService Runtime Validation &gt; validateTreatmentResponsePrediction &gt; returns failure for objects with invalid timeToEffect" time="0.000155875">
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/clinical/clinical.service.test.ts" timestamp="2025-04-06T16:55:22.693Z" hostname="MacBookPro" tests="11" failures="0" errors="0" skipped="0" time="0.04064">
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; fetchSymptomMappings &gt; successfully fetches symptom neural mappings" time="0.000905">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; fetchSymptomMappings &gt; handles API error responses appropriately" time="0.011178167">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; fetchDiagnosisMappings &gt; successfully fetches diagnosis neural mappings" time="0.000257292">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; fetchTreatmentMappings &gt; successfully fetches treatment neural mappings" time="0.010142791">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; fetchRiskAssessment &gt; successfully fetches patient risk assessment" time="0.000651125">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; fetchRiskAssessment &gt; handles patient not found errors" time="0.000508416">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; fetchTreatmentPredictions &gt; successfully fetches treatment response predictions" time="0.001818708">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; fetchPatientSymptoms &gt; successfully fetches patient symptoms" time="0.001211208">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; updateSymptom &gt; successfully updates a patient symptom" time="0.00909225">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; generateAlgorithmExplanation &gt; successfully generates an algorithm explanation" time="0.001586083">
        </testcase>
        <testcase classname="src/application/services/clinical/clinical.service.test.ts" name="Clinical Service &gt; generateTemporalProjections &gt; successfully generates temporal projections" time="0.001354416">
        </testcase>
    </testsuite>
    <testsuite name="src/application/services/clinical/risk-assessment.service.test.ts" timestamp="2025-04-06T16:55:22.694Z" hostname="MacBookPro" tests="13" failures="0" errors="0" skipped="0" time="0.003148459">
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateDepressionRiskLevel &gt; correctly calculates critical risk level" time="0.000162917">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateDepressionRiskLevel &gt; correctly calculates high risk level" time="0.000085292">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateDepressionRiskLevel &gt; correctly calculates moderate risk level" time="0.000170625">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateDepressionRiskLevel &gt; correctly calculates low risk level" time="0.000060916">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateDepressionRiskLevel &gt; correctly calculates minimal risk level" time="0.000773375">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateAnxietyRiskLevel &gt; correctly calculates critical risk level" time="0.000078042">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateAnxietyRiskLevel &gt; correctly calculates high risk level" time="0.000045833">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateAnxietyRiskLevel &gt; correctly calculates moderate risk level" time="0.00005625">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateOverallRiskLevel &gt; correctly calculates critical overall risk" time="0.00006375">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateOverallRiskLevel &gt; correctly calculates high overall risk" time="0.000156">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateOverallRiskLevel &gt; correctly calculates moderate overall risk" time="0.000081959">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateOverallRiskLevel &gt; correctly weighs risk factors" time="0.000218541">
        </testcase>
        <testcase classname="src/application/services/clinical/risk-assessment.service.test.ts" name="RiskAssessmentService &gt; calculateOverallRiskLevel &gt; correctly accounts for social support as a protective factor" time="0.000119334">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/models/brain/brain-model.runtime.test.ts" timestamp="2025-04-06T16:55:22.695Z" hostname="MacBookPro" tests="10" failures="0" errors="0" skipped="0" time="0.005103084">
        <testcase classname="src/domain/models/brain/brain-model.runtime.test.ts" name="Brain Model Runtime Validators &gt; BrainRegionValidator &gt; validates valid BrainRegion objects" time="0.000738208">
        </testcase>
        <testcase classname="src/domain/models/brain/brain-model.runtime.test.ts" name="Brain Model Runtime Validators &gt; BrainRegionValidator &gt; rejects invalid BrainRegion objects" time="0.00021275">
        </testcase>
        <testcase classname="src/domain/models/brain/brain-model.runtime.test.ts" name="Brain Model Runtime Validators &gt; BrainRegionValidator &gt; normalizes partial BrainRegion objects" time="0.000703208">
        </testcase>
        <testcase classname="src/domain/models/brain/brain-model.runtime.test.ts" name="Brain Model Runtime Validators &gt; NeuralConnectionValidator &gt; validates valid NeuralConnection objects" time="0.000117041">
        </testcase>
        <testcase classname="src/domain/models/brain/brain-model.runtime.test.ts" name="Brain Model Runtime Validators &gt; NeuralConnectionValidator &gt; rejects invalid NeuralConnection objects" time="0.000109">
        </testcase>
        <testcase classname="src/domain/models/brain/brain-model.runtime.test.ts" name="Brain Model Runtime Validators &gt; NeuralConnectionValidator &gt; normalizes partial NeuralConnection objects" time="0.000235708">
        </testcase>
        <testcase classname="src/domain/models/brain/brain-model.runtime.test.ts" name="Brain Model Runtime Validators &gt; BrainModelValidator &gt; validates valid BrainModel objects" time="0.000130458">
        </testcase>
        <testcase classname="src/domain/models/brain/brain-model.runtime.test.ts" name="Brain Model Runtime Validators &gt; BrainModelValidator &gt; rejects invalid BrainModel objects" time="0.000325125">
        </testcase>
        <testcase classname="src/domain/models/brain/brain-model.runtime.test.ts" name="Brain Model Runtime Validators &gt; BrainModelValidator &gt; normalizes partial BrainModel objects" time="0.000212">
        </testcase>
        <testcase classname="src/domain/models/brain/brain-model.runtime.test.ts" name="Brain Model Runtime Validators &gt; BrainModelValidator &gt; normalizes model with partial regions and connections" time="0.000262959">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/utils/brain/type-verification.test.ts" timestamp="2025-04-06T16:55:22.696Z" hostname="MacBookPro" tests="27" failures="0" errors="0" skipped="0" time="0.006007041">
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; verifyVector3 &gt; verifies valid Vector3 objects" time="0.000362">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; verifyVector3 &gt; fails on non-object values" time="0.000121">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; verifyVector3 &gt; fails when coordinates are not numbers" time="0.00027775">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; verifyVector3 &gt; fails when coordinates are missing" time="0.000170625">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; safelyParseVector3 &gt; returns Vector3 for valid objects" time="0.000081958">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; safelyParseVector3 &gt; converts string or non-numeric values" time="0.000041042">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; safelyParseVector3 &gt; uses fallback for missing values" time="0.000044042">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; safelyParseVector3 &gt; returns fallback for non-object values" time="0.000146167">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; verifyRenderMode &gt; verifies valid RenderMode values" time="0.000049209">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; verifyRenderMode &gt; fails on invalid RenderMode values" time="0.000077833">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; verifyBrainRegion &gt; verifies valid BrainRegion objects" time="0.000085375">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; verifyBrainRegion &gt; accepts optional properties" time="0.000060583">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; verifyBrainRegion &gt; fails when required properties are missing" time="0.0000395">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; verifyBrainRegion &gt; fails when properties have wrong types" time="0.000042625">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; verifyNeuralConnection &gt; verifies valid NeuralConnection objects" time="0.000490625">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; verifyNeuralConnection &gt; accepts optional properties" time="0.000073208">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; verifyNeuralConnection &gt; fails when required properties are missing" time="0.000053625">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; verifyBrainModel &gt; verifies valid BrainModel objects" time="0.000412">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; verifyBrainModel &gt; accepts optional properties" time="0.0000565">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; verifyBrainModel &gt; fails when required properties are missing" time="0.000039792">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; verifyBrainModel &gt; fails when arrays contain invalid items" time="0.000058916">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; assertion functions &gt; assertVector3 passes for valid Vector3" time="0.001112292">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; assertion functions &gt; assertVector3 throws for invalid Vector3" time="0.000085292">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; assertion functions &gt; assertRenderMode passes for valid RenderMode" time="0.000097541">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; assertion functions &gt; assertRenderMode throws for invalid RenderMode" time="0.000187959">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; assertion functions &gt; assertBrainRegion passes for valid BrainRegion" time="0.000189791">
        </testcase>
        <testcase classname="src/domain/utils/brain/type-verification.test.ts" name="Brain type verification &gt; assertion functions &gt; assertBrainRegion throws for invalid BrainRegion" time="0.000197833">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/models/clinical/patient-model.runtime.test.ts" timestamp="2025-04-06T16:55:22.698Z" hostname="MacBookPro" tests="19" failures="0" errors="0" skipped="0" time="0.006700666">
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; PatientDemographicsValidator &gt; validates valid PatientDemographics objects" time="0.000704833">
        </testcase>
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; PatientDemographicsValidator &gt; rejects invalid PatientDemographics objects" time="0.000232916">
        </testcase>
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; PatientDemographicsValidator &gt; normalizes partial PatientDemographics objects" time="0.00012725">
        </testcase>
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; ClinicalHistoryValidator &gt; validates valid ClinicalHistory objects" time="0.00013725">
        </testcase>
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; ClinicalHistoryValidator &gt; rejects invalid ClinicalHistory objects" time="0.001129625">
        </testcase>
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; ClinicalHistoryValidator &gt; normalizes partial ClinicalHistory objects" time="0.000103375">
        </testcase>
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; MedicationValidator &gt; validates valid Medication objects" time="0.000109791">
        </testcase>
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; MedicationValidator &gt; rejects invalid Medication objects" time="0.000075334">
        </testcase>
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; MedicationValidator &gt; normalizes partial Medication objects" time="0.00011">
        </testcase>
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; SymptomValidator &gt; validates valid Symptom objects" time="0.000683541">
        </testcase>
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; SymptomValidator &gt; rejects invalid Symptom objects" time="0.000127333">
        </testcase>
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; SymptomValidator &gt; normalizes partial Symptom objects" time="0.000635708">
        </testcase>
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; TreatmentResponseValidator &gt; validates valid TreatmentResponse objects" time="0.00006975">
        </testcase>
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; TreatmentResponseValidator &gt; rejects invalid TreatmentResponse objects" time="0.000116208">
        </testcase>
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; TreatmentResponseValidator &gt; normalizes partial TreatmentResponse objects" time="0.000088417">
        </testcase>
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; PatientModelValidator &gt; validates valid PatientModel objects" time="0.000182667">
        </testcase>
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; PatientModelValidator &gt; rejects invalid PatientModel objects" time="0.000093625">
        </testcase>
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; PatientModelValidator &gt; normalizes partial PatientModel objects" time="0.000436083">
        </testcase>
        <testcase classname="src/domain/models/clinical/patient-model.runtime.test.ts" name="Patient Model Runtime Validators &gt; PatientModelValidator &gt; normalizes model with partial nested objects" time="0.000232125">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/models/shared/type-verification.runtime.test.ts" timestamp="2025-04-06T16:55:22.699Z" hostname="MacBookPro" tests="36" failures="0" errors="0" skipped="0" time="0.006307333">
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="TypeVerificationError &gt; formats error message with property path" time="0.000675375">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="TypeVerificationError &gt; formats error message without property path" time="0.000173958">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="TypeVerificationError &gt; handles different value types correctly" time="0.000206583">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Assertion functions &gt; assertDefined &gt; passes for defined values" time="0.000432792">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Assertion functions &gt; assertDefined &gt; throws for undefined values" time="0.000096292">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Assertion functions &gt; assertPresent &gt; passes for present values" time="0.000123792">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Assertion functions &gt; assertPresent &gt; throws for null or undefined values" time="0.000062709">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Assertion functions &gt; assertString &gt; passes for strings" time="0.000236167">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Assertion functions &gt; assertString &gt; throws for non-strings" time="0.000225209">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Assertion functions &gt; assertNumber &gt; passes for numbers" time="0.000117791">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Assertion functions &gt; assertNumber &gt; throws for non-numbers" time="0.0001645">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Validation functions &gt; validateDefined &gt; returns true for defined values" time="0.000055167">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Validation functions &gt; validateDefined &gt; returns false for undefined values" time="0.000056">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Validation functions &gt; validatePresent &gt; returns true for present values" time="0.000046375">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Validation functions &gt; validatePresent &gt; returns false for null or undefined values" time="0.000065042">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Validation functions &gt; validateString &gt; returns true for strings" time="0.000037083">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Validation functions &gt; validateString &gt; returns false for non-strings" time="0.000100667">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Validation functions &gt; validateArrayOf &gt; validates arrays with valid elements" time="0.000079666">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Validation functions &gt; validateArrayOf &gt; rejects arrays with invalid elements" time="0.000056417">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Validation functions &gt; validateArrayOf &gt; rejects non-arrays" time="0.000048084">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Validation functions &gt; validateProperty &gt; validates object properties" time="0.000048917">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Validation functions &gt; validateProperty &gt; rejects invalid properties" time="0.000036375">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Validation functions &gt; validateProperty &gt; rejects missing properties" time="0.000038583">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Validation functions &gt; validateProperty &gt; rejects non-objects" time="0.000050375">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Validation functions &gt; validateOneOf &gt; validates values from allowed set" time="0.000044958">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Validation functions &gt; validateOneOf &gt; rejects values not in allowed set" time="0.000057125">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Validation functions &gt; createObjectValidator &gt; creates a validator for an object type" time="0.000258083">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Type conversion functions &gt; asString &gt; converts values to strings" time="0.000179041">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Type conversion functions &gt; asString &gt; returns undefined for null/undefined" time="0.00009475">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Type conversion functions &gt; asNumber &gt; converts valid values to numbers" time="0.000051458">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Type conversion functions &gt; asNumber &gt; returns undefined for invalid numbers" time="0.000130834">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Type conversion functions &gt; asBoolean &gt; converts boolean values" time="0.000081542">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Type conversion functions &gt; asBoolean &gt; converts string and number values to booleans" time="0.000102625">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Type conversion functions &gt; asBoolean &gt; returns undefined for invalid values" time="0.000212791">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Type conversion functions &gt; asDate &gt; converts valid values to dates" time="0.000279292">
        </testcase>
        <testcase classname="src/domain/models/shared/type-verification.runtime.test.ts" name="Type conversion functions &gt; asDate &gt; returns undefined for invalid dates" time="0.000107125">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/utils/clinical/type-verification.test.ts" timestamp="2025-04-06T16:55:22.706Z" hostname="MacBookPro" tests="29" failures="0" errors="0" skipped="0" time="0.008626667">
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyRiskLevel &gt; verifies valid RiskLevel values" time="0.000280167">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyRiskLevel &gt; fails on invalid RiskLevel values" time="0.00016575">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifySymptom &gt; verifies valid Symptom objects" time="0.000104875">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifySymptom &gt; accepts optional properties" time="0.00030425">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifySymptom &gt; fails when required properties are missing" time="0.000044333">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifySymptom &gt; fails when properties have wrong types" time="0.000049292">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyDiagnosis &gt; verifies valid Diagnosis objects" time="0.000110125">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyDiagnosis &gt; accepts optional properties" time="0.000126875">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyDiagnosis &gt; fails when required properties are missing" time="0.000042166">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyDiagnosis &gt; verifies valid string date for diagnosisDate" time="0.000038291">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyDiagnosis &gt; fails when diagnosisDate is not a string" time="0.000186083">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyTreatment &gt; verifies valid Treatment objects" time="0.000129125">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyTreatment &gt; accepts optional properties" time="0.000260208">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyTreatment &gt; fails when required properties are missing" time="0.000051666">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyTreatmentResponse &gt; verifies valid TreatmentResponse objects" time="0.000670875">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyTreatmentResponse &gt; accepts optional properties" time="0.000221834">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyTreatmentResponse &gt; fails when required properties are missing" time="0.000114083">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyTreatmentResponse &gt; fails when date is not a Date object" time="0.000067292">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyPatient &gt; verifies valid Patient objects" time="0.000483375">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyPatient &gt; accepts optional properties" time="0.000134583">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyPatient &gt; verifies arrays of clinical data" time="0.000967166">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyPatient &gt; fails when required properties are missing" time="0.000068625">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; verifyPatient &gt; fails when arrays contain invalid items" time="0.000090208">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; assertion functions &gt; assertRiskLevel passes for valid RiskLevel" time="0.001023125">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; assertion functions &gt; assertRiskLevel throws for invalid RiskLevel" time="0.000172375">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; assertion functions &gt; assertSymptom passes for valid Symptom" time="0.0001145">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; assertion functions &gt; assertSymptom throws for invalid Symptom" time="0.000392125">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; assertion functions &gt; assertPatient passes for valid Patient" time="0.000413041">
        </testcase>
        <testcase classname="src/domain/utils/clinical/type-verification.test.ts" name="Clinical type verification &gt; assertion functions &gt; assertPatient throws for invalid Patient" time="0.000382625">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/utils/shared/type-verification.test.ts" timestamp="2025-04-06T16:55:22.708Z" hostname="MacBookPro" tests="36" failures="0" errors="0" skipped="0" time="0.009362959">
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; TypeVerificationError &gt; formats error message correctly" time="0.000355375">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; safelyParseNumber &gt; returns number for numeric values" time="0.000095792">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; safelyParseNumber &gt; parses numeric strings" time="0.000047125">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; safelyParseNumber &gt; converts boolean values" time="0.000044917">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; safelyParseNumber &gt; returns fallback for non-numeric values" time="0.000081959">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; safelyParseBoolean &gt; returns boolean for boolean values" time="0.000067334">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; safelyParseBoolean &gt; parses string representations" time="0.000082125">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; safelyParseBoolean &gt; parses numeric values" time="0.00004275">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; safelyParseBoolean &gt; returns fallback for non-boolean values" time="0.000075209">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; safelyParseString &gt; returns string for string values" time="0.000199">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; safelyParseString &gt; converts non-string values to strings" time="0.000088125">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; safelyParseString &gt; returns fallback for null/undefined" time="0.000089625">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; verifyString &gt; verifies valid strings" time="0.000057208">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; verifyString &gt; fails on non-string values" time="0.000095875">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; verifyString &gt; includes field name in error when provided" time="0.000052042">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; verifyNumber &gt; verifies valid numbers" time="0.003814417">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; verifyNumber &gt; fails on non-number values" time="0.000233959">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; verifyNumber &gt; fails on NaN" time="0.000192875">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; verifyBoolean &gt; verifies valid booleans" time="0.000127083">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; verifyBoolean &gt; fails on non-boolean values" time="0.0002015">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; verifyArray &gt; verifies valid arrays" time="0.000097709">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; verifyArray &gt; fails on non-array values" time="0.000118125">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; verifyArray &gt; verifies array items with provided verifier" time="0.000140625">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; verifyArray &gt; fails when any array item fails verification" time="0.000073625">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; verifyObject &gt; verifies valid objects" time="0.000314208">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; verifyObject &gt; fails on non-object values" time="0.000112875">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; assertion functions &gt; assertString passes for valid strings" time="0.000076917">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; assertion functions &gt; assertString throws for non-strings" time="0.000047625">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; assertion functions &gt; assertNumber passes for valid numbers" time="0.000057583">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; assertion functions &gt; assertNumber throws for non-numbers" time="0.000057084">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; assertion functions &gt; assertBoolean passes for valid booleans" time="0.000056125">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; assertion functions &gt; assertBoolean throws for non-booleans" time="0.000135666">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; assertion functions &gt; assertArray passes for valid arrays" time="0.000357125">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; assertion functions &gt; assertArray throws for non-arrays" time="0.0000415">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; assertion functions &gt; assertObject passes for valid objects" time="0.000075791">
        </testcase>
        <testcase classname="src/domain/utils/shared/type-verification.test.ts" name="Shared type verification &gt; assertion functions &gt; assertObject throws for non-objects" time="0.000042667">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/types/brain/activity.test.ts" timestamp="2025-04-06T16:55:22.710Z" hostname="MacBookPro" tests="7" failures="0" errors="0" skipped="0" time="0.002590167">
        <testcase classname="src/domain/types/brain/activity.test.ts" name="activity type definitions &gt; exports ActivationLevel with correct structure" time="0.000274459">
        </testcase>
        <testcase classname="src/domain/types/brain/activity.test.ts" name="activity type definitions &gt; can use NeuralActivityState type for activity states" time="0.000132209">
        </testcase>
        <testcase classname="src/domain/types/brain/activity.test.ts" name="activity type definitions &gt; can use NeuralActivationPattern type for activation patterns" time="0.000115458">
        </testcase>
        <testcase classname="src/domain/types/brain/activity.test.ts" name="activity type definitions &gt; can use NeuralStateTransition type for neural transitions" time="0.000078542">
        </testcase>
        <testcase classname="src/domain/types/brain/activity.test.ts" name="activity type definitions &gt; can use TemporalActivationSequence type for sequences" time="0.000149666">
        </testcase>
        <testcase classname="src/domain/types/brain/activity.test.ts" name="activity type definitions &gt; can use NeuralActivityHeatmap type for spatial activity maps" time="0.000157792">
        </testcase>
        <testcase classname="src/domain/types/brain/activity.test.ts" name="activity type definitions &gt; can use ActivityVisualizationSettings type for visualization" time="0.000646792">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/types/brain/core-models.runtime.test.ts" timestamp="2025-04-06T16:55:22.710Z" hostname="MacBookPro" tests="10" failures="0" errors="0" skipped="0" time="0.005232875">
        <testcase classname="src/domain/types/brain/core-models.runtime.test.ts" name="Brain Core Models runtime validators &gt; Vector3Validator &gt; validates valid Vector3 objects" time="0.0001775">
        </testcase>
        <testcase classname="src/domain/types/brain/core-models.runtime.test.ts" name="Brain Core Models runtime validators &gt; Vector3Validator &gt; rejects invalid Vector3 objects" time="0.000576292">
        </testcase>
        <testcase classname="src/domain/types/brain/core-models.runtime.test.ts" name="Brain Core Models runtime validators &gt; CoordinateValidator &gt; validates valid Coordinate objects" time="0.000094917">
        </testcase>
        <testcase classname="src/domain/types/brain/core-models.runtime.test.ts" name="Brain Core Models runtime validators &gt; CoordinateValidator &gt; rejects invalid Coordinate objects" time="0.000131375">
        </testcase>
        <testcase classname="src/domain/types/brain/core-models.runtime.test.ts" name="Brain Core Models runtime validators &gt; BrainRegionValidator &gt; validates valid BrainRegion objects" time="0.000090959">
        </testcase>
        <testcase classname="src/domain/types/brain/core-models.runtime.test.ts" name="Brain Core Models runtime validators &gt; BrainRegionValidator &gt; rejects invalid BrainRegion objects" time="0.00025175">
        </testcase>
        <testcase classname="src/domain/types/brain/core-models.runtime.test.ts" name="Brain Core Models runtime validators &gt; ConnectionValidator &gt; validates valid Connection objects" time="0.0000875">
        </testcase>
        <testcase classname="src/domain/types/brain/core-models.runtime.test.ts" name="Brain Core Models runtime validators &gt; ConnectionValidator &gt; rejects invalid Connection objects" time="0.000427875">
        </testcase>
        <testcase classname="src/domain/types/brain/core-models.runtime.test.ts" name="Brain Core Models runtime validators &gt; BrainModelValidator &gt; validates valid BrainModel objects" time="0.0005075">
        </testcase>
        <testcase classname="src/domain/types/brain/core-models.runtime.test.ts" name="Brain Core Models runtime validators &gt; BrainModelValidator &gt; rejects invalid BrainModel objects" time="0.001218">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/types/brain/index.test.ts" timestamp="2025-04-06T16:55:22.711Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.001584709">
        <testcase classname="src/domain/types/brain/index.test.ts" name="index &gt; processes data with mathematical precision" time="0.0001585">
        </testcase>
        <testcase classname="src/domain/types/brain/index.test.ts" name="index &gt; handles edge cases with clinical precision" time="0.000628334">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/types/brain/models.test.ts" timestamp="2025-04-06T16:55:22.711Z" hostname="MacBookPro" tests="8" failures="0" errors="0" skipped="0" time="0.002406">
        <testcase classname="src/domain/types/brain/models.test.ts" name="models type definitions &gt; exports BrainRegion with correct structure" time="0.000154917">
        </testcase>
        <testcase classname="src/domain/types/brain/models.test.ts" name="models type definitions &gt; exports NeuralConnection with correct structure" time="0.000635375">
        </testcase>
        <testcase classname="src/domain/types/brain/models.test.ts" name="models type definitions &gt; exports BrainScan with correct structure" time="0.000224084">
        </testcase>
        <testcase classname="src/domain/types/brain/models.test.ts" name="models type definitions &gt; exports BrainModel with correct structure" time="0.00006725">
        </testcase>
        <testcase classname="src/domain/types/brain/models.test.ts" name="models type definitions &gt; exports NeuralActivity with correct structure" time="0.000129958">
        </testcase>
        <testcase classname="src/domain/types/brain/models.test.ts" name="models type definitions &gt; exports ActivityTimeSeries with correct structure" time="0.000079917">
        </testcase>
        <testcase classname="src/domain/types/brain/models.test.ts" name="models type definitions &gt; exports RegionClinicalData with correct structure" time="0.000075459">
        </testcase>
        <testcase classname="src/domain/types/brain/models.test.ts" name="models type definitions &gt; exports undefined with correct structure" time="0.000044708">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/types/brain/visualization.runtime.test.ts" timestamp="2025-04-06T16:55:22.712Z" hostname="MacBookPro" tests="9" failures="0" errors="0" skipped="0" time="0.003302291">
        <testcase classname="src/domain/types/brain/visualization.runtime.test.ts" name="Brain Visualization runtime validators &gt; RenderModeValidator validates correct render modes" time="0.000278417">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.runtime.test.ts" name="Brain Visualization runtime validators &gt; VisualizationSettingsValidator validates correct VisualizationSettings objects" time="0.000171708">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.runtime.test.ts" name="Brain Visualization runtime validators &gt; ThemeOptionValidator validates correct theme options" time="0.000153083">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.runtime.test.ts" name="Brain Visualization runtime validators &gt; ThemeSettingsValidator validates correct ThemeSettings objects" time="0.000296125">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.runtime.test.ts" name="Brain Visualization runtime validators &gt; BrainVisualizationPropsValidator validates correct BrainVisualizationProps objects" time="0.000116792">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.runtime.test.ts" name="Brain Visualization runtime validators &gt; BrainVisualizationStateValidator validates correct BrainVisualizationState objects" time="0.000814959">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.runtime.test.ts" name="Brain Visualization runtime validators &gt; ProcessedBrainDataValidator validates correct ProcessedBrainData objects" time="0.00009475">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.runtime.test.ts" name="Brain Visualization runtime validators &gt; ProcessedBrainRegionValidator validates correct ProcessedBrainRegion objects" time="0.0002895">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.runtime.test.ts" name="Brain Visualization runtime validators &gt; ProcessedNeuralConnectionValidator validates correct ProcessedNeuralConnection objects" time="0.000108833">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/types/brain/visualization.test.ts" timestamp="2025-04-06T16:55:22.712Z" hostname="MacBookPro" tests="12" failures="0" errors="0" skipped="0" time="0.002773083">
        <testcase classname="src/domain/types/brain/visualization.test.ts" name="visualization type definitions &gt; exports visualizationThemes with correct structure" time="0.000095959">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.test.ts" name="visualization type definitions &gt; exports defaultVisualizationSettings with correct structure" time="0.000080375">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.test.ts" name="visualization type definitions &gt; exports RenderMode with correct structure" time="0.000064459">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.test.ts" name="visualization type definitions &gt; can use VisualizationSettings type for settings objects" time="0.000180917">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.test.ts" name="visualization type definitions &gt; can use ThemeOption type for theme values" time="0.000108792">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.test.ts" name="visualization type definitions &gt; can use ThemeSettings type for theme configuration" time="0.000036292">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.test.ts" name="visualization type definitions &gt; can use BrainVisualizationProps type for component props" time="0.000120042">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.test.ts" name="visualization type definitions &gt; can use BrainVisualizationState type for component states" time="0.0002015">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.test.ts" name="visualization type definitions &gt; can use ProcessedBrainData type for visualization data" time="0.000175792">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.test.ts" name="visualization type definitions &gt; can use ProcessedBrainRegion type for region rendering data" time="0.000043625">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.test.ts" name="visualization type definitions &gt; can use ProcessedNeuralConnection type for connection rendering data" time="0.000575667">
        </testcase>
        <testcase classname="src/domain/types/brain/visualization.test.ts" name="visualization type definitions &gt; exports utility functions for type validation" time="0.000099834">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/types/neural/transforms.runtime.test.ts" timestamp="2025-04-06T16:55:22.713Z" hostname="MacBookPro" tests="4" failures="0" errors="0" skipped="0" time="0.002507">
        <testcase classname="src/domain/types/neural/transforms.runtime.test.ts" name="Neural Transforms runtime validators &gt; NeuralTransformValidator validates correct NeuralTransform objects" time="0.000765833">
        </testcase>
        <testcase classname="src/domain/types/neural/transforms.runtime.test.ts" name="Neural Transforms runtime validators &gt; NeuralTransformBatchValidator validates correct NeuralTransformBatch objects" time="0.000133375">
        </testcase>
        <testcase classname="src/domain/types/neural/transforms.runtime.test.ts" name="Neural Transforms runtime validators &gt; NeuralTransformSequenceValidator validates correct NeuralTransformSequence objects" time="0.000265208">
        </testcase>
        <testcase classname="src/domain/types/neural/transforms.runtime.test.ts" name="Neural Transforms runtime validators &gt; NeuralTransformResultValidator validates correct NeuralTransformResult objects" time="0.00038475">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/types/neural/transforms.test.ts" timestamp="2025-04-06T16:55:22.713Z" hostname="MacBookPro" tests="4" failures="0" errors="0" skipped="0" time="0.002055542">
        <testcase classname="src/domain/types/neural/transforms.test.ts" name="transforms type definitions &gt; exports NeuralTransform with correct structure" time="0.000675083">
        </testcase>
        <testcase classname="src/domain/types/neural/transforms.test.ts" name="transforms type definitions &gt; exports NeuralTransformBatch with correct structure" time="0.00007125">
        </testcase>
        <testcase classname="src/domain/types/neural/transforms.test.ts" name="transforms type definitions &gt; exports NeuralTransformSequence with correct structure" time="0.000140833">
        </testcase>
        <testcase classname="src/domain/types/neural/transforms.test.ts" name="transforms type definitions &gt; exports NeuralTransformResult with correct structure" time="0.000181">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/types/clinical/patient.runtime.test.ts" timestamp="2025-04-06T16:55:22.714Z" hostname="MacBookPro" tests="5" failures="0" errors="0" skipped="0" time="0.002367334">
        <testcase classname="src/domain/types/clinical/patient.runtime.test.ts" name="Patient runtime validators &gt; PatientValidator validates correct Patient objects" time="0.0002655">
        </testcase>
        <testcase classname="src/domain/types/clinical/patient.runtime.test.ts" name="Patient runtime validators &gt; PatientDemographicsValidator validates correct PatientDemographics objects" time="0.000159542">
        </testcase>
        <testcase classname="src/domain/types/clinical/patient.runtime.test.ts" name="Patient runtime validators &gt; DiagnosisValidator validates correct Diagnosis objects" time="0.00009975">
        </testcase>
        <testcase classname="src/domain/types/clinical/patient.runtime.test.ts" name="Patient runtime validators &gt; SymptomValidator validates correct Symptom objects" time="0.000158125">
        </testcase>
        <testcase classname="src/domain/types/clinical/patient.runtime.test.ts" name="Patient runtime validators &gt; MedicationValidator validates correct Medication objects" time="0.000694875">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/types/clinical/risk-level.runtime.test.ts" timestamp="2025-04-06T16:55:22.714Z" hostname="MacBookPro" tests="3" failures="0" errors="0" skipped="0" time="0.002233459">
        <testcase classname="src/domain/types/clinical/risk-level.runtime.test.ts" name="Risk Level runtime validators &gt; RiskLevelValidator validates correct risk levels" time="0.000974583">
        </testcase>
        <testcase classname="src/domain/types/clinical/risk-level.runtime.test.ts" name="Risk Level runtime validators &gt; RiskLevelValidator normalizes risk levels correctly" time="0.000127042">
        </testcase>
        <testcase classname="src/domain/types/clinical/risk-level.runtime.test.ts" name="Risk Level runtime validators &gt; RiskLevelValidator returns correct severity levels" time="0.000266416">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/types/clinical/risk.runtime.test.ts" timestamp="2025-04-06T16:55:22.714Z" hostname="MacBookPro" tests="5" failures="0" errors="0" skipped="0" time="0.002550041">
        <testcase classname="src/domain/types/clinical/risk.runtime.test.ts" name="Risk runtime validators &gt; RiskLevelValidator validates correct RiskLevel values" time="0.000364417">
        </testcase>
        <testcase classname="src/domain/types/clinical/risk.runtime.test.ts" name="Risk runtime validators &gt; RiskAssessmentValidator validates correct RiskAssessment objects" time="0.000222875">
        </testcase>
        <testcase classname="src/domain/types/clinical/risk.runtime.test.ts" name="Risk runtime validators &gt; DomainRiskValidator validates correct DomainRisk objects" time="0.00013525">
        </testcase>
        <testcase classname="src/domain/types/clinical/risk.runtime.test.ts" name="Risk runtime validators &gt; ContributingFactorValidator validates correct ContributingFactor objects" time="0.000136792">
        </testcase>
        <testcase classname="src/domain/types/clinical/risk.runtime.test.ts" name="Risk runtime validators &gt; ProtectiveFactorValidator validates correct ProtectiveFactor objects" time="0.00071525">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/types/clinical/treatment.runtime.test.ts" timestamp="2025-04-06T16:55:22.715Z" hostname="MacBookPro" tests="9" failures="0" errors="0" skipped="0" time="0.002989708">
        <testcase classname="src/domain/types/clinical/treatment.runtime.test.ts" name="Treatment runtime validators &gt; TreatmentTypeValidator validates correct treatment types" time="0.000281584">
        </testcase>
        <testcase classname="src/domain/types/clinical/treatment.runtime.test.ts" name="Treatment runtime validators &gt; TreatmentResponseRequestValidator validates correct TreatmentResponseRequest objects" time="0.000180291">
        </testcase>
        <testcase classname="src/domain/types/clinical/treatment.runtime.test.ts" name="Treatment runtime validators &gt; TreatmentDetailsValidator validates correct TreatmentDetails objects" time="0.000136708">
        </testcase>
        <testcase classname="src/domain/types/clinical/treatment.runtime.test.ts" name="Treatment runtime validators &gt; TreatmentDetailsValidator.isValidMedication validates medication details" time="0.000223375">
        </testcase>
        <testcase classname="src/domain/types/clinical/treatment.runtime.test.ts" name="Treatment runtime validators &gt; ClinicalPredictionDataValidator validates correct ClinicalPredictionData objects" time="0.000118041">
        </testcase>
        <testcase classname="src/domain/types/clinical/treatment.runtime.test.ts" name="Treatment runtime validators &gt; GeneticPredictionDataValidator validates correct GeneticPredictionData objects" time="0.0006855">
        </testcase>
        <testcase classname="src/domain/types/clinical/treatment.runtime.test.ts" name="Treatment runtime validators &gt; BiomarkerDataValidator validates correct BiomarkerData objects" time="0.000075458">
        </testcase>
        <testcase classname="src/domain/types/clinical/treatment.runtime.test.ts" name="Treatment runtime validators &gt; TreatmentResponsePredictionValidator validates correct TreatmentResponsePrediction objects" time="0.000242417">
        </testcase>
        <testcase classname="src/domain/types/clinical/treatment.runtime.test.ts" name="Treatment runtime validators &gt; TreatmentComparisonResultValidator validates correct TreatmentComparisonResult objects" time="0.000110583">
        </testcase>
    </testsuite>
    <testsuite name="src/domain/types/shared/common.runtime.test.ts" timestamp="2025-04-06T16:55:22.715Z" hostname="MacBookPro" tests="22" failures="0" errors="0" skipped="0" time="0.0046405">
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; IDValidator &gt; validates valid IDs" time="0.000093042">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; IDValidator &gt; rejects invalid IDs" time="0.000463625">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; TimestampedEntityValidator &gt; validates valid TimestampedEntity objects" time="0.000039542">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; TimestampedEntityValidator &gt; rejects invalid TimestampedEntity objects" time="0.000104791">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; UserGeneratedContentValidator &gt; validates valid UserGeneratedContent objects" time="0.000114709">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; UserGeneratedContentValidator &gt; rejects invalid UserGeneratedContent objects" time="0.000154208">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; AuditableValidator &gt; validates valid Auditable objects" time="0.000041334">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; AuditableValidator &gt; rejects invalid Auditable objects" time="0.00007625">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; VersionedEntityValidator &gt; validates valid VersionedEntity objects" time="0.00004175">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; VersionedEntityValidator &gt; rejects invalid VersionedEntity objects" time="0.000084125">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; SortOrderValidator &gt; validates valid SortOrder values" time="0.000046167">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; SortOrderValidator &gt; rejects invalid SortOrder values" time="0.000082917">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; RangeValidator &gt; validates valid Range objects" time="0.000089167">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; RangeValidator &gt; rejects invalid Range objects" time="0.000105666">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; Point2DValidator &gt; validates valid Point2D objects" time="0.00007975">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; Point2DValidator &gt; rejects invalid Point2D objects" time="0.000275959">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; ColorRGBValidator &gt; validates valid ColorRGB objects" time="0.000061084">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; ColorRGBValidator &gt; rejects invalid ColorRGB objects" time="0.000077167">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; ColorRGBAValidator &gt; validates valid ColorRGBA objects" time="0.0001635">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; ColorRGBAValidator &gt; rejects invalid ColorRGBA objects" time="0.000727666">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; DimensionsValidator &gt; validates valid Dimensions objects" time="0.000060416">
        </testcase>
        <testcase classname="src/domain/types/shared/common.runtime.test.ts" name="Common Shared Types runtime validators &gt; DimensionsValidator &gt; rejects invalid Dimensions objects" time="0.00011675">
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/containers/__tests__/BrainModelContainer.test.tsx" timestamp="2025-04-06T16:55:22.716Z" hostname="MacBookPro" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/presentation/containers/__tests__/BrainModelContainer.test.tsx" name="src/presentation/containers/__tests__/BrainModelContainer.test.tsx" time="0">
            <system-out>
[TEST SETUP] Global setup complete.

            </system-out>
            <failure message="Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined." type="TypeError">
TypeError: Cannot destructure property &apos;ReactCurrentOwner&apos; of &apos;React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED&apos; as it is undefined.
 ‚ùØ Module.&lt;anonymous&gt; node_modules/its-fine/src/index.tsx:84:9
 ‚ùØ Object.&lt;anonymous&gt; node_modules/@react-three/fiber/dist/events-485b18b5.cjs.dev.js:11:15
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/organisms/__tests__/BrainVisualizationExample.test.tsx" timestamp="2025-04-06T16:55:22.717Z" hostname="MacBookPro" tests="5" failures="0" errors="0" skipped="0" time="0.038245667">
        <testcase classname="src/presentation/organisms/__tests__/BrainVisualizationExample.test.tsx" name="BrainVisualization Component with WebGL Mocks &gt; renders the brain visualization" time="0.004781333">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:21.606Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/organisms/__tests__/BrainVisualizationExample.test.tsx" name="BrainVisualization Component with WebGL Mocks &gt; allows selecting brain regions" time="0.0211415">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:21.593Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/organisms/__tests__/BrainVisualizationExample.test.tsx" name="BrainVisualization with runTestWithWebGL utility &gt; renders with different detail levels" time="0.003112375">
            <system-out>
WebGL mocks set up
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:21.616Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

WebGL mocks cleaned up

            </system-out>
        </testcase>
        <testcase classname="src/presentation/organisms/__tests__/BrainVisualizationExample.test.tsx" name="BrainVisualization with Neural Controller Mocks &gt; renders with neural activity data" time="0.001838709">
            <system-out>
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:21.612Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="src/presentation/organisms/__tests__/BrainVisualizationExample.test.tsx" name="BrainVisualization Memory Management &gt; properly disposes resources when unmounted" time="0.003026667">
            <system-out>
WebGL mocks set up
[AuditLogClient] SYSTEM_CONFIG_CHANGE: {
  timestamp: [35m2025-04-06T16:54:21.610Z[39m,
  eventType: [32m&apos;SYSTEM_CONFIG_CHANGE&apos;[39m,
  action: [32m&apos;THEME_CHANGE&apos;[39m,
  result: [32m&apos;success&apos;[39m,
  details: [32m&apos;Theme changed to clinical&apos;[39m
}

WebGL mocks cleaned up

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/presentation/shaders/shaders/neuralGlow.test.ts" timestamp="2025-04-06T16:55:22.718Z" hostname="MacBookPro" tests="2" failures="0" errors="0" skipped="0" time="0.002107875">
        <testcase classname="src/presentation/shaders/shaders/neuralGlow.test.ts" name="createNeuralGlowUniforms &gt; processes data with mathematical precision" time="0.000275">
        </testcase>
        <testcase classname="src/presentation/shaders/shaders/neuralGlow.test.ts" name="createNeuralGlowUniforms &gt; handles edge cases with clinical precision" time="0.000955375">
        </testcase>
    </testsuite>
    <testsuite name="src/test/webgl/examples/BrainRegionVisualizer.test.ts" timestamp="2025-04-06T16:55:22.718Z" hostname="MacBookPro" tests="4" failures="0" errors="0" skipped="4" time="0">
        <testcase classname="src/test/webgl/examples/BrainRegionVisualizer.test.ts" name="BrainRegionVisualizer &gt; should create all brain regions" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/test/webgl/examples/BrainRegionVisualizer.test.ts" name="BrainRegionVisualizer &gt; should highlight a brain region" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/test/webgl/examples/BrainRegionVisualizer.test.ts" name="BrainRegionVisualizer &gt; should render without errors" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/test/webgl/examples/BrainRegionVisualizer.test.ts" name="BrainRegionVisualizer &gt; should properly clean up resources when disposed" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="src/domain/models/brain/mapping/brain-mapping.test.ts" timestamp="2025-04-06T16:55:22.719Z" hostname="MacBookPro" tests="5" failures="0" errors="0" skipped="0" time="0.002785875">
        <testcase classname="src/domain/models/brain/mapping/brain-mapping.test.ts" name="calculateNeuralActivation &gt; should calculate activation based on symptoms only" time="0.000318416">
        </testcase>
        <testcase classname="src/domain/models/brain/mapping/brain-mapping.test.ts" name="calculateNeuralActivation &gt; should calculate activation based on diagnoses only" time="0.000237667">
        </testcase>
        <testcase classname="src/domain/models/brain/mapping/brain-mapping.test.ts" name="calculateNeuralActivation &gt; should combine symptom and diagnosis activations quadratically" time="0.000108083">
        </testcase>
        <testcase classname="src/domain/models/brain/mapping/brain-mapping.test.ts" name="calculateNeuralActivation &gt; should return 0 activation if no mappings match" time="0.000225416">
        </testcase>
        <testcase classname="src/domain/models/brain/mapping/brain-mapping.test.ts" name="calculateNeuralActivation &gt; should cap activation at 1.0" time="0.000898291">
        </testcase>
    </testsuite>
</testsuites>
